<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Git子模块</title>
      <link href="/git-submodule/"/>
      <url>/git-submodule/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote><p>也许我们经常会遇到：某个工作中的项目需要包含并使用另一个项目。 也许是第三方库，或者你独立开发的，用于多个父项目的库。 现在问题来了：你想要把它们当做两个独立的项目，同时又想在一个项目中使用另一个。<br>当然如果你拥有<code>私有的npm服务</code>也是可以做到，这里只讲如何通过<code>git submodule</code>来做公用库的管理及多人协作开发。</p></blockquote><h3 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="step3"><a href="#step3" class="headerlink" title="step3"></a>step3</h3><p>从上游仓库拉取分支和提交点，并会被存储在一个本地分支 <code>upstream/master</code><br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch upstream</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">切换到本地主分支(如果不在master)。</span><br></pre></td></tr></table></figure></p><p>$ git checkout master<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">把`upstream/master`分支合并到本地`master`分支。</span><br><span class="line">``` </span><br><span class="line">$ git merge upstream/master</span><br></pre></td></tr></table></figure></p><p>提交到自己的fork地址，完成同步。<br><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">push</span> <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>渐进式Web应用(PWA)未完待续</title>
      <link href="/web-pwa/"/>
      <url>/web-pwa/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote><p>2015提出这个思想，到ios12的发布，使他可在ios中添加主屏幕；PWA是个集合，不指某一项技术，通过一些新技术对web app改进，在安全、性能、体验等方面都有很大提升，是</p></blockquote><h3 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h3><p>PWA 是可被发现、易安装、可链接、独立于网络、渐进式、可重用、响应性和安全的。详情请看 <a href="https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Advantages" target="_blank" rel="noopener">PWA的优势</a>。</p><h3 id="Service-Worker-以下简称SW"><a href="#Service-Worker-以下简称SW" class="headerlink" title="Service Worker(以下简称SW)"></a>Service Worker(以下简称SW)</h3><blockquote><p>SW提供离线体验、后台同步、推送通知的技术基础（定期同步、地理围栏后续推出），SW的’前身’<a href="https://www.html5rocks.com/zh/tutorials/appcache/beginner/" target="_blank" rel="noopener">AppCache</a>;</p><ol><li>创建并行进程；<br> <a href="https://www.html5rocks.com/zh/tutorials/workers/basics/" target="_blank" rel="noopener">web Worker</a>利用类似线程的消息传递<code>worker.postMessage()</code>实现并行。这非常适合您确保对 UI 的刷新、性能以及对用户的响应。</li><li></li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="应用"><a href="#应用" class="headerlink" title="应用:"></a>应用:</h3><p><a href="https://www.html5rocks.com/zh/tutorials/appcache/beginner/" target="_blank" rel="noopener">AppCache</a><br><a href="https://www.html5rocks.com/zh/tutorials/workers/basics/" target="_blank" rel="noopener">web Worker</a><br><a href="https://developers.google.cn/web/progressive-web-apps/checklist" target="_blank" rel="noopener">是否为完整渐进式Web应用核对表</a></p><h3 id="引用参考"><a href="#引用参考" class="headerlink" title="引用参考"></a>引用参考</h3><p><a href="https://huangxuan.me/2017/07/12/upgrading-eleme-to-pwa/" target="_blank" rel="noopener">饿了么的PWA升级实践</a></p>]]></content>
      
      
      <categories>
          
          <category> Web Api </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Git更新fork仓库</title>
      <link href="/git-update-fork/"/>
      <url>/git-update-fork/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><blockquote><p>这里只讲github的fork仓库同步更新命令，其他平台差异不大</p></blockquote><h3 id="step1"><a href="#step1" class="headerlink" title="step1"></a>step1</h3><p>查看当前为fork配置的远程存储库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line">// origingit@github.com:xkh/awesome-wechat-weapp.git (fetch)</span><br><span class="line">// origingit@github.com:xkh/awesome-wechat-weapp.git (push)</span><br></pre></td></tr></table></figure></p><h3 id="step2"><a href="#step2" class="headerlink" title="step2"></a>step2</h3><p>指定将与fork同步的新远程上游存储库地址<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add upstream https://xxx被fork的原始仓库地址</span><br><span class="line"></span><br><span class="line">//再次查看远程仓库</span><br><span class="line">$ git remote -v</span><br><span class="line">// origingit@github.com:xkh/awesome-wechat-weapp.git (fetch)</span><br><span class="line">// origingit@github.com:xkh/awesome-wechat-weapp.git (push)</span><br><span class="line">// upstreamhttps://github.com/justjavac/awesome-wechat-weapp (fetch)</span><br><span class="line">// upstreamhttps://github.com/justjavac/awesome-wechat-weapp (push)</span><br></pre></td></tr></table></figure></p><h3 id="step3"><a href="#step3" class="headerlink" title="step3"></a>step3</h3><p>从上游仓库拉取分支和提交点，并会被存储在一个本地分支 <code>upstream/master</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ git fetch upstream</span><br><span class="line">``` </span><br><span class="line"></span><br><span class="line">切换到本地主分支(如果不在master)。</span><br><span class="line">``` bash</span><br><span class="line">$ git checkout master</span><br></pre></td></tr></table></figure></p><p>把<code>upstream/master</code>分支合并到本地<code>master</code>分支。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git merge upstream/master</span><br></pre></td></tr></table></figure></p><p>提交到自己的fork地址，完成同步。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>http-status-code</title>
      <link href="/http-status-code/"/>
      <url>/http-status-code/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h4 id="1xx"><a href="#1xx" class="headerlink" title="1xx"></a>1xx</h4><blockquote><p>临时响应:表示临时响应并需要请求者继续执行操作的状态代码。</p></blockquote><h4 id="2xx"><a href="#2xx" class="headerlink" title="2xx"></a>2xx</h4><blockquote><p>成功:表示成功处理了请求的状态代码。</p><ul><li>200（成功）服务器成功处理请求</li><li>201（已创建）</li><li>202（已接受）</li><li>203（非授权信息）服务器成功处理请求，返回的信息可能来自另一来源</li><li>204（无内容）</li><li>205（重置内容）</li><li>206（部分内容）服务器成功处理了部分get请求</li></ul></blockquote><h4 id="3xx"><a href="#3xx" class="headerlink" title="3xx"></a>3xx</h4><blockquote><p>重定向:表示要完成请求，需要进一步操作。通常，这些状态代码用来重定向。</p><ul><li>300（多种选择）</li><li>301（永久移动）</li><li>302（临时移动）服务器临时从不同位置响应请求</li><li>303（查看其他位置）</li><li>304（未修改）自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。</li><li>305（使用代理）应使用代理访问</li><li>307（临时重定向） </li></ul></blockquote><h4 id="4xx"><a href="#4xx" class="headerlink" title="4xx"></a>4xx</h4><blockquote><p>请求错误:这些状态代码表示请求可能出错，妨碍了服务器的处理。</p><ul><li>400（错误请求）语法错误</li><li>401（未授权）需要登录的操作</li><li>403（拒绝）</li><li>404（未找到）</li><li>405（方法禁用）</li><li>406（不接受）</li><li>407（需要代理授权）授权使用代理</li><li>408（请求超时）</li><li>409（冲突）</li><li>410（已删除）</li><li>411（需要有效长度）服务器不接受不含有效内容长度标头字段的请求。</li><li>412（未满足前提条件）</li><li>413（请求实体过大）</li><li>414（请求的 URI 过长）</li><li>415（不支持的媒体类型）</li><li>416（请求范围不符合要求）</li><li>417（未满足期望值） </li></ul></blockquote><h4 id="5xx"><a href="#5xx" class="headerlink" title="5xx"></a>5xx</h4><blockquote><p>服务器错误:这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</p><ul><li>500（服务器内部错误）服务器遇到错误，无法完成请求。</li><li>501（尚未实施）服务器不具备完成请求的功能</li><li>502（错误网关）服务器作为网关或代理，从上游服务器收到无效响应。</li><li>503（服务不可用）服务器目前无法使用(由于超载或停机维护)。</li><li>504（网关超时）服务器作为网关或代理，没及时从上游服务器收到无效响应。</li><li>505（HTTP版本不受支持）服务器不支持请求中的http协议</li></ul></blockquote>]]></content>
      
      
      <categories>
          
          <category> http </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>javascript九宫格抽奖</title>
      <link href="/plug-lottery/"/>
      <url>/plug-lottery/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>特点：<code>兼容好</code>，<code>原生插件</code>，<code>体积小</code>，<code>无依赖</code></p></blockquote><h4 id="方法"><a href="#方法" class="headerlink" title="方法:"></a>方法:</h4><ul><li>1 <code>run(number,function(){})</code> 获奖；</li><li>2 <code>running(function(){})</code>  无限转圈；</li><li>3 <code>runningStop()</code>  停止无限转圈。</li></ul><h4 id="html"><a href="#html" class="headerlink" title="html:"></a>html:</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="attribute">type</span>=<span class="string">"text/javascript"</span> <span class="attribute">src</span>=<span class="string">"plug.lottery.js"</span> <span class="attribute">charset</span>=<span class="string">"utf-8"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/xkh/lottery-plug" target="_blank" rel="noopener">插件git地址</a></p><h4 id="初始化"><a href="#初始化" class="headerlink" title="初始化:"></a>初始化:</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Lottery.init(&#123;</span><br><span class="line"><span class="symbol">    classChild:</span> <span class="string">"lottery-li"</span>, <span class="comment">//抽奖元素类名前缀 例如：class="lottery-unit lottery-unit-1"</span></span><br><span class="line"><span class="symbol">    classOn:</span> <span class="string">"select-on"</span>,   <span class="comment">//抽奖元素高亮样式类名</span></span><br><span class="line"><span class="symbol">    loop:</span> <span class="number">3</span>,    <span class="comment">//初始旋转圈数</span></span><br><span class="line"><span class="symbol">    speed:</span> <span class="number">100</span>  <span class="comment">//初始速度</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="同步抽奖"><a href="#同步抽奖" class="headerlink" title="同步抽奖:"></a>同步抽奖:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Lottery.run(<span class="number">2</span>,  <span class="comment">//抽中第几个, 必须为数字</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//这里是回调函数的内容</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'中奖'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="异步抽奖"><a href="#异步抽奖" class="headerlink" title="异步抽奖:"></a>异步抽奖:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Lottery.running(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;          <span class="comment">//无限匀速转动</span></span><br><span class="line">    $.get(<span class="string">'xxxx'</span>,&#123;&#125;,<span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        Lottery.runningStop();         <span class="comment">//停止转动</span></span><br><span class="line">        Lottery.run(<span class="number">2</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;   <span class="comment">//抽奖结构</span></span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'中奖'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><a href="http://www.xonepage.com" target="_blank" rel="noopener">关于作者</a></p>]]></content>
      
      
      <categories>
          
          <category> plug </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>H5图片压缩、上传</title>
      <link href="/js-upload-image/"/>
      <url>/js-upload-image/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>这里着重说多图压缩成base64上传</p></blockquote><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">"file"</span> <span class="attribute">accept</span>=<span class="string">"image/*"</span> <span class="attribute">multiple</span>=<span class="string">"multiple"</span> onChange=&#123;uploadImage()&#125;/&gt;</span><br></pre></td></tr></table></figure><h4 id="多图转换base64"><a href="#多图转换base64" class="headerlink" title="多图转换base64"></a>多图转换base64</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">uploadImage(event)&#123;</span><br><span class="line">    <span class="keyword">const</span> img_base = [];</span><br><span class="line">    <span class="keyword">const</span> files_array = [];</span><br><span class="line">    <span class="keyword">const</span> files = event.target.files;</span><br><span class="line">    <span class="keyword">const</span> files_length = files.length;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> n = <span class="number">0</span>; n &lt; files_length; n++) &#123;</span><br><span class="line">        files_array.push(files[n])</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">const</span> PromiseForEach = <span class="function">(<span class="params">files</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">Promise</span>.all(files.map(<span class="function"><span class="params">obj</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> reader = <span class="keyword">new</span> FileReader();</span><br><span class="line">                reader.readAsDataURL(obj);</span><br><span class="line">                reader.onloadend = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> base64 = e.target.result;</span><br><span class="line">                    imgZipBase64(base64,<span class="number">400</span>,<span class="function">(<span class="params">base</span>)=&gt;</span>&#123;</span><br><span class="line">                        img_url = img_url.concat(base);</span><br><span class="line">                        resolve();</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;)).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            img_url.map(<span class="function">(<span class="params">o</span>) =&gt;</span> &#123;</span><br><span class="line">                o = o.indexOf(<span class="string">','</span>) === <span class="number">-1</span> ? o : o.split(<span class="string">','</span>)[<span class="number">1</span>];</span><br><span class="line">                img_base.push(o);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'得到所有base64'</span>,img_url);</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">'过滤前缀的base64'</span>,img_base);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">    PromiseForEach(files_array);</span><br><span class="line">    <span class="comment">//每次选择后清空file值，确保可以选择相同图片</span></span><br><span class="line">    event.target.value = <span class="string">''</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="压缩图片"><a href="#压缩图片" class="headerlink" title="压缩图片"></a>压缩图片</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 压缩图片</span></span><br><span class="line"><span class="comment"> * @param src 图片链接或原图base64</span></span><br><span class="line"><span class="comment"> * @param size  定义最大长宽</span></span><br><span class="line"><span class="comment"> * @param callback 返回压缩后base64</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> imgZipBase64 = <span class="function">(<span class="params">src, size, callback</span>) =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">let</span> img = <span class="keyword">new</span> Image();</span><br><span class="line">    <span class="keyword">let</span> base = <span class="literal">null</span>;</span><br><span class="line">    img.src = src;</span><br><span class="line">    <span class="comment">// 缩放图片需要的canvas</span></span><br><span class="line">    <span class="keyword">let</span> canvas = <span class="built_in">document</span>.createElement(<span class="string">'canvas'</span>);</span><br><span class="line">    <span class="keyword">let</span> context = canvas.getContext(<span class="string">'2d'</span>);</span><br><span class="line">    img.onload = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// 图片原始尺寸</span></span><br><span class="line">        <span class="built_in">console</span>.log(img.width,img.height);</span><br><span class="line">        <span class="keyword">let</span> originWidth = img.width;</span><br><span class="line">        <span class="keyword">let</span> originHeight = img.height;</span><br><span class="line">        <span class="comment">// 最大尺寸限制</span></span><br><span class="line">        <span class="keyword">let</span> maxWidth = size||<span class="number">400</span>, maxHeight = size||<span class="number">400</span>;</span><br><span class="line">        <span class="comment">// 目标尺寸</span></span><br><span class="line">        <span class="keyword">let</span> targetWidth = originWidth, targetHeight = originHeight;</span><br><span class="line">        <span class="comment">// 图片尺寸超过400x400的限制</span></span><br><span class="line">        <span class="keyword">if</span> (originWidth &gt; maxWidth || originHeight &gt; maxHeight) &#123;</span><br><span class="line">            <span class="keyword">if</span> (originWidth / originHeight &gt; maxWidth / maxHeight) &#123;</span><br><span class="line">                <span class="comment">// 更宽，按照宽度限定尺寸</span></span><br><span class="line">                targetWidth = maxWidth;</span><br><span class="line">                targetHeight = <span class="built_in">Math</span>.round(maxWidth * (originHeight / originWidth));</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                targetHeight = maxHeight;</span><br><span class="line">                targetWidth = <span class="built_in">Math</span>.round(maxHeight * (originWidth / originHeight));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// canvas对图片进行缩放</span></span><br><span class="line">        canvas.width = targetWidth;</span><br><span class="line">        canvas.height = targetHeight;</span><br><span class="line">        <span class="comment">// 清除画布</span></span><br><span class="line">        context.clearRect(<span class="number">0</span>, <span class="number">0</span>, targetWidth, targetHeight);</span><br><span class="line">        <span class="comment">// 图片压缩</span></span><br><span class="line">        context.drawImage(img, <span class="number">0</span>, <span class="number">0</span>, targetWidth, targetHeight);</span><br><span class="line">        <span class="built_in">console</span>.log(canvas.width,canvas.height);</span><br><span class="line">        <span class="comment">// canvas转为base64</span></span><br><span class="line">        base = canvas.toDataURL(<span class="string">'image/png'</span>);</span><br><span class="line">        callback(base);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>注意：ios手机上传照片时如果压缩处理，会造成orientation丢失，图片方向错乱，推荐使用’exif-orientation’获取方向；</p><h4 id="相关文献"><a href="#相关文献" class="headerlink" title="相关文献"></a>相关文献</h4><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/toDataURL" target="_blank" rel="noopener">toDataURL</a></li><li><a href="/js-promise/">Promise对象用法浅解 &gt;</a></li><li><a href="/js-upload-qiniu/">js方式上传base64图片到七牛 &gt;</a></li><li><a href="/weixin-image/">微信图像操作 &gt;</a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader" target="_blank" rel="noopener">FileReader &gt;</a></li><li><a href="http://www.zhangxinxu.com/study/201707/js-compress-image-before-upload.html" target="_blank" rel="noopener">张鑫旭H5压缩上传 &gt;</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Promise对象用法浅解</title>
      <link href="/js-promise/"/>
      <url>/js-promise/</url>
      
        <content type="html"><![CDATA[<h3 id="【用法】"><a href="#【用法】" class="headerlink" title="【用法】"></a>【用法】</h3><ul><li>executor 函数在Promise构造函数执行时同步执行，executor 内部通常会执行一些异步操作，一旦完成，可以调用resolve函数来将promise状态改成fulfilled，或者在发生错误时将它的状态改为rejected。</li><li>因为 Promise.prototype.then 和 Promise.prototype.catch 方法返回promise 对象， 所以它们可以被链式调用。</li><li>对象的状态不受外界影响。Promise对象代表一个异步操作，有三种状态：pending（进行中）、fulfilled（已成功）和rejected（已失败）。</li><li>一旦状态改变，就不会再变，任何时候都可以得到这个结果。<br>基本句法<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> promise = <span class="keyword">new</span> <span class="built_in">Promise</span>( <span class="function"><span class="params">()</span>=&gt;</span> (resolve, reject) &#123;...&#125; <span class="comment">/* executor */</span>  );</span><br><span class="line">promise.then(<span class="function">(<span class="params">value</span>)=&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// resolved的回调</span></span><br><span class="line">&#125;, <span class="function">(<span class="params">error</span>)=&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// rejected的回调</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><p>例1<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">new</span> Promise(<span class="function"><span class="params">(resolve, reject)</span> =&gt;</span> &#123;</span><br><span class="line">    setTimeout(resolve, <span class="number">2000</span>, <span class="string">'done'</span>);</span><br><span class="line">&#125;).<span class="keyword">then</span>(<span class="function"><span class="params">(value)</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);      <span class="regexp">//</span>两秒后打印   done</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>例2(ajax)<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">const getJSON = <span class="function"><span class="params">(url)</span>=&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> Promise(<span class="function"><span class="params">(resolve, reject)</span>=&gt;</span>&#123;</span><br><span class="line">    const handler = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.readyState !== <span class="number">4</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.status === <span class="number">200</span>) &#123;</span><br><span class="line">        resolve(<span class="keyword">this</span>.response);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        reject(<span class="keyword">new</span> Error(<span class="keyword">this</span>.statusText));</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    const client = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">    client.open(<span class="string">"GET"</span>, url);</span><br><span class="line">    client.onreadystatechange = handler;</span><br><span class="line">    client.responseType = <span class="string">"json"</span>;</span><br><span class="line">    client.setRequestHeader(<span class="string">"Accept"</span>, <span class="string">"application/json"</span>);</span><br><span class="line">    client.send();</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">getJSON(<span class="string">"/posts.json"</span>).<span class="keyword">then</span>(<span class="function"><span class="params">(res)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'success:'</span>, res);</span><br><span class="line">&#125;, <span class="function"><span class="params">(error)</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.error(<span class="string">'error'</span>, error);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h4 id="Promise-prototype-then"><a href="#Promise-prototype-then" class="headerlink" title="Promise.prototype.then()"></a>Promise.prototype.then()</h4><p>then方法的第一个参数是resolved状态的回调函数，第二个参数（可选）是rejected状态的回调函数。<br>then方法返回的是一个新的Promise实例（注意，不是原来那个Promise实例）。因此可以采用链式写法，即then方法后面再调用另一个then方法。<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">getJSON(<span class="string">"/post/1.json"</span>).then(</span><br><span class="line">    post =&gt; getJSON(post.URL)</span><br><span class="line">).then(</span><br><span class="line">    success =&gt; <span class="built_in">console</span>.log(<span class="string">"resolved: "</span>, success),</span><br><span class="line">    error =&gt; <span class="built_in">console</span>.log(<span class="string">"rejected: "</span>, error)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><h4 id="Promise-prototype-catch"><a href="#Promise-prototype-catch" class="headerlink" title="Promise.prototype.catch()"></a>Promise.prototype.catch()</h4><p>catch方法是.then(null, rejection)的别名，用于指定发生错误时的回调函数。<br>Promise 对象的错误具有“冒泡”性质，会一直向后传递，直到被捕获为止<br><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">getJSON(<span class="string">'/posts.json'</span>).<span class="keyword">then</span>((posts) =&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;).<span class="keyword">catch</span>(<span class="function"><span class="keyword">function</span><span class="params">(error)</span> &#123;</span></span><br><span class="line">  <span class="comment">// 处理 getJSON 和 前一个回调函数运行时发生的错误</span></span><br><span class="line">  console.<span class="built_in">log</span>(<span class="string">'发生错误！'</span>, <span class="built_in">error</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h4 id="Promise-all-iterable"><a href="#Promise-all-iterable" class="headerlink" title="Promise.all(iterable)"></a>Promise.all(iterable)</h4><ul><li>Promise.all 方法常被用于处理多个promise对象的状态集合。</li><li>Promise.all 等待所有代码的完成（或第一个代码的失败）。</li><li>如果iterable包含非promise值，则它们将被忽略，但仍然计入返回的promise。</li><li>如果作为参数的 Promise 实例，自己定义了catch方法，那么它一旦被rejected，并不会触发Promise.all()的catch方法。</li></ul><p>这些可能一时很难体会，看例子更直观:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> p1 = <span class="built_in">Promise</span>.resolve(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">let</span> p2 = <span class="number">11</span>;</span><br><span class="line"><span class="keyword">let</span> p3 = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    setTimeout(resolve, <span class="number">100</span>, <span class="string">"aa"</span>);</span><br><span class="line">&#125;); </span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.all([p1, p2, p3]).then(<span class="function"><span class="params">values</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(values); </span><br><span class="line">    <span class="comment">// [1, 11, "aa"] </span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="Promise-race-iterable"><a href="#Promise-race-iterable" class="headerlink" title="Promise.race(iterable)"></a>Promise.race(iterable)</h4><p>当iterable之中有一个实例率先改变状态，p的状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给race()回调函数。</p><h4 id="Promise-resolve"><a href="#Promise-resolve" class="headerlink" title="Promise.resolve()"></a>Promise.resolve()</h4><p>将现有对象转为 Promise 对象</p><ul><li>参数是一个Promise实例，原封不动地返回这个实例。</li><li>参数是一个thenable对象，具有then方法的对象，转为Promise对象后就立即执行thenable对象的then方法。</li><li>参数不是具有then方法的对象，或非对象，返回新的Promise对象，状态为resolved。</li><li>不带参数，如果只为了异步<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> thenable = &#123;</span><br><span class="line">  then: <span class="function"><span class="keyword">function</span>(<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">    resolve(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> p1 = <span class="built_in">Promise</span>.resolve(thenable);</span><br><span class="line">p1.then(<span class="function">(<span class="params">value</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value);  <span class="comment">// 0</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不带参数类似异步</span></span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span>=&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'three'</span>);</span><br><span class="line">&#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Promise</span>.resolve().then(<span class="function"><span class="params">()</span>=&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'two'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'one'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// one</span></span><br><span class="line"><span class="comment">// two</span></span><br><span class="line"><span class="comment">// three</span></span><br></pre></td></tr></table></figure><h4 id="Promise-reject"><a href="#Promise-reject" class="headerlink" title="Promise.reject()"></a>Promise.reject()</h4><p>也会返回一个新的Promise实例，reject()方法的参数，会原封不动地作为reject的理由，变成后续方法的参数</p><h3 id="【扩展】"><a href="#【扩展】" class="headerlink" title="【扩展】"></a>【扩展】</h3><h4 id="done"><a href="#done" class="headerlink" title="done()"></a>done()</h4><p>done方法，总是处于回调链的尾端，保证抛出任何可能出现的错误。<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Promise.prototype.done = <span class="function"><span class="params">(onFulfilled, onRejected)</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">this</span>.<span class="keyword">then</span>(onFulfilled, onRejected)</span><br><span class="line">    .<span class="keyword">catch</span>(<span class="function"><span class="params">(reason)</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="regexp">//</span> 抛出一个全局错误</span><br><span class="line">      setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="keyword">throw</span> reason &#125;, <span class="number">0</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">textFn()</span><br><span class="line">  .<span class="keyword">then</span>(f1)</span><br><span class="line">  .<span class="keyword">catch</span>(r1)</span><br><span class="line">  .<span class="keyword">then</span>(f2)</span><br><span class="line">  .done();</span><br></pre></td></tr></table></figure></p><h4 id="finally"><a href="#finally" class="headerlink" title="finally()"></a>finally()</h4><p>finally方法用于指定不管 Promise 对象最后状态如何，都会执行的操作。<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Promise.prototype.<span class="keyword">finally</span> = <span class="function"><span class="params">(callback)</span> =&gt;</span> &#123;</span><br><span class="line">  let p = <span class="keyword">this</span>.constructor;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.<span class="keyword">then</span>(</span><br><span class="line">    value  =&gt; p.resolve(callback()).<span class="keyword">then</span>(<span class="function"><span class="params">()</span> =&gt;</span> value),</span><br><span class="line">    reason =&gt; p.resolve(callback()).<span class="keyword">then</span>(<span class="function"><span class="params">()</span> =&gt;</span> &#123; <span class="keyword">throw</span> reason &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise/all" target="_blank" rel="noopener">参考</a></p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>css小三角形</title>
      <link href="/css-triangle/"/>
      <url>/css-triangle/</url>
      
        <content type="html"><![CDATA[<h3 id="【原理】"><a href="#【原理】" class="headerlink" title="【原理】"></a>【原理】</h3><blockquote><p>其实就是为一个点设边框，通过调整边框的颜色、是否存在勾勒出三角的形状，下面会有实例。</p></blockquote><h4 id="上三角"><a href="#上三角" class="headerlink" title="上三角"></a>上三角</h4><p><img src="/css-triangle/top.jpg" alt=""><br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle_up</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid <span class="number">#000000</span>;       <span class="comment">//50px 控制三角指向长短</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="倒三角"><a href="#倒三角" class="headerlink" title="倒三角"></a>倒三角</h4><p><img src="/css-triangle/bottom.jpg" alt=""><br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle_down</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">50px</span> solid <span class="number">#000000</span>;         <span class="comment">//50px 控制三角指向长短</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="左三角"><a href="#左三角" class="headerlink" title="左三角"></a>左三角</h4><p><img src="/css-triangle/left.jpg" alt=""><br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle_left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">50px</span> solid <span class="number">#000000</span>;       <span class="comment">//50px 控制三角指向长短</span></span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="右三角"><a href="#右三角" class="headerlink" title="右三角"></a>右三角</h4><p><img src="/css-triangle/right.jpg" alt=""><br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle_right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">50px</span> solid <span class="number">#000000</span>;        <span class="comment">//50px 控制三角指向长短</span></span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">50px</span> solid transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="左上角"><a href="#左上角" class="headerlink" title="左上角"></a>左上角</h4><p><img src="/css-triangle/left-top.jpg" alt=""><br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle_top_left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">100px</span> solid <span class="number">#000000</span>;            <span class="comment">//100px 控制向下延伸长</span></span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">100px</span> solid transparent;      <span class="comment">//100px 控制向右延伸长</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="右上角"><a href="#右上角" class="headerlink" title="右上角"></a>右上角</h4><p><img src="/css-triangle/right-top.jpg" alt=""><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle_top_right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">100px</span> solid <span class="number">#000000</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">100px</span> solid transparent; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="左下角"><a href="#左下角" class="headerlink" title="左下角"></a>左下角</h4><p><img src="/css-triangle/left-bottom.jpg" alt=""><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle_bottom_left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">100px</span> solid <span class="number">#000000</span>;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">100px</span> solid transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="右下角"><a href="#右下角" class="headerlink" title="右下角"></a>右下角</h4><p><img src="/css-triangle/right-bottom.jpg" alt=""><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle_bottom_right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">100px</span> solid <span class="number">#000000</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">100px</span> solid transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>html-meta</title>
      <link href="/html-meta/"/>
      <url>/html-meta/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>meta标签的作用有：搜索引擎优化（SEO），定义页面使用语言，自动刷新并指向新的页面，实现网页转换时的动态效果，控制页面缓冲，网页定级评价，控制网页显示的窗口等等<br>meta标签的组成：meta标签共有两个属性，它们分别是http-equiv属性和name属性，不同的属性又有不同的参数值，这些不同的参数值就实现了不同的网页功能。</p></blockquote><h3 id="meta标签"><a href="#meta标签" class="headerlink" title="meta标签"></a>meta标签</h3><h4 id="name属性"><a href="#name属性" class="headerlink" title="name属性"></a>name属性</h4><p>name属性主要用于描述网页，与之对应的属性值为content，content中的内容主要是便于搜索引擎机器人查找信息和分类信息用的。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"参数"</span> <span class="attribute">content</span>=<span class="string">"具体的参数值"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="1-Keywords-关键字"><a href="#1-Keywords-关键字" class="headerlink" title="1.Keywords(关键字)"></a>1.Keywords(关键字)</h5><p>keywords用来告诉搜索引擎你网页的关键字是什么。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"keywords"</span> <span class="attribute">content</span>=<span class="string">"meta总结, html meta, meta属性, meta跳转"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="2-description-网站内容描述"><a href="#2-description-网站内容描述" class="headerlink" title="2.description(网站内容描述)"></a>2.description(网站内容描述)</h5><p>description用来告诉搜索引擎你的网站主要内容。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"description"</span> <span class="attribute">content</span>=<span class="string">"邢凯航的博客, 前端博客, html-meta的应用"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="3-viewport-窗口配置"><a href="#3-viewport-窗口配置" class="headerlink" title="3.viewport(窗口配置)"></a>3.viewport(窗口配置)</h5><p>浏览器窗口的显示配置(在移动端较常用)，它要解决的问题是无视设备的真实分辨率，直接通过dpi，在物理尺寸和浏览器之间重设分辨率，这个分辨率和设备的分辨率无关。<br>一些基本的需求这里的配置都可以满足，如果遇到较复杂的兼容问题请见下文【参考文献】<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"viewport"</span> <span class="attribute">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>&gt;</span><br></pre></td></tr></table></figure></p><p><strong>具体参数：</strong><br>width：控制 viewport 的大小，可以指定的一个值，如果 600，或者特殊的值，如 device-width 为设备的宽度（单位为缩放为 100% 时的 CSS 的像素）。<br>height：和 width 相对应，指定高度。<br>initial-scale：初始缩放比例，也即是当页面第一次 load 的时候缩放比例。<br>maximum-scale：允许用户缩放到的最大比例。<br>minimum-scale：允许用户缩放到的最小比例。<br>user-scalable：用户是否可以手动缩放</p><h5 id="4-robots-机器人向导"><a href="#4-robots-机器人向导" class="headerlink" title="4.robots(机器人向导)"></a>4.robots(机器人向导)</h5><p>robots用来告诉搜索机器人哪些页面需要索引，哪些页面不需要索引。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"robots"</span> <span class="attribute">content</span>=<span class="string">"none"</span>&gt;</span><br></pre></td></tr></table></figure></p><p><strong>具体参数：</strong><br>all：文件将被检索，且页面上的链接可以被查询；<br>none：文件将不被检索，且页面上的链接不可以被查询；<br>index：文件将被检索；<br>follow：页面上的链接可以被查询；<br>noindex：文件将不被检索，但页面上的链接可以被查询；<br>nofollow：文件将被检索，但页面上的链接不可以被查询；</p><h5 id="5-author-作者"><a href="#5-author-作者" class="headerlink" title="5.author(作者)"></a>5.author(作者)</h5><p>标注网页的作者<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"author"</span> <span class="attribute">content</span>=<span class="string">"root, xingkaihang@aliyun.com"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="6-generator"><a href="#6-generator" class="headerlink" title="6.generator"></a>6.generator</h5><p>meta标签的generator的信息参数，代表说明网站的采用的什么软件制作。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"generator"</span> <span class="attribute">content</span>=<span class="string">"信息参数"</span>/&gt;</span><br></pre></td></tr></table></figure></p><h5 id="7-copyright"><a href="#7-copyright" class="headerlink" title="7.copyright"></a>7.copyright</h5><p>meta标签的COPYRIGHT的信息参数，代表说明网站版权信息。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"copyright"</span> <span class="attribute">content</span>=<span class="string">"信息参数"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="8-revisit-after"><a href="#8-revisit-after" class="headerlink" title="8.revisit-after"></a>8.revisit-after</h5><p>revisit-after代表网站重访,7days代表7天，依此类推。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"revisit-after"</span> <span class="attribute">content</span>=<span class="string">"7days"</span>&gt;</span><br></pre></td></tr></table></figure></p><h4 id="http-equiv属性"><a href="#http-equiv属性" class="headerlink" title="http-equiv属性"></a>http-equiv属性</h4><p>http-equiv顾名思义，相当于http的文件头作用，它可以向浏览器传回一些有用的信息，以帮助正确和精确地显示网页内容，与之对应的属性值为content，content中的内容其实就是各个参数的变量值。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"参数"</span> <span class="attribute">content</span>=<span class="string">"参数变量值"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="1-Expires-期限"><a href="#1-Expires-期限" class="headerlink" title="1.Expires(期限)"></a>1.Expires(期限)</h5><p>可以用于设定网页的到期时间。一旦网页过期，必须到服务器上重新传输。(必须使用GMT的时间格式，0表示立即过期)<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"expires"</span> <span class="attribute">content</span>=<span class="string">"Fri,12Jan200118:18:18GMT"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="2-Pragma-cache模式"><a href="#2-Pragma-cache模式" class="headerlink" title="2.Pragma(cache模式)"></a>2.Pragma(cache模式)</h5><p>禁止浏览器从本地计算机的缓存中访问页面内容。(这样设定，访问者将无法脱机浏览)<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attribute">content</span>=<span class="string">"no-cache"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="3-Cache-Control指定请求和响应遵循的缓存机制。"><a href="#3-Cache-Control指定请求和响应遵循的缓存机制。" class="headerlink" title="3.Cache-Control指定请求和响应遵循的缓存机制。"></a>3.Cache-Control指定请求和响应遵循的缓存机制。</h5><p>常见的取值有private、no-cache、max-age、must-revalidate等，默认为private。</p><p><strong>其作用根据不同的重新浏览方式分为以下几种情况：</strong></p><ul><li>打开新窗口 值为private、no-cache、must-revalidate，那么打开新窗口访问时都会重新访问服务器。 而如果指定了max-age值，那么在此值内的时间里就不会重新访问服务器，例如： Cache-control: max-age=5(表示当访问此网页后的5秒内再次访问不会去服务器) </li><li>在地址栏回车 值为private或must-revalidate则只有第一次访问时会访问服务器，以后就不再访问。 值为no-cache，那么每次都会访问。 值为max-age，则在过期之前不会重复访问。</li><li>按后退按扭 值为private、must-revalidate、max-age，则不会重访问， 值为no-cache，则每次都重复访问 </li><li>按刷新按扭 无论为何值，都会重复访问 Cache-control值为“no-cache”时，访问此页面不会在Internet临时文件夹留下页面备份。</li></ul><p><strong>具体参数：</strong><br>Public：指示响应可被任何缓存区缓存<br>Private：指示对于单个用户的整个或部分响应消息，不能被共享缓存处理。这允许服务器仅仅描述当用户的部分响应消息，此响应消息对于其他用户的请求无效<br>no-cache：指示请求或响应消息不能缓存<br>no-store：用于防止重要的信息被无意的发布。在请求消息中发送将使得请求和响应消息都不使用缓存<br>max-age：指示客户机可以接收生存期不大于指定时间（以秒为单位）的响应<br>min-fresh：指示客户机可以接收响应时间小于当前时间加上指定时间的响应<br>max-stale：指示客户机可以接收超出超时期间的响应消息。如果指定max-stale消息的值，那么客户机可以接收超出超时期指定值之内的响应消息。</p><h5 id="4-Refresh-刷新"><a href="#4-Refresh-刷新" class="headerlink" title="4.Refresh(刷新)"></a>4.Refresh(刷新)</h5><p>自动刷新并指向新页面。(其中的2是指停留2秒钟后自动刷新到URL网址)<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Refresh"</span> <span class="attribute">content</span>=<span class="string">"2; URL=http://www.haorooms.com"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="5-Set-Cookie-cookie设定"><a href="#5-Set-Cookie-cookie设定" class="headerlink" title="5.Set-Cookie(cookie设定)"></a>5.Set-Cookie(cookie设定)</h5><p>如果网页过期，那么存盘的cookie将被删除。(必须使用GMT的时间格式)<br><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attr">http-equiv="Set-Cookie"</span> <span class="attr">content="cookie</span> <span class="attr">value=xxx;</span> <span class="attr">expires=Friday,12-Jan-200118:18:18GMT;</span> <span class="attr">path=/"&gt;</span></span><br></pre></td></tr></table></figure></p><h5 id="6-Window-target-显示窗口的设定"><a href="#6-Window-target-显示窗口的设定" class="headerlink" title="6.Window-target(显示窗口的设定)"></a>6.Window-target(显示窗口的设定)</h5><p>强制页面在当前窗口以独立页面显示。(用来防止别人在框架里调用自己的页面)<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Window-target"</span> <span class="attribute">content</span>=<span class="string">"_top"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="7-content-Type-显示字符集的设定"><a href="#7-content-Type-显示字符集的设定" class="headerlink" title="7.content-Type(显示字符集的设定)"></a>7.content-Type(显示字符集的设定)</h5><p>设定页面使用的字符集。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"content-Type"</span> <span class="attribute">content</span>=<span class="string">"text/html; charset=gb2312"</span>&gt;</span><br></pre></td></tr></table></figure></p><p><strong>具体参数：</strong><br>GB2312：简体中文<br>BIG5：繁体中文<br>iso-2022-jp：日文<br>ks_c_5601：韩文<br>ISO-8859-1：英文<br>UTF-8：通用</p><h5 id="8-content-Language（显示语言的设定）"><a href="#8-content-Language（显示语言的设定）" class="headerlink" title="8.content-Language（显示语言的设定）"></a>8.content-Language（显示语言的设定）</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Content-Language"</span> <span class="attribute">content</span>=<span class="string">"zh-cn"</span>/&gt;</span><br></pre></td></tr></table></figure><h5 id="9-imagetoolbar"><a href="#9-imagetoolbar" class="headerlink" title="9.imagetoolbar"></a>9.imagetoolbar</h5><p>指定是否显示图片工具栏，当为false代表不显示，当为true代表显示。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"imagetoolbar"</span> <span class="attribute">content</span>=<span class="string">"false"</span>/&gt;</span><br></pre></td></tr></table></figure></p><h5 id="10-Content-Script-Type"><a href="#10-Content-Script-Type" class="headerlink" title="10.Content-Script-Type"></a>10.Content-Script-Type</h5><p>W3C网页规范，指明页面中脚本的类型。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Content-Script-Type"</span> <span class="attribute">Content</span>=<span class="string">"text/javascript"</span>&gt;</span><br></pre></td></tr></table></figure></p><h5 id="11-页面过度效果-ie有效"><a href="#11-页面过度效果-ie有效" class="headerlink" title="11.页面过度效果(ie有效)"></a>11.页面过度效果(ie有效)</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Page-Enter"</span> <span class="attribute">content</span>=<span class="string">"revealTrans(Duration=2.0,Transition=12)"</span> /&gt;</span><br></pre></td></tr></table></figure><p><strong>声明参数：</strong><br>Page-Enter：进入页面<br>Page-Exit：离开页面<br>Site-Enter：进入网站<br>Site-Exit：离开网站<br><strong>内容参数：</strong><br>Duration  : 过渡速度<br>Transition : 可选项。整数值(Integer)。设置或检索转换所使用的方式<br><strong>具体参数：</strong><br>0：矩形收缩转换。<br>1：矩形扩张转换。<br>2：圆形收缩转换。<br>3：圆形扩张转换。<br>4：向上擦除。<br>5：向下擦除。<br>6：向右擦除。<br>7：向左擦除。<br>8：纵向百叶窗转换。<br>9：横向百叶窗转换。<br>10：国际象棋棋盘横向转换。<br>11：国际象棋棋盘纵向转换。<br>12：随机杂点干扰转换。<br>13：左右关门效果转换。<br>14：左右开门效果转换。<br>15：上下关门效果转换。<br>16：上下开门效果转换。<br>17：从右上角到左下角的锯齿边覆盖效果转换。<br>18：从右下角到左上角的锯齿边覆盖效果转换。<br>19：从左上角到右下角的锯齿边覆盖效果转换。<br>20：从左下角到右上角的锯齿边覆盖效果转换。<br>21：随机横线条转换。<br>22：随机竖线条转换。<br>23：随机使用上面可能的值转换。</p><h3 id="base标签"><a href="#base标签" class="headerlink" title="base标签"></a>base标签</h3><p>为页面上所有链接指定默认打开方式<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;base <span class="keyword">target</span>=<span class="string">"_self"</span>&gt;     <span class="comment">//指定页面中所有标签都是本页打开！</span></span><br></pre></td></tr></table></figure></p><h3 id="相关文献"><a href="#相关文献" class="headerlink" title="相关文献"></a>相关文献</h3><ul><li><a href="http://www.cnblogs.com/pigtail/archive/2013/03/15/2961631.html" target="_blank" rel="noopener">viewport详解释</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>js倒计时在应用后台不执行</title>
      <link href="/js-update-countdown/"/>
      <url>/js-update-countdown/</url>
      
        <content type="html"><![CDATA[<h4 id="方法1：HTML-lt-meta-gt-标签"><a href="#方法1：HTML-lt-meta-gt-标签" class="headerlink" title="方法1：HTML&lt;meta&gt;标签"></a>方法1：HTML<code>&lt;meta&gt;</code>标签</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"pragma"</span> <span class="attribute">content</span>=<span class="string">"no-cache"</span>&gt; </span><br><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"cache-control"</span> <span class="attribute">content</span>=<span class="string">"no-cache"</span>&gt; </span><br><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"expires"</span> <span class="attribute">content</span>=<span class="string">"0"</span>&gt;</span><br></pre></td></tr></table></figure><ul><li>在meta里进行设置，设置页面nocache，每次访问次页面，均需要从服务器重新获取，而不是使用缓存中读取,</li><li>expires设定过期时间，一旦过期就必须请求服务器，</li><li>expries出现在http-equiv属性中，使用content属性表示页面缓存的过期时间</li><li>expries=0，缓存过期前的分钟数。若用户在页面过期前返回该页面，就会显示缓存的版本页　　　</li></ul><h4 id="方法2：visibilitychange事件【推荐】"><a href="#方法2：visibilitychange事件【推荐】" class="headerlink" title="方法2：visibilitychange事件【推荐】"></a>方法2：visibilitychange事件【推荐】</h4><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.addEventListener(<span class="string">'visibilitychange'</span>, <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="built_in">document</span>.hidden)&#123;</span><br><span class="line">        <span class="regexp">//</span>如果重新打开应用视图 更新倒计时</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ul><li><code>visibilitychange</code>事件监听用户离开/回来行为</li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>微信图像操作</title>
      <link href="/weixin-image/"/>
      <url>/weixin-image/</url>
      
        <content type="html"><![CDATA[<h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><p>1.引入JS文件，在需要调用JS接口的页面引入JS文件:<br>（支持https）：<a href="http://res.wx.qq.com/open/js/jweixin-1.2.0.js" target="_blank" rel="noopener">http://res.wx.qq.com/open/js/jweixin-1.2.0.js</a><br>2.通过config接口注入权限验证配置，所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用）；<br>3.通过ready接口处理成功验证。<br>详见：<a href="/weixin-share/" target="_blank">微信分享js自定义配置</a></p><h3 id="封装工具类"><a href="#封装工具类" class="headerlink" title="封装工具类"></a>封装工具类</h3><blockquote><p>基于<a href="/weixin-share/" target="_blank">微信分享js自定义配置</a>的工具类，将<code>jsApiList</code>中添加图片接口的支持</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> weixin = &#123;</span><br><span class="line">    ... 省略一万行</span><br><span class="line">    use: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> wx = <span class="built_in">window</span>.wx;</span><br><span class="line">        <span class="keyword">var</span> config = <span class="built_in">Object</span>.assign(&#123;&#125;, &#123; <span class="attr">debug</span>: <span class="literal">false</span>, <span class="attr">jsApiList</span>: [</span><br><span class="line">            <span class="string">'onMenuShareTimeline'</span>,</span><br><span class="line">            <span class="string">'onMenuShareAppMessage'</span>,</span><br><span class="line">            <span class="string">'onMenuShareQQ'</span>,</span><br><span class="line">            <span class="string">'onMenuShareWeibo'</span>,</span><br><span class="line">            <span class="string">'onMenuShareQZone'</span>,</span><br><span class="line">            <span class="string">'chooseImage'</span>,      <span class="comment">//拍照或从手机相册中选图接口</span></span><br><span class="line">            <span class="string">'previewImage'</span>,     <span class="comment">//预览图片接口</span></span><br><span class="line">            <span class="string">'uploadImage'</span>,      <span class="comment">//上传图片接口</span></span><br><span class="line">            <span class="string">'downloadImage'</span>,    <span class="comment">//下载图片接口</span></span><br><span class="line">            <span class="string">'getLocalImgData'</span>,  <span class="comment">//获取本地图片接口</span></span><br><span class="line">            ]&#125;, <span class="keyword">this</span>.token);</span><br><span class="line">        wx.config(config);</span><br><span class="line">        <span class="keyword">var</span> option = <span class="keyword">this</span>.option;</span><br><span class="line">        <span class="comment">//调试微信接口</span></span><br><span class="line">        wx.error(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">window</span>.alert(<span class="string">'res'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    ... 省略一万行</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="拍照或从手机相册中选图接口"><a href="#拍照或从手机相册中选图接口" class="headerlink" title="拍照或从手机相册中选图接口"></a>拍照或从手机相册中选图接口</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wx.chooseImage(&#123;</span><br><span class="line">    count: <span class="number">1</span>, <span class="comment">// 默认9</span></span><br><span class="line">    sizeType: [<span class="string">'original'</span>, <span class="string">'compressed'</span>], <span class="comment">// 可以指定是原图还是压缩图，默认二者都有</span></span><br><span class="line">    sourceType: [<span class="string">'album'</span>, <span class="string">'camera'</span>], <span class="comment">// 可以指定来源是相册还是相机，默认二者都有</span></span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> localIds = res.localIds; <span class="comment">// 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="预览图片接口"><a href="#预览图片接口" class="headerlink" title="预览图片接口"></a>预览图片接口</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">wx</span><span class="selector-class">.previewImage</span>(&#123;</span><br><span class="line">    <span class="attribute">current</span>: <span class="string">''</span>, // 当前显示图片的http链接</span><br><span class="line">    urls: [] // 需要预览的图片http链接列表</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="上传图片接口"><a href="#上传图片接口" class="headerlink" title="上传图片接口"></a>上传图片接口</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wx.uploadImage(&#123;</span><br><span class="line">    localId: <span class="string">''</span>, <span class="comment">// 需要上传的图片的本地ID，由chooseImage接口获得</span></span><br><span class="line">    isShowProgressTips: <span class="number">1</span>, <span class="comment">// 默认为1，显示进度提示</span></span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> serverId = res.serverId; <span class="comment">// 返回图片的服务器端ID</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>备注：上传图片有效期3天，可用微信多媒体接口下载图片到自己的服务器，此处获得的 serverId 即 media_id。</p><h4 id="下载图片接口"><a href="#下载图片接口" class="headerlink" title="下载图片接口"></a>下载图片接口</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wx.downloadImage(&#123;</span><br><span class="line">    serverId: <span class="string">''</span>, <span class="comment">// 需要下载的图片的服务器端ID，由uploadImage接口获得</span></span><br><span class="line">    isShowProgressTips: <span class="number">1</span>, <span class="comment">// 默认为1，显示进度提示</span></span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> localId = res.localId; <span class="comment">// 返回图片下载后的本地ID</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><a id="base64"></a></p><h4 id="获取本地图片接口-base64"><a href="#获取本地图片接口-base64" class="headerlink" title="获取本地图片接口[base64]"></a>获取本地图片接口[base64]</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wx.getLocalImgData(&#123;</span><br><span class="line">    localId: <span class="string">''</span>, <span class="comment">// 图片的localID</span></span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> <span class="params">(res)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> localData = res.localData; <span class="comment">// localData是图片的base64数据，可以用img标签显示</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>备注：此接口仅在 iOS WKWebview 下提供，用于兼容 iOS WKWebview 不支持 localId 直接显示图片的问题。具体可参考<a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1483682025_enmey" target="_blank" rel="noopener">《iOS网页开发适配指南》</a></p><h3 id="相关文献"><a href="#相关文献" class="headerlink" title="相关文献"></a>相关文献</h3><ul><li><a href="/weixin-share/" target="_blank">微信分享js自定义配置</a></li><li><a href="/js-update-qiniu/" target="_blank">javascript方式上传图片到七牛</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 微信 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>javascript方式上传图片到七牛</title>
      <link href="/js-upload-qiniu/"/>
      <url>/js-upload-qiniu/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>觉得前面内容复杂（官方文档就是这样)可以跳过，从<a href="#demo">demo</a>看起，</p></blockquote><h4 id="接口说明"><a href="#接口说明" class="headerlink" title="接口说明"></a>接口说明</h4><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST <span class="meta-keyword">/putb64/</span><span class="params">&lt;Fsize&gt;</span><span class="meta-keyword">/key/</span><span class="params">&lt;EncodedKey&gt;</span>/mimeType/<span class="params">&lt;EncodedMimeType&gt;</span><span class="meta-keyword">/crc32/</span><span class="params">&lt;Crc32&gt;</span>/x:user-var/<span class="params">&lt;EncodedUserVarVal&gt;</span></span><br><span class="line"><span class="symbol">Host:</span> upload.qiniu.com</span><br><span class="line"><span class="symbol">Authorization:</span> UpToken <span class="params">&lt;UpToken&gt;</span></span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line"><span class="params">&lt;Base64EncodedFileContent&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">参数名称</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left"><code>/&lt;Fsize&gt;</code></td><td style="text-align:left">（必填) 文件大小。支持传入 -1 表示文件大小以 http request body 为准。</td></tr><tr><td style="text-align:left"><code>/&lt;EncodedKey&gt;</code></td><td style="text-align:left">如果没有指定则：如果 uptoken.SaveKey 存在则基于 SaveKey 生产 key，否则用 hash 值作 key。EncodedKey 需要经过 base64 编码。具体可以参照：<a href="https://developer.qiniu.com/kodo/manual/1231/appendix#urlsafe-base64" target="_blank" rel="noopener">URL 安全的 Base64 编码。</a></td></tr><tr><td style="text-align:left"><code>/&lt;EncodedMimeType&gt;</code></td><td style="text-align:left">文件的 MIME 类型，默认是 application/octet-stream。</td></tr><tr><td style="text-align:left"><code>/&lt;Crc32&gt;</code></td><td style="text-align:left">文件内容的 crc32 校验值，不指定则不进行校验。</td></tr><tr><td style="text-align:left"><code>Host</code></td><td style="text-align:left">upload.qiniu.com(华东区域加速上传域名) ，不同区域的http 和 https 域名详见<a href="https://developer.qiniu.com/kodo/manual/1671/region-endpoint" target="_blank" rel="noopener">不同存储区域对应的上传域名</a></td></tr></tbody></table><p><a id="demo"></a></p><h4 id="Demo-其实重要的就这几段！"><a href="#Demo-其实重要的就这几段！" class="headerlink" title="Demo(其实重要的就这几段！)"></a>Demo(其实重要的就这几段！)</h4><ul><li><p>官方demo[ES5]</p><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">putb64</span>(<span class="params">pic,token</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> pic = <span class="string">"填写你的base64后的字符串"</span>;</span><br><span class="line">  <span class="keyword">var</span> <span class="built_in">url</span> = <span class="string">"http://upload.qiniu.com/putb64/20264"</span>; <span class="comment">//非华东空间需要根据注意事项 1 修改上传域名</span></span><br><span class="line">  <span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">  xhr.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState==<span class="number">4</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'七牛图片名'</span>,xhr.responseText)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  xhr.open(<span class="string">"POST"</span>, <span class="built_in">url</span>, <span class="literal">true</span>);</span><br><span class="line">  xhr.setRequestHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/octet-stream"</span>);</span><br><span class="line">  xhr.setRequestHeader(<span class="string">"Authorization"</span>, <span class="string">"UpToken  填写你从服务端获取的上传token"</span>);</span><br><span class="line">  xhr.send(pic);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>优化demo[es6]</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> uploadBase64 = <span class="function">(<span class="params">base64, token</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        xhr.onreadystatechange = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (xhr.readyState === <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="keyword">const</span> &#123;key, error&#125; = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line">                <span class="keyword">if</span> (key) &#123;</span><br><span class="line">                    resolve(<span class="string">'http://自己的七牛图片库域名'</span> + key);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (error) &#123;</span><br><span class="line">                    resolve(&#123;error&#125;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        xhr.open(<span class="string">'POST'</span>, <span class="attr">http</span>:<span class="comment">//upload.qiniu.com, true);</span></span><br><span class="line">        xhr.setRequestHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/octet-stream'</span>);</span><br><span class="line">        xhr.setRequestHeader(<span class="string">'Authorization'</span>, <span class="string">'UpToken '</span> + token);</span><br><span class="line">        xhr.send(base64);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>扩展demo[es6]<br>基于上个demo是传入单个base字符串，这里传入base64数组</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> uploadBase64List = <span class="function">(<span class="params">list, token</span>) =&gt;</span> <span class="built_in">Promise</span>.all(</span><br><span class="line">        list.map(<span class="function"><span class="params">base64</span> =&gt;</span> uploadBase64(base64, token))</span><br><span class="line">      );</span><br></pre></td></tr></table></figure></li></ul><h4 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h4><ul><li><code>pic</code> 把要上传的图片先转换为base64字符串，(<a href="/weixin-image/#base64" target="_blank">从微信获取的base64</a>ios是带有<code>data:image/jgp;base64,</code>前缀需去掉)；</li><li><code>var url = &quot;http://upload.qiniu.com/putb64/20264&quot;;</code>这里的 20264 是图片没经过 base64 处理的原图字节大小。如果不清楚大小就传-1；</li><li>key就是文件名，如果不填就返回hash值做为文件名；</li><li><code>xhr.setRequestHeader(&quot;Authorization&quot;, &quot;UpToken(空格)token&quot;);</code>这里的<code>UpToken</code>与后面的字符串保留一个空格。后面跟上服务端给出的上传<code>token</code>字符串；</li><li>upload.qiniu.com 上传域名适用于华东空间。华北空间使用 upload-z1.qiniu.com，华南空间使用 upload-z2.qiniu.com，北美空间使用 upload-na0.qiniu.com。</li></ul><h4 id="相关文献"><a href="#相关文献" class="headerlink" title="相关文献"></a>相关文献</h4><ul><li><a href="/weixin-image/#base64" target="_blank">微信sdk获取本地图片及base64</a></li><li><a href="https://developer.qiniu.com/kodo/kb/1326/how-to-upload-photos-to-seven-niuyun-base64-code" target="_blank" rel="noopener">官方文档 &gt;</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Call&amp;Apply</title>
      <link href="/js-call-apply/"/>
      <url>/js-call-apply/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><p><code>call</code>: 调用一个对象的一个方法，以另一个对象替换/继承当前对象。call(obj, arg1, arg2, , argN…)<br><code>apply</code>: 接收的参数必须是数组形式。 call(obj, [arg1, arg2, , argN…])<br><code>参数</code>: thisObj 可选项。将被用作当前对象的对象。arg1, arg2, , argN 可选项。将被传递方法参数序列。 </p><blockquote><p>说明: call 方法可以用来代替另一个对象调用一个方法。call 方法可将一个函数的对象上下文从初始的上下文改变为由 thisObj 指定的新对象。<br>如果没有提供 thisObj 参数，那么 Global 对象被用作 thisObj。<br>函数实例的call和apply方法，可以指定函数内部this的指向（即函数执行时所在的作用域），然后在所指定的作用域中，调用该函数；call方法后边的参数是函数调用时的参数按顺序传递。<br>是不是迷了，我们直接看例子解释。</p></blockquote><h4 id="函数替换"><a href="#函数替换" class="headerlink" title="函数替换"></a>函数替换</h4><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function add(a,b) &#123; alert(a+b); &#125;</span><br><span class="line">function <span class="function"><span class="keyword">sub</span></span>(a,b) &#123; alert(a-b); &#125; </span><br><span class="line">add.call(<span class="function"><span class="keyword">sub</span>,3,1)</span>;</span><br></pre></td></tr></table></figure><p>注: 这个例子中的意思就是用 add 来替换 sub，add.call(sub,3,1) == add(3,1) ，所以运行结果为：alert(4); js 中的函数其实是对象，函数名是对 Function 对象的引用。 </p><h4 id="对象继承"><a href="#对象继承" class="headerlink" title="对象继承"></a>对象继承</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">"class1"</span>;</span><br><span class="line">    <span class="keyword">this</span>.showNam = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span><br><span class="line">        alert(<span class="keyword">this</span>.name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">"class2"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c1 = <span class="keyword">new</span> Class1();</span><br><span class="line"><span class="keyword">var</span> c2 = <span class="keyword">new</span> Class2();</span><br><span class="line"></span><br><span class="line">c1.showNam.call(c2);</span><br></pre></td></tr></table></figure><p>注: call 的意思是把 c1 的方法放到c2上执行，原来c2是没有showNam() 方法，现在是把c1 的showNam()方法放到 c2 上来执行，所以this.name 应该是 class2，执行的结果就是 ：alert（”class2”）; 怎么样，觉得有意思了吧，可以让a对象来执行b对象的方法，这是java程序员所不敢想的。</p><p>还有更有趣的，可以用 call 来实现继承。这样 Class2 就继承Class1了，Class1.call(this) 的意思就是使用 Class1 对象代替this对象，那么 Class2 中不就有Class1 的所有属性和方法了吗，c2 对象就能够直接调用Class1 的方法以及属性了，执行结果就是：alert（“cc”）;<br>对的，就是这样，这就是 javaScript 如何来模拟面向对象中的继承的，还可以实现多重继承。 </p><h4 id="对象多重继承"><a href="#对象多重继承" class="headerlink" title="对象多重继承"></a>对象多重继承</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class10</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.showSub = <span class="function"><span class="keyword">function</span> <span class="params">(a, b)</span> </span>&#123;</span><br><span class="line">        alert(a - b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class11</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.showAdd = <span class="function"><span class="keyword">function</span> <span class="params">(a, b)</span> </span>&#123;</span><br><span class="line">        alert(a + b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Class2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Class10.call(<span class="keyword">this</span>);</span><br><span class="line">    Class11.call(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注: 很简单，使用两个 call 就实现多重继承了。当然，js的继承还有其他方法，例如使用原型链，这个不属于本文的范畴，只是在此说明call 的用法。<br>说了call ，当然还有 apply，这两个方法基本上是一个意思，区别在于 call 的第二个参数可以是任意类型，而apply的第二个参数必须是数组</p><h4 id="call-的应用"><a href="#call-的应用" class="headerlink" title="call()的应用"></a>call()的应用</h4><ul><li><p>将类(伪)数组对象转为真正的数组</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array<span class="selector-class">.prototype</span><span class="selector-class">.slice</span><span class="selector-class">.call</span>(fakeArray)</span><br></pre></td></tr></table></figure></li><li><p>继承</p><h4 id="apply-的应用"><a href="#apply-的应用" class="headerlink" title="apply()的应用"></a>apply()的应用</h4></li><li><p>找出数组中最大元素</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var arr = [<span class="number">1</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">10</span>];</span><br><span class="line">Math.max.apply(null, a); </span><br><span class="line"><span class="comment">// 10  </span></span><br><span class="line"><span class="comment">// 第一个参数设为null或undefined，this指向全局对象</span></span><br></pre></td></tr></table></figure></li><li><p>将数组的空元素变为undefined</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Array.apply(<span class="literal">null</span>, [<span class="string">'a'</span>, , <span class="string">'b'</span>]);</span><br><span class="line"><span class="regexp">//</span> [<span class="string">'a'</span>, <span class="literal">undefined</span>, <span class="string">'b'</span>]</span><br><span class="line"><span class="regexp">//</span> forEach方法会跳过空元素，但不会跳过<span class="literal">undefined</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>javascript原生方法</title>
      <link href="/js-methods/"/>
      <url>/js-methods/</url>
      
        <content type="html"><![CDATA[<h3 id="methods"><a href="#methods" class="headerlink" title="methods"></a>methods</h3><h4 id="对string操作的方法"><a href="#对string操作的方法" class="headerlink" title="对string操作的方法"></a>对string操作的方法</h4><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var s = <span class="string">"hello,world"</span>;  //定义一个字符串</span><br><span class="line"></span><br><span class="line">s.charAt(<span class="number">0</span>)             // =&gt; <span class="string">"h"</span>       第一个字符</span><br><span class="line">s.charAt(s.length<span class="number">-1</span>)    // =&gt; <span class="string">"d"</span>       最后一个字符</span><br><span class="line">s.substring(<span class="number">1</span>,<span class="number">4</span>)        // =&gt; <span class="string">"ell"</span>     截取<span class="number">2</span>～<span class="number">4</span>的字符 </span><br><span class="line">s.substr(<span class="number">1</span>)             // =&gt; <span class="string">"e"</span>       第一个字符</span><br><span class="line">s.slice(<span class="number">1</span>,<span class="number">4</span>)            // =&gt; <span class="string">"ell"</span>     截取<span class="number">2</span>～<span class="number">4</span>的字符</span><br><span class="line">s.slice(<span class="number">-3</span>)             // =&gt; <span class="string">"rld"</span>     截取后<span class="number">3</span>个字符</span><br><span class="line">s.indexOf(<span class="string">"l"</span>)          // =&gt; <span class="number">2</span>         获取第一个<span class="string">"l"</span>的索引</span><br><span class="line">s.lastIndexOf(<span class="string">"l"</span>)      // =&gt; <span class="number">10</span>        获取最后一个<span class="string">"l"</span>的索引</span><br><span class="line">s.indexOf(<span class="string">"l"</span>,<span class="number">3</span>)        // =&gt; <span class="number">3</span>         获取第三个<span class="string">"l"</span>的索引</span><br><span class="line">s.<span class="built_in">split</span>(<span class="string">","</span>)            // =&gt; [<span class="string">"hello"</span>,<span class="string">"world"</span>] 分割字符串为数组</span><br><span class="line">s.<span class="built_in">replace</span>(<span class="string">"h"</span>,<span class="string">"H"</span>)      // =&gt; <span class="string">"Hello,world"</span>     替换字符</span><br><span class="line">s.toUpperCase()         // =&gt; <span class="string">"HELLO,WORLD"</span>     大写</span><br><span class="line"></span><br><span class="line">ES5以后支持</span><br><span class="line">s[<span class="number">0</span>]                    // =&gt; <span class="string">"h"</span>       第一个字符</span><br></pre></td></tr></table></figure><h4 id="数学函数Math"><a href="#数学函数Math" class="headerlink" title="数学函数Math"></a>数学函数Math</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Math.random()           <span class="comment">//          返回 0 ~ 1 之间的随机数</span></span><br><span class="line">Math.round(<span class="number">1.2</span>)         <span class="comment">// =&gt; 1     把数四舍五入为最接近的整数</span></span><br><span class="line">Math.ceil(<span class="number">1.2</span>)          <span class="comment">// =&gt; 2     对数进行上舍入</span></span><br><span class="line">Math.floor(<span class="number">1.2</span>)         <span class="comment">// =&gt; 1     对数进行下舍入</span></span><br><span class="line">Math.max(<span class="number">2</span>,<span class="number">4</span>)           <span class="comment">// =&gt; 4     返回 2 和 4 中的最高值</span></span><br><span class="line">Math.min(<span class="number">2</span>,<span class="number">4</span>)           <span class="comment">// =&gt; 2     返回 2 和 4 中的最低值</span></span><br><span class="line">Math.abs(<span class="number">-2</span>)            <span class="comment">// =&gt; 2     -2的绝对值</span></span><br><span class="line"></span><br><span class="line">Math.sqrt(<span class="number">4</span>)            <span class="comment">// =&gt; 2     返回 4 的平方根</span></span><br><span class="line">Math.pow(<span class="number">2</span>,<span class="number">4</span>)           <span class="comment">// =&gt; 16    返回 2 的 4 次幂</span></span><br><span class="line">Math.exp(<span class="number">0</span>)             <span class="comment">// =&gt; 1     返回 e 的指数</span></span><br><span class="line">Math.log(<span class="number">1</span>)             <span class="comment">// =&gt; 1     返回数的自然对数（底为e）</span></span><br><span class="line">Math.cos(<span class="number">0</span>)             <span class="comment">// =&gt; 1     返回0的余弦</span></span><br><span class="line">Math.acos(<span class="number">1</span>)            <span class="comment">// =&gt; 0     返回1的反余弦值</span></span><br><span class="line">Math.asin(<span class="number">0</span>)            <span class="comment">// =&gt; 0     返回0的反正弦值</span></span><br><span class="line">Math.sin(<span class="number">0</span>)             <span class="comment">// =&gt; 0     返回0的正弦</span></span><br><span class="line">Math.tan(<span class="number">0</span>)             <span class="comment">// =&gt; 0     返回角的正切</span></span><br><span class="line">Math.atan(<span class="number">0</span>)            <span class="comment">// =&gt; 0     以介于 -PI/2 与 PI/2 弧度之间的数值来返回 0 的反正切值</span></span><br><span class="line">Math.atan2(<span class="number">0</span>,<span class="number">1</span>)         <span class="comment">// =&gt; 0     返回从 x 轴到点 (0,1) 的角度（介于 -PI/2 与 PI/2 弧度之间）</span></span><br><span class="line">Math.toSource()         <span class="comment">//          返回该对象的源代码</span></span><br><span class="line">Math.valueOf()          <span class="comment">//          返回 Math 对象的原始值</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>react事件</title>
      <link href="/react-events/"/>
      <url>/react-events/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><p>您的事件处理程序将传递 SyntheticEvent 的实例，这是一个跨浏览器原生事件包装器。 它具有与浏览器原生事件相同的接口，包括 stopPropagation() 和 preventDefault() ，除了事件在所有浏览器中他们工作方式都相同。<br>如果您发现由于某种原因需要底层浏览器事件，只需使用 nativeEvent 属性来获取它。 每个 SyntheticEvent 对象都具有以下属性</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">boolean</span> bubbles</span><br><span class="line"><span class="built_in">boolean</span> cancelable</span><br><span class="line">DOMEventTarget currentTarget</span><br><span class="line"><span class="built_in">boolean</span> defaultPrevented</span><br><span class="line"><span class="built_in">number</span> eventPhase</span><br><span class="line"><span class="built_in">boolean</span> isTrusted</span><br><span class="line">DOMEvent nativeEvent</span><br><span class="line"><span class="built_in">void</span> preventDefault()</span><br><span class="line"><span class="built_in">boolean</span> isDefaultPrevented()</span><br><span class="line"><span class="built_in">void</span> stopPropagation()</span><br><span class="line"><span class="built_in">boolean</span> isPropagationStopped()</span><br><span class="line">DOMEventTarget target</span><br><span class="line"><span class="built_in">number</span> timeStamp</span><br><span class="line"><span class="built_in">string</span> <span class="keyword">type</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：<br>从v0.14起，从事件处理程序返回 false 将不再停止事件传播。 应该根据需要手动 e.stopPropagation() 或 e.preventDefault() 。</p></blockquote><h3 id="【事件池】"><a href="#【事件池】" class="headerlink" title="【事件池】"></a>【事件池】</h3><p>SyntheticEvent 对象是通过合并得到的。 这意味着在事件回调被调用后，SyntheticEvent 对象将被重用并且所有属性都将被取消。 这是出于性能原因。 因此，您无法以异步方式访问该事件。</p><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">onClick</span><span class="params">(event)</span> &#123;</span></span><br><span class="line">  console.<span class="built_in">log</span>(event); <span class="comment">// =&gt; nullified object.</span></span><br><span class="line">  console.<span class="built_in">log</span>(event.<span class="built_in">type</span>); <span class="comment">// =&gt; "click"</span></span><br><span class="line">  const eventType = event.<span class="built_in">type</span>; <span class="comment">// =&gt; "click"</span></span><br><span class="line"></span><br><span class="line">  setTimeout(<span class="function"><span class="keyword">function</span><span class="params">()</span> &#123;</span></span><br><span class="line">    console.<span class="built_in">log</span>(event.<span class="built_in">type</span>); <span class="comment">// =&gt; null</span></span><br><span class="line">    console.<span class="built_in">log</span>(eventType); <span class="comment">// =&gt; "click"</span></span><br><span class="line">  &#125;, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 不能工作。 this.state.click 事件只包含空值。</span></span><br><span class="line">  this.setState(&#123;clickEvent: event&#125;);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 您仍然可以导出事件属性。</span></span><br><span class="line">  this.setState(&#123;eventType: event.<span class="built_in">type</span>&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：<br>如果要以异步方式访问事件属性，应该对事件调用 event.persist() ，这将从池中删除合成事件，并允许用户代码保留对事件的引用。</p></blockquote><h4 id="剪贴板事件-Clipboard-Events"><a href="#剪贴板事件-Clipboard-Events" class="headerlink" title="剪贴板事件(Clipboard Events)"></a>剪贴板事件(Clipboard Events)</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onCopy</span><br><span class="line">onCut</span><br><span class="line">onPaste</span><br><span class="line"></span><br><span class="line">//属性:</span><br><span class="line"><span class="attribute">DOMDataTransfer</span> clipboardData</span><br></pre></td></tr></table></figure><h4 id="合成事件-Composition-Events"><a href="#合成事件-Composition-Events" class="headerlink" title="合成事件(Composition Events)"></a>合成事件(Composition Events)</h4><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onCompositionEnd</span><br><span class="line">onCompositionStart</span><br><span class="line">onCompositionUpdate</span><br><span class="line"></span><br><span class="line"><span class="comment">//属性</span></span><br><span class="line"><span class="built_in">string</span> <span class="built_in">data</span></span><br></pre></td></tr></table></figure><h4 id="键盘事件-Keyboard-Events"><a href="#键盘事件-Keyboard-Events" class="headerlink" title="键盘事件(Keyboard Events)"></a>键盘事件(Keyboard Events)</h4><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">onKeyDown</span><br><span class="line">onKeyPress</span><br><span class="line">onKeyUp</span><br><span class="line"></span><br><span class="line"><span class="comment">//属性</span></span><br><span class="line"><span class="built_in">boolean</span> altKey</span><br><span class="line"><span class="built_in">number</span> charCode</span><br><span class="line"><span class="built_in">boolean</span> ctrlKey</span><br><span class="line"><span class="built_in">boolean</span> getModifierState(key)</span><br><span class="line"><span class="built_in">string</span> key</span><br><span class="line"><span class="built_in">number</span> keyCode</span><br><span class="line"><span class="built_in">string</span> locale</span><br><span class="line"><span class="built_in">number</span> location</span><br><span class="line"><span class="built_in">boolean</span> metaKey</span><br><span class="line"><span class="built_in">boolean</span> repeat</span><br><span class="line"><span class="built_in">boolean</span> shiftKey</span><br><span class="line"><span class="built_in">number</span> which</span><br></pre></td></tr></table></figure><h4 id="焦点事件-Focus-Events"><a href="#焦点事件-Focus-Events" class="headerlink" title="焦点事件(Focus Events)"></a>焦点事件(Focus Events)</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onFocus</span><br><span class="line">onBlur</span><br><span class="line"></span><br><span class="line">//属性</span><br><span class="line"><span class="attribute">DOMEventTarget</span> relatedTarget</span><br></pre></td></tr></table></figure><h4 id="表单事件-Form-Events"><a href="#表单事件-Form-Events" class="headerlink" title="表单事件(Form Events)"></a>表单事件(Form Events)</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onChange</span><br><span class="line">onInput</span><br><span class="line">onSubmit</span><br></pre></td></tr></table></figure><h4 id="鼠标事件-Mouse-Events"><a href="#鼠标事件-Mouse-Events" class="headerlink" title="鼠标事件(Mouse Events)"></a>鼠标事件(Mouse Events)</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">onClick</span> <span class="literal">on</span>ContextMenu <span class="literal">on</span>DoubleClick <span class="literal">on</span>Drag <span class="literal">on</span>DragEnd <span class="literal">on</span>DragEnter <span class="literal">on</span>DragExit</span><br><span class="line"><span class="literal">on</span>DragLeave <span class="literal">on</span>DragOver <span class="literal">on</span>DragStart <span class="literal">on</span>Drop <span class="literal">on</span>MouseDown <span class="literal">on</span>MouseEnter <span class="literal">on</span>MouseLeave</span><br><span class="line"><span class="literal">on</span>MouseMove <span class="literal">on</span>MouseOut <span class="literal">on</span>MouseOver <span class="literal">on</span>MouseUp</span><br><span class="line"></span><br><span class="line">//属性:</span><br><span class="line">boolean altKey</span><br><span class="line">number button</span><br><span class="line">number buttons</span><br><span class="line">number clientX</span><br><span class="line">number clientY</span><br><span class="line">boolean ctrlKey</span><br><span class="line">boolean getModifierState(key)</span><br><span class="line">boolean metaKey</span><br><span class="line">number pageX</span><br><span class="line">number pageY</span><br><span class="line">DOMEventTarget relatedTarget</span><br><span class="line">number screenX</span><br><span class="line">number screenY</span><br><span class="line">boolean shiftKey</span><br></pre></td></tr></table></figure><p>onMouseEnter 和 onMouseLeave 事件从离开的元素传播到正在进入的元素，而不是普通的冒泡，并且没有捕获阶段。</p><h4 id="选择事件-Selection-Events"><a href="#选择事件-Selection-Events" class="headerlink" title="选择事件(Selection Events)"></a>选择事件(Selection Events)</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">onSelect</span></span><br></pre></td></tr></table></figure><h4 id="触摸事件-Touch-Events"><a href="#触摸事件-Touch-Events" class="headerlink" title="触摸事件(Touch Events)"></a>触摸事件(Touch Events)</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">onTouchCancel</span><br><span class="line">onTouchEnd</span><br><span class="line">onTouchMove</span><br><span class="line">onTouchStart</span><br></pre></td></tr></table></figure><h4 id="UI事件-UI-Events"><a href="#UI事件-UI-Events" class="headerlink" title="UI事件(UI Events)"></a>UI事件(UI Events)</h4><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">onScroll</span><br><span class="line"></span><br><span class="line"><span class="comment">//属性:</span></span><br><span class="line">number detail</span><br><span class="line">DOMAbstractView <span class="keyword">view</span></span><br></pre></td></tr></table></figure><h4 id="滚轮事件-Wheel-Events"><a href="#滚轮事件-Wheel-Events" class="headerlink" title="滚轮事件(Wheel Events)"></a>滚轮事件(Wheel Events)</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onWheel</span><br><span class="line">//属性:</span><br><span class="line"><span class="built_in">number</span> deltaMode</span><br><span class="line"><span class="built_in">number</span> deltaX</span><br><span class="line"><span class="built_in">number</span> deltaY</span><br><span class="line"><span class="built_in">number</span> deltaZ</span><br></pre></td></tr></table></figure><h4 id="媒体事件-Media-Events"><a href="#媒体事件-Media-Events" class="headerlink" title="媒体事件(Media Events)"></a>媒体事件(Media Events)</h4><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">onAbort</span> <span class="literal">on</span>CanPlay <span class="literal">on</span>CanPlayThrough <span class="literal">on</span>DurationChange <span class="literal">on</span>Emptied <span class="literal">on</span>Encrypted</span><br><span class="line"><span class="literal">on</span>Ended <span class="literal">on</span>Error <span class="literal">on</span>LoadedData <span class="literal">on</span>LoadedMetadata <span class="literal">on</span>LoadStart <span class="literal">on</span>Pause <span class="literal">on</span>Play</span><br><span class="line"><span class="literal">on</span>Playing <span class="literal">on</span>Progress <span class="literal">on</span>RateChange <span class="literal">on</span>Seeked <span class="literal">on</span>Seeking <span class="literal">on</span>Stalled <span class="literal">on</span>Suspend</span><br><span class="line"><span class="literal">on</span>TimeUpdate <span class="literal">on</span>VolumeChange <span class="literal">on</span>Waiting</span><br></pre></td></tr></table></figure><h4 id="图像事件-Image-Events"><a href="#图像事件-Image-Events" class="headerlink" title="图像事件(Image Events)"></a>图像事件(Image Events)</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">onLoad</span><br><span class="line">onError</span><br></pre></td></tr></table></figure><h4 id="动画事件-Animation-Events"><a href="#动画事件-Animation-Events" class="headerlink" title="动画事件(Animation Events)"></a>动画事件(Animation Events)</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">onAnimationStart</span><br><span class="line">onAnimationEnd</span><br><span class="line">onAnimationIteration</span><br></pre></td></tr></table></figure><h4 id="转换事件-Transition-Events"><a href="#转换事件-Transition-Events" class="headerlink" title="转换事件(Transition Events)"></a>转换事件(Transition Events)</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">onTransitionEnd</span></span><br></pre></td></tr></table></figure><h4 id="其他事件-Other-Events"><a href="#其他事件-Other-Events" class="headerlink" title="其他事件(Other Events)"></a>其他事件(Other Events)</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">onToggle</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>原生js封装ajax插件</title>
      <link href="/ajax-js-plug/"/>
      <url>/ajax-js-plug/</url>
      
        <content type="html"><![CDATA[<h3 id="【ajax】"><a href="#【ajax】" class="headerlink" title="【ajax】"></a>【ajax】</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 封装ajax函数</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125;opt.type http连接的方式，包括POST和GET两种方式</span></span><br><span class="line"><span class="comment"> * @param &#123;string&#125;opt.url 发送请求的url</span></span><br><span class="line"><span class="comment"> * @param &#123;boolean&#125;opt.async 是否为异步请求，true为异步的，false为同步的</span></span><br><span class="line"><span class="comment"> * @param &#123;object&#125;opt.data 发送的参数，格式为对象类型</span></span><br><span class="line"><span class="comment"> * @param &#123;function&#125;opt.success ajax发送并接收成功调用的回调函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> Ajax = &#123;</span><br><span class="line">    <span class="comment">//ajax模块</span></span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="comment">//初始化数据</span></span><br><span class="line">        <span class="keyword">var</span> objAdapter = &#123;</span><br><span class="line">                url: <span class="string">''</span>,</span><br><span class="line">                method: <span class="string">'get'</span>,</span><br><span class="line">                data: &#123;&#125;,</span><br><span class="line">                success: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">                complete: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;,</span><br><span class="line">                error: <span class="function"><span class="keyword">function</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">                    alert(<span class="string">'status:'</span> + s + <span class="string">'error!'</span>);</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="keyword">async</span>: <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//通过使用JS随机字符串解决IE浏览器第二次默认获取缓存的问题</span></span><br><span class="line">        objAdapter.url = obj.url + <span class="string">'?rand='</span> + <span class="built_in">Math</span>.random();</span><br><span class="line">        objAdapter.method = obj.method || objAdapter.method;</span><br><span class="line">        objAdapter.data = Ajax.params(obj.data) || Ajax.params(objAdapter.data);</span><br><span class="line">        objAdapter.async = obj.async || objAdapter.async;</span><br><span class="line">        objAdapter.complete = obj.complete || objAdapter.complete;</span><br><span class="line">        objAdapter.success = obj.success || objAdapter.success;</span><br><span class="line">        objAdapter.error = obj.error || objAdapter.error;</span><br><span class="line">        <span class="keyword">return</span> objAdapter;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//创建XMLHttpRequest对象</span></span><br><span class="line">    createXHR: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">window</span>.XMLHttpRequest) &#123; <span class="comment">//IE7+、Firefox、Opera、Chrome 和Safari</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">window</span>.ActiveXObject) &#123; <span class="comment">//IE6 及以下</span></span><br><span class="line">            <span class="keyword">var</span> versions = [<span class="string">'MSXML2.XMLHttp'</span>, <span class="string">'Microsoft.XMLHTTP'</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>, len = versions.length; i &lt; len; i++) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> ActiveXObject(version[i]);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">                    <span class="comment">//跳过</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'浏览器不支持XHR对象！'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    params: <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> arr = [];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i <span class="keyword">in</span> data) &#123;</span><br><span class="line">            <span class="comment">//特殊字符传参产生的问题可以使用encodeURIComponent()进行编码处理</span></span><br><span class="line">            arr.push(<span class="built_in">encodeURIComponent</span>(i) + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(data[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.join(<span class="string">'&amp;'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    callback: <span class="function"><span class="keyword">function</span>(<span class="params">obj, xhr</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(xhr.status == <span class="number">200</span>) &#123; <span class="comment">//判断http的交互是否成功，200表示成功</span></span><br><span class="line">            obj.success(xhr.responseText); <span class="comment">//回调传递参数</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            alert(<span class="string">'获取数据错误！错误代号：'</span> + xhr.status + <span class="string">'，错误信息：'</span> + xhr.statusText);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    ajax: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(obj.method === <span class="string">'post'</span>) &#123;</span><br><span class="line">            Ajax.post(obj);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Ajax.get(obj);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//post方法</span></span><br><span class="line">    post: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> xhr = Ajax.createXHR(); <span class="comment">//创建XHR对象</span></span><br><span class="line">        <span class="keyword">var</span> opt = Ajax.init(obj);</span><br><span class="line">        opt.method = <span class="string">'post'</span>;</span><br><span class="line">        <span class="keyword">if</span>(opt.async === <span class="literal">true</span>) &#123; <span class="comment">//true表示异步，false表示同步</span></span><br><span class="line">            <span class="comment">//使用异步调用的时候，需要触发readystatechange 事件</span></span><br><span class="line">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>) &#123; <span class="comment">//判断对象的状态是否交互完成</span></span><br><span class="line">                    Ajax.callback(opt, xhr); <span class="comment">//回调</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//在使用XHR对象时，必须先调用open()方法，</span></span><br><span class="line">        <span class="comment">//它接受三个参数：请求类型(get、post)、请求的URL和表示是否异步。</span></span><br><span class="line">        xhr.open(opt.method, opt.url, opt.async);</span><br><span class="line">        <span class="comment">//post方式需要自己设置http的请求头，来模仿表单提交。</span></span><br><span class="line">        <span class="comment">//放在open方法之后，send方法之前。</span></span><br><span class="line">        xhr.setRequestHeader(<span class="string">'Content-Type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>);</span><br><span class="line">        xhr.send(opt.data); <span class="comment">//post方式将数据放在send()方法里</span></span><br><span class="line">        <span class="keyword">if</span>(opt.async === <span class="literal">false</span>) &#123; <span class="comment">//同步</span></span><br><span class="line">            Ajax.callback(obj, xhr); <span class="comment">//回调</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//get方法</span></span><br><span class="line">    get: <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> xhr = Ajax.createXHR(); <span class="comment">//创建XHR对象</span></span><br><span class="line">        <span class="keyword">var</span> opt = Ajax.init(obj);</span><br><span class="line">        <span class="keyword">if</span>(opt.async === <span class="literal">true</span>) &#123; <span class="comment">//true表示异步，false表示同步</span></span><br><span class="line">            <span class="comment">//使用异步调用的时候，需要触发readystatechange 事件</span></span><br><span class="line">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>) &#123; <span class="comment">//判断对象的状态是否交互完成</span></span><br><span class="line">                    Ajax.callback(obj, xhr); <span class="comment">//回调</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//若是GET请求，则将数据加到url后面</span></span><br><span class="line">        opt.url += opt.url.indexOf(<span class="string">'?'</span>) == <span class="number">-1</span> ? <span class="string">'?'</span> + opt.data : <span class="string">'&amp;'</span> + opt.data;</span><br><span class="line">        <span class="comment">//在使用XHR对象时，必须先调用open()方法，</span></span><br><span class="line">        <span class="comment">//它接受三个参数：请求类型(get、post)、请求的URL和表示是否异步。</span></span><br><span class="line">        xhr.open(opt.method, opt.url, opt.async);</span><br><span class="line">        xhr.send(<span class="literal">null</span>); <span class="comment">//get方式则填null</span></span><br><span class="line">        <span class="keyword">if</span>(opt.async === <span class="literal">false</span>) &#123; <span class="comment">//同步</span></span><br><span class="line">            Ajax.callback(obj, xhr); <span class="comment">//回调</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ajax </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>原生和jQuery的Ajax用法</title>
      <link href="/ajax-js-jquery/"/>
      <url>/ajax-js-jquery/</url>
      
        <content type="html"><![CDATA[<h3 id="【jquery-ajax】"><a href="#【jquery-ajax】" class="headerlink" title="【jquery-ajax】"></a>【jquery-ajax】</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url: <span class="string">'api/xxxx.php'</span>,</span><br><span class="line">    type: <span class="string">'POST'</span>, <span class="comment">//GET</span></span><br><span class="line">    <span class="keyword">async</span>: <span class="literal">true</span>, <span class="comment">//是否异步</span></span><br><span class="line">    data: &#123;</span><br><span class="line">        text: <span class="string">'aa'</span>,</span><br><span class="line">        value: <span class="string">'bb'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    timeout: <span class="number">5000</span>, <span class="comment">//超时时间</span></span><br><span class="line">    dataType: <span class="string">'json'</span> <span class="comment">//返回数据格式 (json/xml/html/script/jsonp/text)</span></span><br><span class="line">    beforeSend: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'发送前:'</span>,xhr)</span><br><span class="line">    &#125;,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">data,textStatus,jqXHR</span>)</span>&#123;&#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span>(<span class="params">xhr,textStatus</span>)</span>&#123;&#125;,</span><br><span class="line">    complete: <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'完成'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="【javascript-ajax】"><a href="#【javascript-ajax】" class="headerlink" title="【javascript-ajax】"></a>【javascript-ajax】</h3><blockquote><p>请求的5个阶段，对应readyState的值<br>0: 未初始化，send方法未调用；<br>1: 正在发送请求，send方法已调用；<br>2: 请求发送完毕，send方法执行完毕；<br>3: 正在解析响应内容；<br>4: 响应内容解析完毕；</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> data = &#123;</span><br><span class="line">    text: <span class="string">'aa'</span>,</span><br><span class="line">    value: <span class="string">'bb'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> xhr = <span class="keyword">new</span> XMLHttpRequest(); <span class="comment">//创建一个ajax对象</span></span><br><span class="line">    <span class="comment">//对ajax对象监听</span></span><br><span class="line">    xhr.onreadystatechange = <span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">        <span class="comment">//4解析完成</span></span><br><span class="line">        <span class="keyword">if</span>(xhr.readyState == <span class="number">4</span>)&#123;</span><br><span class="line">            <span class="comment">//200正常返回</span></span><br><span class="line">            <span class="keyword">if</span>(xhr == <span class="number">200</span>)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'xhr:'</span>,xhr)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//建立链接: &#123;1:发送方式,2:请求地址,3:是否异步&#125;</span></span><br><span class="line">    xhr.open(<span class="string">'POST'</span>,<span class="string">'url'</span>,<span class="literal">true</span>);</span><br><span class="line">    xhr.setRequestHeader(<span class="string">'Content-type'</span>,<span class="string">'application/x-www-form-urlencoded'</span>)  <span class="comment">//可有可无</span></span><br><span class="line">    xhr.send(data)  <span class="comment">//发送</span></span><br></pre></td></tr></table></figure><div class="note primary"><p>end </p></div>]]></content>
      
      
      <categories>
          
          <category> ajax </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>微信分享js自定义配置</title>
      <link href="/weixin-share/"/>
      <url>/weixin-share/</url>
      
        <content type="html"><![CDATA[<h3 id="基本步骤"><a href="#基本步骤" class="headerlink" title="基本步骤"></a>基本步骤</h3><p>1.引入JS文件，在需要调用JS接口的页面引入JS文件:<br>（支持https）：<a href="http://res.wx.qq.com/open/js/jweixin-1.2.0.js" target="_blank" rel="noopener">http://res.wx.qq.com/open/js/jweixin-1.2.0.js</a><br>2.通过config接口注入权限验证配置，所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，对于变化url的SPA的web app可在每次url变化时进行调用）；<br>3.通过ready接口处理成功验证。</p><h3 id="config配置"><a href="#config配置" class="headerlink" title="config配置"></a>config配置</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">wx</span><span class="selector-class">.config</span>(&#123;</span><br><span class="line">    <span class="attribute">debug</span>: true,  <span class="comment">// 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。</span></span><br><span class="line">    <span class="attribute">appId</span>: <span class="string">''</span>,    <span class="comment">// 必填，公众号的唯一标识</span></span><br><span class="line">    <span class="attribute">timestamp</span>: ,  <span class="comment">// 必填，生成签名的时间戳</span></span><br><span class="line">    <span class="attribute">nonceStr</span>: <span class="string">''</span>, <span class="comment">// 必填，生成签名的随机串</span></span><br><span class="line">    <span class="attribute">signature</span>: <span class="string">''</span>,<span class="comment">// 必填，签名，见附录1</span></span><br><span class="line">    <span class="attribute">jsApiList</span>: [] <span class="comment">// 必填，需要使用的微信JS接口列表</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="封装工具类"><a href="#封装工具类" class="headerlink" title="封装工具类"></a>封装工具类</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> weixin = &#123;</span><br><span class="line">    share: <span class="function"><span class="keyword">function</span> (<span class="params">option</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.option = option;</span><br><span class="line">        <span class="built_in">Promise</span>.all([<span class="keyword">this</span>.loadSign(), <span class="keyword">this</span>.loadFile()]).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">this</span>.use();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    loadSign: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> root;</span><br><span class="line">        <span class="keyword">var</span> url = root + <span class="string">'/userApi/weixinJsapi'</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            request.jsonp(&#123;</span><br><span class="line">                url: url,</span><br><span class="line">                data: &#123;</span><br><span class="line">                    url: location.href.split(<span class="string">'#'</span>)[<span class="number">0</span>]</span><br><span class="line">                &#125;,</span><br><span class="line">                callbackKey: <span class="string">'jsonp_callback'</span></span><br><span class="line">            &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="keyword">this</span>.token = res.data;</span><br><span class="line">                resolve();</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    loadFile: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">window</span>.wx) <span class="keyword">return</span> <span class="built_in">window</span>.noopPromise;</span><br><span class="line">        <span class="keyword">var</span> script=<span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">        script.setAttribute(<span class="string">'src'</span>, <span class="string">'http://res.wx.qq.com/open/js/jweixin-1.2.0.js'</span>);</span><br><span class="line">        <span class="built_in">document</span>.body.appendChild(script);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">            resolve();</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    use: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> wx = <span class="built_in">window</span>.wx;</span><br><span class="line">        <span class="keyword">var</span> config = <span class="built_in">Object</span>.assign(&#123;&#125;, &#123; <span class="attr">debug</span>: <span class="literal">false</span>, <span class="attr">jsApiList</span>: [</span><br><span class="line">            <span class="string">'onMenuShareTimeline'</span>,</span><br><span class="line">            <span class="string">'onMenuShareAppMessage'</span>,</span><br><span class="line">            <span class="string">'onMenuShareQQ'</span>,</span><br><span class="line">            <span class="string">'onMenuShareWeibo'</span>,</span><br><span class="line">            <span class="string">'onMenuShareQZone'</span>] &#125;, <span class="keyword">this</span>.token);</span><br><span class="line">        wx.config(config);</span><br><span class="line">        <span class="keyword">var</span> option = <span class="keyword">this</span>.option;</span><br><span class="line">        wx.ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            wx.onMenuShareTimeline(option);</span><br><span class="line">            wx.onMenuShareAppMessage(option);</span><br><span class="line">            wx.onMenuShareQQ(option);</span><br><span class="line">            wx.onMenuShareWeibo(option);</span><br><span class="line">            wx.onMenuShareQZone(option);                </span><br><span class="line">        &#125;)</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//调试微信接口</span></span><br><span class="line">        wx.error(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">            <span class="built_in">window</span>.alert(<span class="string">'res'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="应用工具类"><a href="#应用工具类" class="headerlink" title="应用工具类"></a>应用工具类</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> option = &#123;</span><br><span class="line">    title: <span class="string">'标题'</span>,</span><br><span class="line">    desc: <span class="string">'描述文案'</span> || <span class="string">'默认描述文案~\n换行'</span>,</span><br><span class="line">    imgUrl: <span class="string">'http://blog.xonepage.com/uploads/portrait_1.jpg'</span>,</span><br><span class="line">    link: <span class="built_in">window</span>.location.href,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">window</span>.toast(<span class="string">'分享成功'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    cancel: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">window</span>.toast(<span class="string">'分享取消'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">weixin.share(option)</span><br></pre></td></tr></table></figure><h3 id="相关文献"><a href="#相关文献" class="headerlink" title="相关文献"></a>相关文献</h3><ul><li><a href="https://mp.weixin.qq.com/wiki?t=resource/res_main&amp;id=mp1421141115" target="_blank" rel="noopener">官方文档</a></li><li><a href="/weixin-image/" target="_blank">微信图像操作</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 微信 </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>javascript/jq工具类扩展</title>
      <link href="/js-util/"/>
      <url>/js-util/</url>
      
        <content type="html"><![CDATA[<h3 id="【javascript原生工具扩展】"><a href="#【javascript原生工具扩展】" class="headerlink" title="【javascript原生工具扩展】"></a>【javascript原生工具扩展】</h3><h4 id="Date工具类"><a href="#Date工具类" class="headerlink" title="Date工具类"></a>Date工具类</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * javascript原生工具扩展</span></span><br><span class="line"><span class="comment"> * ski</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">Date</span>.prototype.format = <span class="function"><span class="keyword">function</span>(<span class="params">format</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> o = &#123;</span><br><span class="line">        <span class="string">"M+"</span>: <span class="keyword">this</span>.getMonth() + <span class="number">1</span>, <span class="comment">//month</span></span><br><span class="line">        <span class="string">"d+"</span>: <span class="keyword">this</span>.getDate(), <span class="comment">//day</span></span><br><span class="line">        <span class="string">"h+"</span>: <span class="keyword">this</span>.getHours(), <span class="comment">//hour</span></span><br><span class="line">        <span class="string">"m+"</span>: <span class="keyword">this</span>.getMinutes(), <span class="comment">//minute</span></span><br><span class="line">        <span class="string">"s+"</span>: <span class="keyword">this</span>.getSeconds(), <span class="comment">//second</span></span><br><span class="line">        <span class="string">"q+"</span>: <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>), <span class="comment">//quarter</span></span><br><span class="line">        <span class="string">"S"</span>: <span class="keyword">this</span>.getMilliseconds() <span class="comment">//millisecond</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(format)) &#123;</span><br><span class="line">        format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear() + <span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span> + k + <span class="string">")"</span>).test(format)) &#123;</span><br><span class="line">            format = format.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, <span class="built_in">RegExp</span>.$<span class="number">1.</span>length == <span class="number">1</span> ? o[k] : (<span class="string">"00"</span> + o[k]).substr((<span class="string">""</span> + o[k]).length));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> format;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * eg: new Date().toLocaleString();</span></span><br><span class="line"><span class="comment"> * @return 2011-01-01 12:00:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">Date</span>.prototype.toLocaleString = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.toString()==<span class="string">"Invalid Date"</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.format(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="String工具类"><a href="#String工具类" class="headerlink" title="String工具类"></a>String工具类</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @description trim去掉字符串两边的指定字符,默去空格</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">String</span>.prototype.trim = <span class="function"><span class="keyword">function</span>(<span class="params">tag</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!tag) &#123; </span><br><span class="line">        tag = <span class="string">'\\s'</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="keyword">if</span> (tag == <span class="string">'\\'</span>) &#123; </span><br><span class="line">        tag = <span class="string">'\\\\'</span>; </span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (tag == <span class="string">','</span> || tag == <span class="string">'|'</span> || tag == <span class="string">';'</span>) &#123; </span><br><span class="line">            tag = <span class="string">'\\'</span> + tag; </span><br><span class="line">        &#125;<span class="keyword">else</span> &#123; </span><br><span class="line">            tag = <span class="string">'\\s'</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">eval</span>(<span class="string">'var reg=/(^'</span> + tag + <span class="string">'+)|('</span> + tag + <span class="string">'+$)/g;'</span>); </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(reg, <span class="string">''</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @description 字符串截取后面加入...</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">String</span>.prototype.interceptString = <span class="function"><span class="keyword">function</span>(<span class="params">len</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.length &gt; len) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.substring(<span class="number">0</span>, len) + <span class="string">"..."</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @description 将一个字符串用给定的字符变成数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">String</span>.prototype.toArray = <span class="function"><span class="keyword">function</span>(<span class="params">tag</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.indexOf(tag) != <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.split(tag);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span> != <span class="string">''</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> [<span class="keyword">this</span>.toString()];</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @description 只留下数字(0123456789)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">String</span>.prototype.toNumber= <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(<span class="regexp">/\D/g</span>, <span class="string">""</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @description 保留中文</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">String</span>.prototype.toCN= <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line">    <span class="keyword">var</span> regEx = <span class="regexp">/[^\u4e00-\u9fa5\uf900-\ufa2d]/g</span>;  </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.replace(regEx, <span class="string">''</span>);  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @description 是否是以XX开头</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">String</span>.prototype.startsWith= <span class="function"><span class="keyword">function</span>(<span class="params">tag</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.substring(<span class="number">0</span>, tag.length) == tag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @description 是否已XX结尾</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">String</span>.prototype.endWith= <span class="function"><span class="keyword">function</span>(<span class="params">tag</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.substring(<span class="keyword">this</span>.length - tag.length) == tag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Array工具类"><a href="#Array工具类" class="headerlink" title="Array工具类"></a>Array工具类</h4><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 根据数据取得再数组中的索引</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Array.prototype.getIndex = function(obj)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">this</span>[i]) &#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 移除数组中的某元素</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Array.prototype.remove= function (obj) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">this</span>[i]) &#123;</span><br><span class="line">            <span class="keyword">this</span>.splice(i, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 判断元素是否在数组中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Array.prototype.contains= function (obj) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">this</span>[i]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="浏览器操作"><a href="#浏览器操作" class="headerlink" title="浏览器操作"></a>浏览器操作</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进入全屏模式,  判断各种浏览器，找到正确的方法</span></span><br><span class="line"><span class="keyword">var</span> launchFullScreen = <span class="function"><span class="keyword">function</span> (<span class="params">element</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(element.requestFullscreen) &#123;</span><br><span class="line">        element.requestFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(element.mozRequestFullScreen) &#123;</span><br><span class="line">        element.mozRequestFullScreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(element.webkitRequestFullscreen) &#123;</span><br><span class="line">        element.webkitRequestFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(element.msRequestFullscreen) &#123;</span><br><span class="line">        element.msRequestFullscreen();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//退出全屏模式</span></span><br><span class="line"><span class="keyword">var</span> exitFullScreen = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">document</span>.exitFullscreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.exitFullscreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">document</span>.mozCancelFullScreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.mozCancelFullScreen();</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">document</span>.webkitExitFullscreen) &#123;</span><br><span class="line">        <span class="built_in">document</span>.webkitExitFullscreen();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="【jQuery工具扩展】"><a href="#【jQuery工具扩展】" class="headerlink" title="【jQuery工具扩展】"></a>【jQuery工具扩展】</h3><h4 id="jquery公共方法"><a href="#jquery公共方法" class="headerlink" title="jquery公共方法"></a>jquery公共方法</h4><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">function</span>($) &#123;</span><br><span class="line">    //公用方法</span><br><span class="line">    $.extend($, &#123;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * @description 判断变量是否存在,或者是否以某种类型存在</span><br><span class="line">         * @param &#123;object&#125; o  判断变量是否存在</span><br><span class="line">         * @param &#123;object&#125; type 数据类型  Number,Boolean等</span><br><span class="line">         * @return &#123;Boolean&#125; nResult 返回结果 <span class="literal">true</span>或者<span class="literal">false</span></span><br><span class="line">         */</span><br><span class="line">        isExists: function(<span class="name">o</span>, type) &#123;</span><br><span class="line">            return o != undefined &amp;&amp; o !== null &amp;&amp; (<span class="name"><span class="builtin-name">type</span></span> ? o.constructor == type : <span class="literal">true</span>)<span class="comment">;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * @description 把任意类型转成Boolean</span><br><span class="line">         * @param &#123;object&#125; o  任意对象</span><br><span class="line">         * @return &#123;Boolean&#125; nResult 返回结果 <span class="literal">true</span>或者<span class="literal">false</span></span><br><span class="line">         */</span><br><span class="line">        parseBoolean: function(<span class="name">o</span>) &#123;</span><br><span class="line">            var flag = !! o;</span><br><span class="line">            return (<span class="name">flag</span> &amp;&amp; typeof(<span class="name">o</span>) == <span class="string">"string"</span> &amp;&amp; (<span class="name">o</span></span><br><span class="line">                .toLowerCase() == <span class="string">"false"</span> || o.toLowerCase() == <span class="string">"null"</span> || o.toLowerCase() == <span class="string">"undefined"</span> || o == <span class="string">"0"</span>)) ? <span class="literal">false</span> : flag;</span><br><span class="line">        &#125;,</span><br><span class="line">        parseDateTime: function (<span class="name"><span class="builtin-name">str</span></span>) &#123;</span><br><span class="line">            if (<span class="name"><span class="builtin-name">str</span></span>) &#123;</span><br><span class="line">                return new Date(<span class="name">str.replace</span>(/-/g, '/'))<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * @description 把字符串自动转换成它原来的类型</span><br><span class="line">         * @param val o  任意对象</span><br><span class="line">         * @return val any</span><br><span class="line">         */</span><br><span class="line">        parseAny: function(<span class="name"><span class="builtin-name">val</span></span>) &#123;</span><br><span class="line">            if (<span class="name">typeof</span> val == 'string') &#123;</span><br><span class="line">                if (<span class="name"><span class="builtin-name">val</span></span> != <span class="string">""</span> &amp;&amp; !isNaN(<span class="name"><span class="builtin-name">val</span></span>)) &#123;</span><br><span class="line">                    val = val - <span class="number">0</span><span class="comment">;</span></span><br><span class="line">                &#125; else if (<span class="name">val.toLowerCase</span>() == <span class="string">"true"</span>) &#123;</span><br><span class="line">                    val = <span class="literal">true</span><span class="comment">;</span></span><br><span class="line">                &#125; else if (<span class="name">val.toLowerCase</span>() == <span class="string">"false"</span>) &#123;</span><br><span class="line">                    val = <span class="literal">false</span><span class="comment">;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            return val;</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * @description 将?key1=value1&amp;key2=value2&amp;...转换成一个对象&#123;key1:value1,key2:value2....&#125;</span><br><span class="line">         * @param &#123;String&#125; string  String字符串</span><br><span class="line">         * @return &#123;Object&#125; obj 返回结果 &#123;key1:value1,key2:value2....&#125;</span><br><span class="line">         */</span><br><span class="line">        parseParam: function(<span class="name"><span class="builtin-name">str</span></span>) &#123;</span><br><span class="line">            var obj = &#123;&#125;<span class="comment">;</span></span><br><span class="line">            if (<span class="name"><span class="builtin-name">str</span></span> == undefined || str == null) &#123;</span><br><span class="line">                return obj;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (<span class="name">typeof</span> str == 'object') &#123;</span><br><span class="line">                return str;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (<span class="name">typeof</span> str == 'string') &#123;</span><br><span class="line">                str = decodeURIComponent(<span class="name"><span class="builtin-name">str</span></span>)<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            //踢出前缀#或者？</span><br><span class="line">            str = str.replace(/^[\?\#]/, <span class="string">""</span>)<span class="comment">;</span></span><br><span class="line">            //分割参数</span><br><span class="line">            var params = str.split(<span class="string">"&amp;"</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">            for (<span class="name"><span class="builtin-name">var</span></span> i = <span class="number">0</span><span class="comment">; i &lt; params.length; i++) &#123;</span></span><br><span class="line">                var item = params[i].split(<span class="string">"="</span>)<span class="comment">;</span></span><br><span class="line">                var key = item[<span class="number">0</span>]<span class="comment">;</span></span><br><span class="line">                var val = item[<span class="number">1</span>]<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">                if (<span class="name">!key</span>) &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                //类型转换</span><br><span class="line">                if (<span class="name"><span class="builtin-name">val</span></span> == undefined) &#123;</span><br><span class="line">                    val = <span class="literal">true</span><span class="comment">;</span></span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    val = this.parseAny(<span class="name"><span class="builtin-name">val</span></span>)<span class="comment">;</span></span><br><span class="line">                &#125;</span><br><span class="line">                obj[key] = val;</span><br><span class="line">            &#125;</span><br><span class="line">            return obj;</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * 获取url参数</span><br><span class="line">         */</span><br><span class="line">        getQueryString: function(<span class="name"><span class="builtin-name">name</span></span>) &#123;</span><br><span class="line">            var reg = new RegExp(<span class="string">"(^|&amp;|)"</span>+ name +<span class="string">"=([^&amp;]*)(&amp;|$)"</span>)<span class="comment">;</span></span><br><span class="line">            var r = window.location.hash.substr(<span class="number">1</span>).match(<span class="name">reg</span>)<span class="comment">;</span></span><br><span class="line">            if(<span class="name">r</span> != null) return  unescape(<span class="name">r</span>[<span class="number">2</span>])<span class="comment">; return null;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * @description 占位符格式化</span><br><span class="line">         * @param &#123;String&#125; str 需要替换的模板</span><br><span class="line">         * @param &#123;Object&#125; params 参数</span><br><span class="line">         * @param &#123;Boolean&#125; isEncode 是否编码</span><br><span class="line">         * @eg demo(<span class="string">"http://www.baidu.com?name=&#123;name&#125;&amp;age=&#123;age&#125;&amp;chanelid=&#123;chanelid&#125;"</span>,&#123;name:<span class="string">"demo"</span>,age:23,chanelid:100&#125;,<span class="literal">false</span>)</span><br><span class="line">         * @return &#123;String&#125; str 返回结果 http://www.baidu.com?name=demo&amp;age=23&amp;chanelid=100</span><br><span class="line">         */</span><br><span class="line">        format: function(<span class="name"><span class="builtin-name">str</span></span>, params, isEncode) &#123;</span><br><span class="line">            if (<span class="name">typeof</span> params == <span class="string">"object"</span>) &#123;</span><br><span class="line">                for (<span class="name"><span class="builtin-name">var</span></span> key in params) &#123;</span><br><span class="line">                    if (<span class="name">!</span>$.isExists(<span class="name">params</span>[key]) || params[key] == <span class="string">"undefined"</span> || params[key] == <span class="string">"null"</span>) &#123;</span><br><span class="line">                        params[key] = <span class="string">""</span><span class="comment">;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    str = str.replace(<span class="name"><span class="builtin-name">new</span></span> RegExp(<span class="string">"\\&#123;"</span> + key + <span class="string">"\\&#125;"</span>, <span class="string">"ig"</span>), isEncode ? encodeURIComponent(<span class="name">params</span>[key]) : params[key])<span class="comment">;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            return str.replace(/\&#123;\w*\&#125;/ig, <span class="string">""</span>)<span class="comment">;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * 去掉字符串起始的制定字符</span><br><span class="line">         * @method trimStart</span><br><span class="line">         * @param &lt;String&gt; text 指定字符串</span><br><span class="line">         * @param &lt;String&gt; trimStr 替换字符串</span><br><span class="line">         */</span><br><span class="line">        trimStart: function(<span class="name">text</span>, trimStr) &#123;</span><br><span class="line">            return (<span class="name">text</span> || <span class="string">""</span>).replace(<span class="name"><span class="builtin-name">new</span></span> RegExp(<span class="string">"^"</span> + trimStr + <span class="string">"*"</span>, <span class="string">"g"</span>), <span class="string">""</span>)<span class="comment">;</span></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 去掉字符串结尾的制定字符</span><br><span class="line">         * @method trimEnd</span><br><span class="line">         * @param &lt;String&gt; text 指定字符串</span><br><span class="line">         * @param &lt;String&gt; trimStr 替换字符串</span><br><span class="line">         */</span><br><span class="line">        trimEnd: function(<span class="name">text</span>, trimStr) &#123;</span><br><span class="line">            return (<span class="name">text</span> || <span class="string">""</span>).replace(<span class="name"><span class="builtin-name">new</span></span> RegExp(<span class="name">trimStr</span> + <span class="string">"*$"</span>, <span class="string">"g"</span>), <span class="string">""</span>)<span class="comment">;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        startWith: function(<span class="name">s</span>, d) &#123;</span><br><span class="line">            return new RegExp(<span class="string">"^"</span> + d).test(<span class="name">s</span>)<span class="comment">;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * 获取标准表单数据，转换为JSON数据格式</span><br><span class="line">         * @method getForm</span><br><span class="line">         * @example $.getForm(<span class="string">"#form"</span>)<span class="comment">;</span></span><br><span class="line">         * isParse是否转化类型</span><br><span class="line">         * @return &lt;Object&gt; data</span><br><span class="line">         */</span><br><span class="line">        getForm: function ($form, isParse) &#123;</span><br><span class="line">            var data = &#123;&#125;<span class="comment">;</span></span><br><span class="line">            $form = $($form)<span class="comment">;</span></span><br><span class="line">            if ($form.length == <span class="number">0</span>) &#123;</span><br><span class="line">                return data;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $(<span class="string">"input"</span>, $form).each(<span class="name">function</span> () &#123;</span><br><span class="line">                var item = $(<span class="name">this</span>)<span class="comment">;</span></span><br><span class="line">                var name = item.attr(<span class="string">"name"</span>)<span class="comment">;</span></span><br><span class="line">                if (<span class="name">!name</span> || $.isExists(<span class="name">data</span>[name])) &#123;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                switch (<span class="name">item.attr</span>(<span class="string">"type"</span>)) &#123;</span><br><span class="line">                    case <span class="string">"radio"</span>:</span><br><span class="line">                        // DOTO: 当 input[type=<span class="string">"radio"</span>][disabled=<span class="string">"disabled"</span>] 为禁用</span><br><span class="line">                        if (<span class="name">!this.disabled</span> &amp;&amp; this.checked) &#123;</span><br><span class="line">                            data[name] = item.val()<span class="comment">;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        break;</span><br><span class="line">                    case <span class="string">"checkbox"</span>:</span><br><span class="line">                        // DOTO: 当 input[type=<span class="string">"checkbox"</span>][disabled=<span class="string">"disabled"</span>] 为禁用</span><br><span class="line">                        if (<span class="name">this.disabled</span>) &#123;</span><br><span class="line">                            break;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        data[name] = <span class="string">""</span><span class="comment">;</span></span><br><span class="line">                        $(<span class="string">"input[type='checkbox'][name='"</span> + name + <span class="string">"']:checked"</span>, $form).each(<span class="name">function</span> () &#123;</span><br><span class="line">                            data[name] += this.value + <span class="string">","</span><span class="comment">;</span></span><br><span class="line">                        &#125;)</span><br><span class="line">                        data[name] = $.trimEnd(<span class="name">data</span>[name], ',')<span class="comment">;</span></span><br><span class="line">                        break;</span><br><span class="line">                    case <span class="string">"button"</span>:</span><br><span class="line">                    case <span class="string">"reset"</span>:</span><br><span class="line">                    case <span class="string">"submit"</span>:</span><br><span class="line">                        break;</span><br><span class="line">                    default:</span><br><span class="line">                        // DOTO: 当 input[type=<span class="string">"text"</span>][disabled=<span class="string">"disabled"</span>] 为禁用</span><br><span class="line">                        if (<span class="name">!this.disabled</span>) &#123;</span><br><span class="line">                            data[name] = $.trim(<span class="name">item.val</span>())<span class="comment">;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                        break;</span><br><span class="line">                &#125;</span><br><span class="line">                data[name] = isParse ? $.parseAny(<span class="name">data</span>[name]) : data[name]<span class="comment">;</span></span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line">            $(<span class="string">"textarea"</span>, $form).each(<span class="name">function</span> () &#123;</span><br><span class="line">                if (<span class="name">!this.name</span>) &#123;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                data[this.name] = $.parseAny(<span class="name">this.value</span>)<span class="comment">;</span></span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line">            $(<span class="string">"select"</span>, $form).each(<span class="name">function</span> () &#123;</span><br><span class="line">                if (<span class="name">!this.name</span>) &#123;</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">                data[this.name] = isParse ? $.parseAny(<span class="name">this.value</span>) : this.value;</span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line">            return data;</span><br><span class="line">        &#125;,</span><br><span class="line">        setForm: function ($form, data) &#123;</span><br><span class="line">            $form = $($form)<span class="comment">;</span></span><br><span class="line">            if ($form.length == <span class="number">0</span> || !$.isPlainObject(<span class="name">data</span>)) &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line">            var nodes = $form.get(<span class="number">0</span>).elements;</span><br><span class="line">            var i = <span class="number">0</span>,</span><br><span class="line">                iLen = nodes.length;</span><br><span class="line">            var j, jLen, item, name, type, select, value, existsVal;</span><br><span class="line"></span><br><span class="line">            for (<span class="comment">; i &lt; iLen; i++) &#123;</span></span><br><span class="line">                item = nodes[i]<span class="comment">;</span></span><br><span class="line">                name = item.name;</span><br><span class="line">                type = item.type;</span><br><span class="line">                value = data[name]<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">                if (<span class="name">!name</span> || item.disabled || !$.isExists(<span class="name">value</span>) || <span class="string">"file"</span> == type) &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                if (<span class="string">"radio"</span> == type) &#123;</span><br><span class="line">                    item.checked = item.value == (<span class="name">value</span> + <span class="string">""</span>)<span class="comment">;</span></span><br><span class="line">                &#125; else if (<span class="string">"checkbox"</span> == type || <span class="string">"select-multiple"</span> == type) &#123;</span><br><span class="line">                    if ($.isArray(<span class="name">value</span>)) &#123;</span><br><span class="line">                        //把值转化成字符串</span><br><span class="line">                        for (<span class="name"><span class="builtin-name">var</span></span> n = <span class="number">0</span><span class="comment">; n &lt; value.length; n++) &#123;</span></span><br><span class="line">                            value[n] += <span class="string">""</span><span class="comment">;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        value = (<span class="name">value</span> + <span class="string">""</span>).split(<span class="name">'</span>,')<span class="comment">;</span></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    if (<span class="string">"checkbox"</span> == type) &#123;</span><br><span class="line">                        item.checked = $.inArray(<span class="name">item.value</span>, value) != <span class="number">-1</span><span class="comment">;</span></span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        select = item.options;</span><br><span class="line">                        for (<span class="name">j</span> = <span class="number">0</span>, jLen = select.length; j &lt; jLen; j++) &#123;</span><br><span class="line">                            item = select[j]<span class="comment">;</span></span><br><span class="line">                            item.selected = $.inArray(<span class="name">item.value</span>, value) != <span class="number">-1</span><span class="comment">;</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    if (<span class="name">undefined</span> != value) &#123;</span><br><span class="line">                        item.value = value;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * 重置表单</span><br><span class="line">         * @method resetForm</span><br><span class="line">         * @example $.resetForm(<span class="string">"#myFormId"</span>)<span class="comment">;</span></span><br><span class="line">         * @param formId #+表单Id</span><br><span class="line">         */</span><br><span class="line">        resetForm: function ($form) &#123;</span><br><span class="line">            $($form).get(<span class="number">0</span>).reset()<span class="comment">;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * 加载并解析模板</span><br><span class="line">         * @usage $.template(<span class="name">'tpl-paotui-orderDetails'</span>, data) loads and compile '/static/manage/modules/paotui/batchDelivers.tpl'</span><br><span class="line">         */</span><br><span class="line">        template: function (<span class="name">id</span>, data) &#123;</span><br><span class="line">            /**</span><br><span class="line">             * @param id &#123;String&#125; starts with 'tpl'</span><br><span class="line">             * @param data &#123;Object&#125;</span><br><span class="line">             */</span><br><span class="line">            var _templates = Namespace(<span class="name">'DDXQ._templates'</span>)<span class="comment">;</span></span><br><span class="line">            var render, tpl_base;</span><br><span class="line">            tpl_base = site_root + '/static/manage/modules/';</span><br><span class="line">            if (<span class="name">!id</span>) &#123;</span><br><span class="line">                return;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (<span class="name">!</span>$.isPlainObject(<span class="name">data</span>)) &#123;</span><br><span class="line">                data = &#123;&#125;<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            if (<span class="name">id.indexOf</span>(<span class="name">'tpl'</span>) != <span class="number">0</span>) &#123;</span><br><span class="line">                return template(<span class="name">id</span>, data)<span class="comment">;</span></span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                id = id.substr(<span class="number">4</span>)<span class="comment">;</span></span><br><span class="line">                if (<span class="name">id</span> in _templates) &#123;</span><br><span class="line">                    return _templates[id](<span class="name">data</span>)<span class="comment">;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url: tpl_base + id.replace(/-/g, <span class="string">"/"</span>) + <span class="string">".tpl"</span>,</span><br><span class="line">                cache: <span class="literal">false</span>,</span><br><span class="line">                async: <span class="literal">false</span>,</span><br><span class="line">                dataType: 'html',</span><br><span class="line">                success: function (<span class="name">html</span>) &#123;</span><br><span class="line">                    render = template.compile(<span class="name">html</span>)<span class="comment">;</span></span><br><span class="line">                    _templates[id] = render;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">            if (<span class="name">render</span>) &#123;</span><br><span class="line">                return render(<span class="name">data</span>)<span class="comment">;</span></span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                console.log(<span class="name">id</span> + '模板加载出错')<span class="comment">;</span></span><br><span class="line">                return <span class="string">""</span><span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * 加载外部模版并解析</span><br><span class="line">         * @usage $.artTemplate(<span class="name">'test'</span>, data) loads and compile '/test.tpl'</span><br><span class="line">         */</span><br><span class="line">        artTemplate: function(<span class="name"><span class="builtin-name">name</span></span>, data)&#123;</span><br><span class="line">            var render = null;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url: name + <span class="string">".tpl"</span>,</span><br><span class="line">                cache: <span class="literal">false</span>,</span><br><span class="line">                async: <span class="literal">false</span>,</span><br><span class="line">                dataType: 'html',</span><br><span class="line">                success: function (<span class="name">tpl</span>) &#123;</span><br><span class="line">                    render = template.compile(<span class="name">tpl</span>)<span class="comment">;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line">            return render ? render(<span class="name">data</span>) : '模版加载失败';</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        sendLog: function (<span class="name"><span class="builtin-name">key</span></span>, msg) &#123;</span><br><span class="line">            /**</span><br><span class="line">             * @param key &#123;String&#125; 日志key值，相当于路由</span><br><span class="line">             * @param msg &#123;Object&#125; 一维键值对，用于传递需要打日志的数据</span><br><span class="line">             * @usage $.sendLog(<span class="name">'task/schedule/batchdispatch'</span>, &#123;row_index: <span class="number">2</span>&#125;)</span><br><span class="line">             */</span><br><span class="line">            var data = $.extend(<span class="name">msg</span>, &#123;key: key&#125;)<span class="comment">;</span></span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url: site_root + '/api/sendLog',</span><br><span class="line">                method: 'post',</span><br><span class="line">                data: data</span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        findByKey: function (<span class="name"><span class="builtin-name">key</span></span>, value, collection) &#123;</span><br><span class="line">            /**</span><br><span class="line">             * @param key &#123;String&#125; property key</span><br><span class="line">             * @param value &#123;Any&#125; property value</span><br><span class="line">             * @param collection &#123;Array&#125; data collection to be searching in</span><br><span class="line">             */</span><br><span class="line">            for (<span class="name"><span class="builtin-name">var</span></span> i = <span class="number">0</span>, item; item = collection[i]<span class="comment">; i++) &#123;</span></span><br><span class="line">                if (<span class="name">item</span>[key] == value) &#123;</span><br><span class="line">                    return item;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;,</span><br><span class="line">        getProp: function (<span class="name"><span class="builtin-name">key</span></span>, global) &#123;</span><br><span class="line">            /**</span><br><span class="line">             * @param key &#123;String&#125; format: `a.b.c ...`</span><br><span class="line">             * @param global &#123;Object&#125;</span><br><span class="line">             */</span><br><span class="line">            global = global || window;</span><br><span class="line">            var segments = key.split(<span class="name">'.'</span>)<span class="comment">;</span></span><br><span class="line">            var segRefs = []<span class="comment">;</span></span><br><span class="line">            var length = segments.length;</span><br><span class="line">            segRefs[<span class="number">0</span>] = global[segments[<span class="number">0</span>]]<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">            if (<span class="name">length</span> == <span class="number">1</span>) &#123;</span><br><span class="line">                return segRefs[<span class="number">0</span>]<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            for (<span class="name"><span class="builtin-name">var</span></span> i = <span class="number">1</span><span class="comment">; i &lt; segments.length; i++) &#123;</span></span><br><span class="line">                segRefs[i] = segRefs[i - <span class="number">1</span>][segments[i]]<span class="comment">;</span></span><br><span class="line">                if (<span class="name">!segRefs</span>[i]) &#123;</span><br><span class="line">                    return undefined;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return segRefs[segments.length - <span class="number">1</span>]<span class="comment">;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        uuid: function () &#123;</span><br><span class="line">            var d = new Date().getTime()<span class="comment">;</span></span><br><span class="line">            if (<span class="name">window.performance</span> &amp;&amp; typeof window.performance.now === <span class="string">"function"</span>) &#123;</span><br><span class="line">                d += performance.now()<span class="comment">; //use high-precision timer if available</span></span><br><span class="line">            &#125;</span><br><span class="line">            var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (<span class="name">c</span>) &#123;</span><br><span class="line">                var r = (<span class="name">d</span> + Math.random() * <span class="number">16</span>) % <span class="number">16</span> | <span class="number">0</span><span class="comment">;</span></span><br><span class="line">                d = Math.floor(<span class="name">d</span> / <span class="number">16</span>)<span class="comment">;</span></span><br><span class="line">                return (<span class="name">c</span> == 'x' ? r : (<span class="name">r</span> &amp; <span class="number">0</span>x3 | <span class="number">0</span>x8)).toString(<span class="number">16</span>)<span class="comment">;</span></span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line">            return uuid;</span><br><span class="line">        &#125;,</span><br><span class="line">        makeComboboxData: function (<span class="name">textField</span>, valueField, collection, hasAll) &#123;</span><br><span class="line">            var _data = []<span class="comment">;</span></span><br><span class="line">            hasAll &amp;&amp; _data.push(&#123;text: '全部', value: ''&#125;)<span class="comment">;</span></span><br><span class="line">            $.each(<span class="name">collection</span>, function (<span class="name">index</span>, item) &#123;</span><br><span class="line">                _data.push(&#123;</span><br><span class="line">                    text: item[textField],</span><br><span class="line">                    value: item[valueField]</span><br><span class="line">                &#125;)<span class="comment">;</span></span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line">            return _data;</span><br><span class="line">        &#125;,</span><br><span class="line">        makeComboboxFromMap: function (<span class="name"><span class="builtin-name">map</span></span>, hasAll) &#123;</span><br><span class="line">            var _data = []<span class="comment">;</span></span><br><span class="line">            hasAll &amp;&amp; _data.push(&#123;text: '全部', value: ''&#125;)<span class="comment">;</span></span><br><span class="line">            $.each(<span class="name"><span class="builtin-name">map</span></span>, function (<span class="name"><span class="builtin-name">key</span></span>, val) &#123;</span><br><span class="line">                _data.push(&#123;</span><br><span class="line">                    text: val,</span><br><span class="line">                    value: key</span><br><span class="line">                &#125;)<span class="comment">;</span></span><br><span class="line">            &#125;)<span class="comment">;</span></span><br><span class="line">            return _data;</span><br><span class="line">        &#125;,</span><br><span class="line">        </span><br><span class="line">        /**</span><br><span class="line">         * @param img</span><br><span class="line">         * @param &#123;Array&#125; [size = [<span class="number">80</span>, <span class="number">80</span>]]</span><br><span class="line">         * @param &#123;Number&#125; [mode = <span class="number">1</span>]</span><br><span class="line">         */</span><br><span class="line">        qiniuImgCrop: function (<span class="name">img</span>, size, mode) &#123;</span><br><span class="line">            // @see http://developer.qiniu.com/code/v6/api/kodo-api/image/imageview2.html</span><br><span class="line">            if (<span class="name">typeof</span> img !== 'string') &#123;</span><br><span class="line">                throw new TypeError(<span class="name">'Invalid</span> Param Type for `img`, URLString Expected.')</span><br><span class="line">            &#125;</span><br><span class="line">            var defaults = &#123;</span><br><span class="line">                size: [<span class="number">80</span>, <span class="number">80</span>],</span><br><span class="line">                mode: <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            size = size || defaults.size;</span><br><span class="line">            mode = mode || defaults.mode;</span><br><span class="line"></span><br><span class="line">            var ext = 'imageView2/' + mode + '/w/' + size[<span class="number">0</span>] + '/h/' + size[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">            // `?` exist in img url</span><br><span class="line">            if (<span class="name">img.indexOf</span>(<span class="name">'?'</span>) &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">                return img.split(<span class="name">'!'</span>)[<span class="number">0</span>].split(<span class="name">'?'</span>)[<span class="number">0</span>] + '?' + ext</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return img + '?' + ext</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)<span class="comment">;</span></span><br><span class="line">&#125;($))<span class="comment">;</span></span><br></pre></td></tr></table></figure><h4 id="jquery-cookie"><a href="#jquery-cookie" class="headerlink" title="jquery cookie"></a>jquery cookie</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</span><br><span class="line">$.extend(&#123;</span><br><span class="line">cookie : <span class="function"><span class="keyword">function</span> (<span class="params">key, value, options</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// key and value given, set cookie...</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">arguments</span>.length &gt; <span class="number">1</span> &amp;&amp; (value === <span class="literal">null</span> || <span class="keyword">typeof</span> value !== <span class="string">"object"</span>)) &#123;</span><br><span class="line">        options = jQuery.extend(&#123;&#125;, options);</span><br><span class="line">        <span class="keyword">if</span> (value === <span class="literal">null</span>) &#123;</span><br><span class="line">            options.expires = <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> options.expires === <span class="string">'number'</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> days = options.expires, t = options.expires = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">            t.setDate(t.getDate() + days);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">document</span>.cookie = [</span><br><span class="line">            <span class="built_in">encodeURIComponent</span>(key), <span class="string">'='</span>,</span><br><span class="line">            options.raw ? <span class="built_in">String</span>(value) : <span class="built_in">encodeURIComponent</span>(<span class="built_in">String</span>(value)),</span><br><span class="line">            options.expires ? <span class="string">'; expires='</span> + options.expires.toUTCString() : <span class="string">''</span>, <span class="comment">// use expires attribute, max-age is not supported by IE</span></span><br><span class="line">            options.path ? <span class="string">'; path='</span> + options.path : <span class="string">''</span>,</span><br><span class="line">            options.domain ? <span class="string">'; domain='</span> + options.domain : <span class="string">''</span>,</span><br><span class="line">            options.secure ? <span class="string">'; secure'</span> : <span class="string">''</span></span><br><span class="line">        ].join(<span class="string">''</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// key and possibly options given, get cookie...</span></span><br><span class="line">    options = value || &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> result, decode = options.raw ? <span class="function"><span class="keyword">function</span> (<span class="params">s</span>) </span>&#123; <span class="keyword">return</span> s; &#125; : <span class="built_in">decodeURIComponent</span>;</span><br><span class="line">    <span class="keyword">return</span> (result = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'(?:^|; )'</span> + <span class="built_in">encodeURIComponent</span>(key) + <span class="string">'=([^;]*)'</span>).exec(<span class="built_in">document</span>.cookie)) ? decode(result[<span class="number">1</span>]) : <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)(jQuery);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>EasyUI工具类扩展</title>
      <link href="/easyui-util/"/>
      <url>/easyui-util/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>如果对easyui还未有一定了解，引用参考<a href="http://www.runoob.com/jeasyui/jqueryeasyui-tutorial.html" target="_blank" rel="noopener">easyui 穿越&gt;&gt;</a></p></blockquote><h3 id="【示例】"><a href="#【示例】" class="headerlink" title="【示例】"></a>【示例】</h3><h4 id="1-扩展validate规则"><a href="#1-扩展validate规则" class="headerlink" title="1.扩展validate规则"></a>1.扩展validate规则</h4><blockquote><p>使用:<code>data-options=&quot;validType:&#39;mobile&#39;&quot; //验证手机号</code></p></blockquote><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">$.extend($.fn.validatebox.defaults.rules, &#123;</span><br><span class="line">    //最大长度</span><br><span class="line">    maxLength: &#123;</span><br><span class="line">        validator: function(value, param)&#123;</span><br><span class="line">            <span class="keyword">return</span> value.length &lt;= param[<span class="number">0</span>];</span><br><span class="line">        &#125;,</span><br><span class="line">        message: '您输入的文字太多了! '</span><br><span class="line">    &#125;,</span><br><span class="line">    //最小长度</span><br><span class="line">    minLength: &#123;</span><br><span class="line">        validator: function(value, param)&#123;</span><br><span class="line">            <span class="keyword">return</span> value.length &gt;= param[<span class="number">0</span>];</span><br><span class="line">        &#125;,</span><br><span class="line">        message: '您输入的文字太少了! '</span><br><span class="line">    &#125;,</span><br><span class="line">    mobile: &#123;</span><br><span class="line">    validator: function(value)&#123;</span><br><span class="line">            <span class="keyword">return</span> /^(<span class="number">13</span>|<span class="type">14</span>|<span class="type">15</span>|<span class="type">17</span>|<span class="type">18</span>|<span class="type">19</span>)\d&#123;<span class="number">9</span>&#125;$/i.test(value);</span><br><span class="line">        &#125;,</span><br><span class="line">        message: '手机号码格式不正确! '</span><br><span class="line">    &#125;,</span><br><span class="line">    domainSeo: &#123;</span><br><span class="line">        validator: function(value)&#123;</span><br><span class="line">            <span class="keyword">return</span> /^[\w]+\.([\w]+\.)*((me)|<span class="type">(co</span>)|<span class="type">(am</span>)|<span class="type">(ca</span>)|<span class="type">(com</span>)|<span class="type">(net</span>)|<span class="type">(org</span>)|<span class="type">(gov</span>\.cn)|<span class="type">(info</span>)|<span class="type">(cc</span>)|<span class="type">(com</span>\.cn)|<span class="type">(net</span>\.cn)|<span class="type">(org</span>\.cn)|<span class="type">(name</span>)|<span class="type">(biz</span>)|<span class="type">(tv</span>)|<span class="type">(cn</span>)|<span class="type">(mobi</span>)|<span class="type">(name</span>)|<span class="type">(sh</span>)|<span class="type">(ac</span>)|<span class="type">(io</span>)|<span class="type">(tw</span>)|<span class="type">(com</span>\.tw)|<span class="type">(hk</span>)|<span class="type">(com</span>\.hk)|<span class="type">(ws</span>)|<span class="type">(travel</span>)|<span class="type">(us</span>)|<span class="type">(tm</span>)|<span class="type">(la</span>)|<span class="type">(me</span>\.uk)|<span class="type">(org</span>\.uk)|<span class="type">(ltd</span>\.uk)|<span class="type">(plc</span>\.uk)|<span class="type">(in</span>)|<span class="type">(eu</span>)|<span class="type">(it</span>)|<span class="type">(jp</span>))$/.test(value);</span><br><span class="line">        &#125;,</span><br><span class="line">        message: '请输入正确的域名! '</span><br><span class="line">    &#125;,</span><br><span class="line">    equals: &#123;</span><br><span class="line">        validator: function(value,param)&#123;</span><br><span class="line">            <span class="keyword">return</span> value == $(param[<span class="number">0</span>]).val();</span><br><span class="line">        &#125;,</span><br><span class="line">        message: '两次输入的内容不匹配.'</span><br><span class="line">    &#125;,</span><br><span class="line">    xFloat: &#123;</span><br><span class="line">        validator: function(value,param)&#123;</span><br><span class="line">            <span class="keyword">return</span> /^[<span class="number">0</span><span class="number">-99</span>]+(.[<span class="number">0</span><span class="number">-99</span>]&#123;<span class="number">1</span>&#125;)?$/.test(value) &amp;&amp; value&lt;=<span class="number">100</span>;</span><br><span class="line">        &#125;,</span><br><span class="line">        message: '请输入=&gt;<span class="number">0</span>且&lt;=<span class="number">100</span>的整数或一位小数'</span><br><span class="line">    &#125;,</span><br><span class="line">    xInt: &#123;</span><br><span class="line">        validator: function(value,param)&#123;</span><br><span class="line">            <span class="keyword">return</span> /^[<span class="number">0</span><span class="number">-9</span>]\d*$/.test(value);</span><br><span class="line">        &#125;,</span><br><span class="line">        message: '请输入=&gt;<span class="number">0</span>的整数'</span><br><span class="line">    &#125;,</span><br><span class="line">    xBank: &#123;</span><br><span class="line">        validator: function(value,param)&#123;</span><br><span class="line">            <span class="keyword">return</span> /^(\d&#123;<span class="number">16</span>&#125;|<span class="type">\d</span>&#123;<span class="number">19</span>&#125;)$/.test(value);</span><br><span class="line">        &#125;,</span><br><span class="line">        message: '银行卡格式错误'</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="2-扩展datagrid方法"><a href="#2-扩展datagrid方法" class="headerlink" title="2.扩展datagrid方法"></a>2.扩展datagrid方法</h4><blockquote><p>使用:<code>$(&#39;#id&#39;).datagrid(&#39;getEditingRowIndexs&#39;); //获取当前datagrid中在编辑状态的行编号列表</code></p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">$.extend($.fn.datagrid.methods, &#123;</span><br><span class="line">    <span class="comment">//datagrid反选</span></span><br><span class="line">    reverseSelect: <span class="function"><span class="keyword">function</span>(<span class="params">jq</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jq.each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> select_rows = $(<span class="keyword">this</span>).datagrid(<span class="string">'getSelections'</span>);</span><br><span class="line">            <span class="keyword">var</span> select_index;</span><br><span class="line">            <span class="keyword">var</span> now_index;</span><br><span class="line">            <span class="keyword">var</span> select_index_arr = [];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> X <span class="keyword">in</span> select_rows)&#123;</span><br><span class="line">                select_index = $(<span class="keyword">this</span>).datagrid(<span class="string">'getRowIndex'</span>, select_rows[X]);</span><br><span class="line">                select_index_arr.push(select_index);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> all_rows = $(<span class="keyword">this</span>).datagrid(<span class="string">'getRows'</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> X <span class="keyword">in</span> all_rows)&#123;</span><br><span class="line">                now_index = $(<span class="keyword">this</span>).datagrid(<span class="string">'getRowIndex'</span>, all_rows[X]);</span><br><span class="line">                <span class="keyword">if</span> ($.inArray(now_index, select_index_arr) == <span class="number">-1</span>)&#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).datagrid(<span class="string">'selectRow'</span>, now_index);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $(<span class="keyword">this</span>).datagrid(<span class="string">'unselectRow'</span>, now_index);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;,</span><br><span class="line">    <span class="comment">//保持当前的选择状态</span></span><br><span class="line">    keepSelect: <span class="function"><span class="keyword">function</span>(<span class="params">jq</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jq.each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> self = $(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">var</span> select_rows = self.datagrid(<span class="string">'getSelections'</span>);</span><br><span class="line">            <span class="keyword">var</span> select_index;</span><br><span class="line">            <span class="keyword">var</span> now_index;</span><br><span class="line">            <span class="keyword">var</span> select_index_arr = [];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> X <span class="keyword">in</span> select_rows)&#123;</span><br><span class="line">                select_index = self.datagrid(<span class="string">'getRowIndex'</span>, select_rows[X]);</span><br><span class="line">                select_index_arr.push(select_index);</span><br><span class="line">            &#125;</span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                self.datagrid(<span class="string">'unselectAll'</span>);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> Y <span class="keyword">in</span> select_index_arr)&#123;</span><br><span class="line">                    self.datagrid(<span class="string">'selectRow'</span>, select_index_arr[Y]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;, <span class="number">100</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">&#125;,</span><br><span class="line">    <span class="comment">//增加编辑器</span></span><br><span class="line">    addEditor : <span class="function"><span class="keyword">function</span>(<span class="params">jq, param</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (param <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">            $.each(param, <span class="function"><span class="keyword">function</span>(<span class="params">index, item</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> e = $(jq).datagrid(<span class="string">'getColumnOption'</span>, item.field);</span><br><span class="line">                e.editor = item.editor;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> e = $(jq).datagrid(<span class="string">'getColumnOption'</span>, param.field);</span><br><span class="line">            e.editor = param.editor;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//移除编辑器</span></span><br><span class="line">    removeEditor : <span class="function"><span class="keyword">function</span>(<span class="params">jq, param</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (param == <span class="literal">null</span>)&#123;</span><br><span class="line">param = $(jq).datagrid(<span class="string">'getColumnFields'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">if</span> (param <span class="keyword">instanceof</span> <span class="built_in">Array</span>) &#123;</span><br><span class="line">            $.each(param, <span class="function"><span class="keyword">function</span>(<span class="params">index, item</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> e = $(jq).datagrid(<span class="string">'getColumnOption'</span>, item);</span><br><span class="line">                e.editor = &#123;&#125;;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> e = $(jq).datagrid(<span class="string">'getColumnOption'</span>, param);</span><br><span class="line">            e.editor = &#123;&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//获取编辑状态的行</span></span><br><span class="line">    getEditingRowIndexs: <span class="function"><span class="keyword">function</span>(<span class="params">jq</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> rows = $.data(jq[<span class="number">0</span>], <span class="string">"datagrid"</span>).panel.find(<span class="string">'.datagrid-row-editing'</span>);</span><br><span class="line">        <span class="keyword">var</span> indexs = [];</span><br><span class="line">        rows.each(<span class="function"><span class="keyword">function</span>(<span class="params">i, row</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> index = row.sectionRowIndex;</span><br><span class="line">            <span class="keyword">if</span> (indexs.indexOf(index) == <span class="number">-1</span>) &#123;</span><br><span class="line">                indexs.push(index);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> indexs;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="3-扩展datagrid-editors行内编辑工具类"><a href="#3-扩展datagrid-editors行内编辑工具类" class="headerlink" title="3.扩展datagrid-editors行内编辑工具类"></a>3.扩展datagrid-editors行内编辑工具类</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line">$.extend($.fn.datagrid.defaults.editors, &#123;</span><br><span class="line">    timespinner: &#123;</span><br><span class="line">        init: <span class="function"><span class="keyword">function</span>(<span class="params">container, options</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> input = $(<span class="string">'&lt;input class="easyui-timespinner"&gt;'</span>).appendTo(container);</span><br><span class="line">            options.formatter = <span class="function"><span class="keyword">function</span>(<span class="params">time</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>(time).format(<span class="string">"hh:mm"</span>);</span><br><span class="line">            &#125;;</span><br><span class="line">            <span class="keyword">return</span> input.timespinner(options);</span><br><span class="line">        &#125;,</span><br><span class="line">        getValue: <span class="function"><span class="keyword">function</span>(<span class="params">target</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> $(target).timespinner(<span class="string">'getValue'</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">        setValue: <span class="function"><span class="keyword">function</span>(<span class="params">target, value</span>)</span>&#123;</span><br><span class="line">            $(target).timespinner(<span class="string">'setValue'</span>, value);</span><br><span class="line">        &#125;,</span><br><span class="line">        resize: <span class="function"><span class="keyword">function</span>(<span class="params">target, width</span>)</span>&#123;</span><br><span class="line">        $(target).timespinner(<span class="string">'resize'</span>, width);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    combotree: &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params">container, options</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> input = $(<span class="string">'&lt;input class="easyui-combotree"&gt;'</span>).appendTo(container);</span><br><span class="line">            <span class="keyword">return</span> input.combotree(options);</span><br><span class="line">        &#125;,</span><br><span class="line">        getValue: <span class="function"><span class="keyword">function</span>(<span class="params">target</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> values = $(target).combotree(<span class="string">'getValues'</span>);</span><br><span class="line">        <span class="keyword">var</span> real_values = [];     </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> x = <span class="number">0</span>,len = values.length;x &lt; len;x ++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (values[x] &amp;&amp; values[x] != <span class="string">''</span>)&#123;</span><br><span class="line">        real_values.push(values[x]);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">            <span class="keyword">return</span> real_values.join(<span class="string">','</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">        setValue: <span class="function"><span class="keyword">function</span>(<span class="params">target, value</span>)</span>&#123;  </span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> values = value.split(<span class="string">','</span>);</span><br><span class="line">            $(target).combotree(<span class="string">'setValues'</span>, values);</span><br><span class="line">            <span class="keyword">var</span> tree = $(target).combotree(<span class="string">'tree'</span>);</span><br><span class="line">            <span class="keyword">var</span> nodes = tree.tree(<span class="string">'getChecked'</span>);</span><br><span class="line">            <span class="keyword">var</span> parent;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">var</span> x = <span class="number">0</span>,len = nodes.length;x &lt; len;x ++)&#123;</span><br><span class="line">            parent = tree.tree(<span class="string">'getParent'</span>, nodes[x][<span class="string">'target'</span>]);</span><br><span class="line">            <span class="keyword">while</span>(parent != <span class="literal">null</span>)&#123;</span><br><span class="line">            tree.tree(<span class="string">'expand'</span>, parent.target);</span><br><span class="line">            parent = tree.tree(<span class="string">'getParent'</span>, parent[<span class="string">'target'</span>]);</span><br><span class="line">            &#125;      </span><br><span class="line">            &#125;</span><br><span class="line">            &#125;, <span class="number">100</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        resize: <span class="function"><span class="keyword">function</span>(<span class="params">target, width</span>)</span>&#123;</span><br><span class="line">        $(target).combotree(<span class="string">'resize'</span>, width);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    combobox: &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params">container, options</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> input = $(<span class="string">'&lt;input class="easyui-combobox"&gt;'</span>).appendTo(container);</span><br><span class="line">            <span class="keyword">return</span> input.combobox(options);</span><br><span class="line">        &#125;,</span><br><span class="line">    getValue : <span class="function"><span class="keyword">function</span>(<span class="params">jq</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> opts = $(jq).combobox(<span class="string">'options'</span>);</span><br><span class="line">        <span class="keyword">if</span>(opts.multiple)&#123;</span><br><span class="line">            <span class="keyword">var</span> values = $(jq).combobox(<span class="string">'getValues'</span>);</span><br><span class="line">            <span class="keyword">if</span>(values.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(values[<span class="number">0</span>]==<span class="string">''</span>||values[<span class="number">0</span>]==<span class="string">' '</span>)&#123;</span><br><span class="line">                    <span class="keyword">return</span> values.join(<span class="string">','</span>).substring(<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> values.join(<span class="string">','</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> $(jq).combobox(<span class="string">"getValue"</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    setValue : <span class="function"><span class="keyword">function</span>(<span class="params">jq, value</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> opts = $(jq).combobox(<span class="string">'options'</span>);</span><br><span class="line">        <span class="keyword">if</span>(opts.multiple&amp;&amp;value.indexOf(opts.separator)!=<span class="number">-1</span>)&#123;<span class="comment">//多选且不只一个值</span></span><br><span class="line">            <span class="keyword">var</span> values = value.split(opts.separator);</span><br><span class="line">            $(jq).combobox(<span class="string">"setValues"</span>, values);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            $(jq).combobox(<span class="string">"setValue"</span>, value);</span><br><span class="line">    &#125;,</span><br><span class="line">        resize: <span class="function"><span class="keyword">function</span>(<span class="params">target, width</span>)</span>&#123;</span><br><span class="line">        $(target).combobox(<span class="string">'resize'</span>, width);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    datetimebox: &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params">container, options</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> input = $(<span class="string">'&lt;input class="easyui-datetimebox"&gt;'</span>).appendTo(container);</span><br><span class="line">            <span class="keyword">return</span> input.datetimebox(options);</span><br><span class="line">        &#125;,</span><br><span class="line">    getValue : <span class="function"><span class="keyword">function</span>(<span class="params">jq</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $(jq).datetimebox(<span class="string">"getValue"</span>);            </span><br><span class="line">    &#125;,</span><br><span class="line">    setValue : <span class="function"><span class="keyword">function</span>(<span class="params">jq, value</span>) </span>&#123;</span><br><span class="line">    $(jq).datetimebox(<span class="string">"setValue"</span>, value);</span><br><span class="line">    &#125;,</span><br><span class="line">        resize: <span class="function"><span class="keyword">function</span>(<span class="params">target, width</span>)</span>&#123;</span><br><span class="line">        $(target).datetimebox(<span class="string">'resize'</span>, width);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    uploadbox: &#123;</span><br><span class="line">    init: <span class="function"><span class="keyword">function</span>(<span class="params">container, options</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> input = $(<span class="string">'&lt;input class="easyui-validatebox" readonly=true&gt;'</span>).appendTo(container);</span><br><span class="line">            <span class="keyword">return</span> input.validatebox(options);</span><br><span class="line">        &#125;,</span><br><span class="line">        destroy: <span class="function"><span class="keyword">function</span>(<span class="params">target</span>)</span>&#123;</span><br><span class="line">            $(target).remove();</span><br><span class="line">        &#125;,</span><br><span class="line">    getValue : <span class="function"><span class="keyword">function</span>(<span class="params">target</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $(target).val();            </span><br><span class="line">    &#125;,</span><br><span class="line">    setValue : <span class="function"><span class="keyword">function</span>(<span class="params">target, value</span>) </span>&#123;</span><br><span class="line">    $(target).val(value);</span><br><span class="line">    &#125;,</span><br><span class="line">        resize: <span class="function"><span class="keyword">function</span>(<span class="params">target, width</span>)</span>&#123;</span><br><span class="line">        $(target)._outerWidth(width);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>这里只是easyui部分扩展组件,想了解更多js扩展请穿越-&gt;<a href="/2017/02/20/js-util/">js-util</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> EasyUI </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>javascript面向对象开发【待续】</title>
      <link href="/js-object/"/>
      <url>/js-object/</url>
      
        <content type="html"><![CDATA[<h3 id="【对象-amp-实例】"><a href="#【对象-amp-实例】" class="headerlink" title="【对象&amp;实例】"></a>【对象&amp;实例】</h3><h4 id="封装数据-方法"><a href="#封装数据-方法" class="headerlink" title="封装数据/方法"></a>封装数据/方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Me</span> (<span class="params">name, age</span>) </span>&#123;</span><br><span class="line"><span class="comment">//本地属性</span></span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line"><span class="keyword">this</span>.age = age;</span><br><span class="line"><span class="comment">// this.height = 173;</span></span><br><span class="line"><span class="comment">// this.hobby = function()&#123;</span></span><br><span class="line"><span class="comment">// console.log('hobby')</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//继承自prototype的属性</span></span><br><span class="line">Me.prototype.height = <span class="number">173</span></span><br><span class="line">Me.prototype.hobby = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'hobby'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建实例"><a href="#创建实例" class="headerlink" title="创建实例"></a>创建实例</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实例化两个对象</span></span><br><span class="line"><span class="keyword">var</span> m1 = <span class="keyword">new</span> Me(<span class="string">'xkh'</span>,<span class="string">'26'</span>)</span><br><span class="line"><span class="keyword">var</span> m2 = <span class="keyword">new</span> Me(<span class="string">'xking'</span>,<span class="string">'25'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历某个对象的属性</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> prop <span class="keyword">in</span> m1) &#123; <span class="built_in">console</span>.log(<span class="string">"m1["</span>+prop+<span class="string">"]="</span>+m1[prop]); &#125;</span><br><span class="line"></span><br><span class="line">m1.hobby()</span><br><span class="line">m2.hobby()</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(m1,m2)</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'两个是不是在一个储存:'</span>,m1.hobby == m2.hobby)    <span class="comment">//true 如果hobby是本地属性这里就是false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'对象和实例之间的关系:'</span>,Me.prototype.isPrototypeOf(m1))   <span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'是本地属性还是继承自prototype的属性:'</span>,m1.hasOwnProperty(name))  <span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'in运算符判断实例中是否含有某属性:'</span>,(<span class="string">'name'</span> <span class="keyword">in</span> m1))    <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h3 id="【构造函数的继承】"><a href="#【构造函数的继承】" class="headerlink" title="【构造函数的继承】"></a>【构造函数的继承】</h3><p>现在有两个构造函数<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Me1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = <span class="string">'xkh'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Me2</span>(<span class="params">age, height</span>)</span>&#123;</span><br><span class="line">    Me1.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">    <span class="keyword">this</span>.age = age,</span><br><span class="line">    <span class="keyword">this</span>.height = height</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> m3 = <span class="keyword">new</span> Me2();</span><br><span class="line"><span class="built_in">console</span>.log(m3.name)</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>react下拉加载(移动端)</title>
      <link href="/react-push-load/"/>
      <url>/react-push-load/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>其实这里主要原理是:js对可视高度获取的应用及什么方法触发。</p></blockquote><h3 id="【react下拉加载】"><a href="#【react下拉加载】" class="headerlink" title="【react下拉加载】"></a>【react下拉加载】</h3><h4 id="移动端touchEnd"><a href="#移动端touchEnd" class="headerlink" title="移动端touchEnd"></a>移动端touchEnd</h4><blockquote><p>这里用的react的onTouchEnd()方法，只适用于移动端，至于为什么不选scroll()，touchEnd是在触摸结束执行，比scroll在移动端更适合，能解决很多不必要的麻烦，当然调试时可先用scroll方法代替。</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props, <span class="string">"xxx"</span>);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123;</span><br><span class="line">        allFoods: [],</span><br><span class="line">        pageNumber: <span class="number">1</span>,</span><br><span class="line">        pageTotal: <span class="string">''</span>,</span><br><span class="line">        loadStatus: <span class="literal">false</span>,</span><br><span class="line">        pageStatus: <span class="literal">true</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">this</span>.pending = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.pageLoading = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">handleTouchEnd()&#123;</span><br><span class="line">    <span class="keyword">const</span> scrollTop =  document.body.scrollTop;</span><br><span class="line">    <span class="keyword">const</span> clientHeight = document.body.clientHeight;</span><br><span class="line">    <span class="keyword">const</span> windowHeight = window.screen.height;</span><br><span class="line">    <span class="keyword">const</span> offsetBottom = clientHeight - scrollTop - windowHeight +<span class="number">64</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">this</span>.pageLoading) &#123;</span><br><span class="line">        <span class="keyword">this</span>.pageLoading = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(offsetBottom &lt;= -<span class="number">64</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.state.pageNumber &lt; <span class="keyword">this</span>.state.pageTotal/<span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">this</span>.pageLoading) <span class="keyword">return</span>;</span><br><span class="line">            <span class="keyword">this</span>.pageLoading = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//加载中状态</span></span><br><span class="line">            <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                loadStatus: <span class="literal">true</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">this</span>.state.pageNumber ++;</span><br><span class="line">            <span class="keyword">this</span>.categorySearch();</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//是否有分页</span></span><br><span class="line">            <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                pageStatus: <span class="literal">false</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">categorySearch() &#123;</span><br><span class="line">    <span class="keyword">this</span>.pending = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.pending) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">this</span>.pending = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">this</span>.ajax(&#123;</span><br><span class="line">        url: API.GET_CATEGORY,</span><br><span class="line">        <span class="keyword">data</span>: &#123;</span><br><span class="line">            page: <span class="keyword">this</span>.state.pageNumber</span><br><span class="line">        &#125;,</span><br><span class="line">        success: (res) =&gt; &#123;</span><br><span class="line">            <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">                allFoods: <span class="keyword">this</span>.state.allFoods.concat(res),</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;,</span><br><span class="line">        error: (res) =&gt; &#123;</span><br><span class="line">            <span class="keyword">this</span>.pending = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PC端scroll"><a href="#PC端scroll" class="headerlink" title="PC端scroll"></a>PC端scroll</h4><blockquote><p>pc端如果用scroll滚动事件，或者移动端调试时，可以这样</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">componentWillUnmount() &#123;</span><br><span class="line">    <span class="comment">//生命周期结束时销毁事件</span></span><br><span class="line">    window.removeEventListener(<span class="string">'scroll'</span>, <span class="keyword">this</span>.handleScroll.bind(<span class="keyword">this</span>));</span><br><span class="line">&#125;</span><br><span class="line">componentDidMount() &#123;</span><br><span class="line">    <span class="comment">//组件渲染完成注册事件</span></span><br><span class="line">    window.addEventListener(<span class="string">'scroll'</span>, <span class="keyword">this</span>.handleScroll.bind(<span class="keyword">this</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">handleScroll() &#123;</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>html/javascript转译字符串</title>
      <link href="/html-escape/"/>
      <url>/html-escape/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>转义字符（Escape Sequence）也称字符实体(Character Entity)。在HTML中，定义转义字符串的原因有两个：第一个原因是像“&lt;”和“&gt;”这类符号已经用来表示HTML标签，因此就不能直接当作文本中的符号来使用。为了在HTML文档中使用这些符号，就需要定义它的转义字符串。当解释程序遇到这类字符串时就把它解释为真实的字符。在输入转义字符串时，要严格遵守字母大小写的规则。第二个原因是，有些字符在ASCII字符集中没有定义，因此需要使用转义字符串来表示。</p></blockquote><h3 id="【转义字符串的组成】"><a href="#【转义字符串的组成】" class="headerlink" title="【转义字符串的组成】"></a>【转义字符串的组成】</h3><p>转义字符串（Escape Sequence），即字符实体（Character Entity）分成三部分：第一部分是一个&amp;符号，英文叫ampersand；第二部分是实体（Entity）名字或者是#加上实体（Entity）编号；第三部分是一个分号。</p><p>比如，要显示小于号（&lt;），就可以写 &lt; 或者 &#60; 。</p><p>用实体（Entity）名字的好处是比较好理解，一看lt，大概就猜出是less than的意思，但是其劣势在于并不是所有的浏览器都支持最新的Entity名字。而实体(Entity)编号，各种浏览器都能处理。</p><blockquote><p>提示：实体名称（Entity）是区分大小写的。<br>备注：同一个符号，可以用“实体名称”和“实体编号”两种方式引用，“实体名称”的优势在于便于记忆，但不能保证所有的浏览器都能顺利识别它，而“实体编号”则没有这种担忧，但它实在不方便记忆。</p></blockquote><h3 id="【转译符】"><a href="#【转译符】" class="headerlink" title="【转译符】"></a>【转译符】</h3><h4 id="HTML常用转义字符列表"><a href="#HTML常用转义字符列表" class="headerlink" title="HTML常用转义字符列表"></a>HTML常用转义字符列表</h4><table><thead><tr><th style="text-align:center">显示</th><th style="text-align:center">说明</th><th style="text-align:center">实体名称</th><th style="text-align:center">实体编号</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center">半方大的空白</td><td style="text-align:center"><code>&amp;ensp;</code></td><td style="text-align:center"><code>&amp;#8194;</code></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">全方大的空白</td><td style="text-align:center"><code>&amp;emsp;</code></td><td style="text-align:center"><code>&amp;#8195;</code></td></tr><tr><td style="text-align:center"></td><td style="text-align:center">不断行的空白格</td><td style="text-align:center"><code>&amp;nbsp;</code></td><td style="text-align:center"><code>&amp;#160;</code></td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td><td style="text-align:center"><code>&amp;lt;</code></td><td style="text-align:center"><code>&amp;#60;</code></td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">大于</td><td style="text-align:center"><code>&amp;gt;</code></td><td style="text-align:center"><code>&amp;#62;</code></td></tr><tr><td style="text-align:center">&amp;</td><td style="text-align:center">&amp;符号</td><td style="text-align:center"><code>&amp;amp;</code></td><td style="text-align:center"><code>&amp;#38;</code></td></tr><tr><td style="text-align:center">“</td><td style="text-align:center">双引号</td><td style="text-align:center"><code>&amp;quot;</code></td><td style="text-align:center"><code>&amp;#34;</code></td></tr><tr><td style="text-align:center">©</td><td style="text-align:center">版权</td><td style="text-align:center"><code>&amp;copy;</code></td><td style="text-align:center"><code>&amp;#169;</code></td></tr><tr><td style="text-align:center">®</td><td style="text-align:center">已注册商标</td><td style="text-align:center"><code>&amp;reg;</code></td><td style="text-align:center"><code>&amp;#174;</code></td></tr><tr><td style="text-align:center">?</td><td style="text-align:center">商标（美国）</td><td style="text-align:center"><code>?</code></td><td style="text-align:center"><code>&amp;#8482;</code></td></tr><tr><td style="text-align:center">×</td><td style="text-align:center">乘号</td><td style="text-align:center"><code>&amp;times;</code></td><td style="text-align:center"><code>&amp;#215;</code></td></tr><tr><td style="text-align:center">÷</td><td style="text-align:center">除号</td><td style="text-align:center"><code>&amp;divide;</code></td><td style="text-align:center"><code>&amp;#247;</code></td></tr></tbody></table><h4 id="ISO-8859-1-Latin-1-字符集"><a href="#ISO-8859-1-Latin-1-字符集" class="headerlink" title="ISO 8859-1 (Latin-1)字符集"></a>ISO 8859-1 (Latin-1)字符集</h4><p>HTML 4.01 支持 ISO 8859-1 (Latin-1) 字符集。</p><table><thead><tr><th style="text-align:center">显示</th><th style="text-align:center">名称</th><th style="text-align:center">编号</th><th style="text-align:center">显示</th><th style="text-align:center">名称</th><th style="text-align:center">编号</th></tr></thead><tbody><tr><td style="text-align:center"></td><td style="text-align:center"><code>&amp;nbsp;</code></td><td style="text-align:center"><code>&amp;#160;</code></td><td style="text-align:center">¡</td><td style="text-align:center"><code>&amp;iexcl;</code></td><td style="text-align:center"><code>&amp;#161;</code></td></tr><tr><td style="text-align:center">¥</td><td style="text-align:center"><code>&amp;yen;</code></td><td style="text-align:center"><code>&amp;#165;</code></td><td style="text-align:center">¦</td><td style="text-align:center"><code>&amp;brvbar;</code></td><td style="text-align:center"><code>&amp;#166;</code></td></tr><tr><td style="text-align:center">ª</td><td style="text-align:center"><code>&amp;ordf;</code></td><td style="text-align:center"><code>&amp;#170;</code></td><td style="text-align:center">«</td><td style="text-align:center"><code>&amp;laquo;</code></td><td style="text-align:center"><code>&amp;#171;</code></td></tr><tr><td style="text-align:center">¯</td><td style="text-align:center"><code>&amp;macr;</code></td><td style="text-align:center"><code>&amp;#175;</code></td><td style="text-align:center">°</td><td style="text-align:center"><code>&amp;deg;</code></td><td style="text-align:center"><code>&amp;#176;</code></td></tr><tr><td style="text-align:center">´</td><td style="text-align:center"><code>&amp;acute;</code></td><td style="text-align:center"><code>&amp;#180;</code></td><td style="text-align:center">µ</td><td style="text-align:center"><code>&amp;micro;</code></td><td style="text-align:center"><code>&amp;#181;</code></td></tr><tr><td style="text-align:center">¹</td><td style="text-align:center"><code>&amp;sup1;</code></td><td style="text-align:center"><code>&amp;#185;</code></td><td style="text-align:center">º</td><td style="text-align:center"><code>&amp;ordm;</code></td><td style="text-align:center"><code>&amp;#186;</code></td></tr><tr><td style="text-align:center">¾</td><td style="text-align:center"><code>&amp;frac34;</code></td><td style="text-align:center"><code>&amp;#190;</code></td><td style="text-align:center">¿</td><td style="text-align:center"><code>&amp;iquest;</code></td><td style="text-align:center"><code>&amp;#191;</code></td></tr><tr><td style="text-align:center">Ã</td><td style="text-align:center"><code>&amp;Atilde;</code></td><td style="text-align:center"><code>&amp;#195;</code></td><td style="text-align:center">Ä</td><td style="text-align:center"><code>&amp;Auml;</code></td><td style="text-align:center"><code>&amp;#196;</code></td></tr><tr><td style="text-align:center">È</td><td style="text-align:center"><code>&amp;Egrave;</code></td><td style="text-align:center"><code>&amp;#200;</code></td><td style="text-align:center">?</td><td style="text-align:center"><code>&amp;Eacute;</code></td><td style="text-align:center"><code>&amp;#201;</code></td></tr><tr><td style="text-align:center">?</td><td style="text-align:center"><code>&amp;Iacute;</code></td><td style="text-align:center"><code>&amp;#205;</code></td><td style="text-align:center">Î</td><td style="text-align:center"><code>&amp;Icirc;</code></td><td style="text-align:center"><code>&amp;#206;</code></td></tr><tr><td style="text-align:center">Ò</td><td style="text-align:center"><code>&amp;Ograve;</code></td><td style="text-align:center"><code>&amp;#210;</code></td><td style="text-align:center">?</td><td style="text-align:center"><code>&amp;Oacute;</code></td><td style="text-align:center"><code>&amp;#211;</code></td></tr><tr><td style="text-align:center">×</td><td style="text-align:center"><code>&amp;times;</code></td><td style="text-align:center"><code>&amp;#215;</code></td><td style="text-align:center">Ø</td><td style="text-align:center"><code>&amp;Oslash;</code></td><td style="text-align:center"><code>&amp;#216;</code></td></tr><tr><td style="text-align:center">Ü</td><td style="text-align:center"><code>&amp;Uuml;</code></td><td style="text-align:center"><code>&amp;#220;</code></td><td style="text-align:center">?</td><td style="text-align:center"><code>&amp;Yacute;</code></td><td style="text-align:center"><code>&amp;#221;</code></td></tr><tr><td style="text-align:center">á</td><td style="text-align:center"><code>&amp;aacute;</code></td><td style="text-align:center"><code>&amp;#225;</code></td><td style="text-align:center">â</td><td style="text-align:center"><code>&amp;acirc;</code></td><td style="text-align:center"><code>&amp;#226;</code></td></tr><tr><td style="text-align:center">æ</td><td style="text-align:center"><code>&amp;aelig;</code></td><td style="text-align:center"><code>&amp;#230;</code></td><td style="text-align:center">ç</td><td style="text-align:center"><code>&amp;ccedil;</code></td><td style="text-align:center"><code>&amp;#231;</code></td></tr><tr><td style="text-align:center">ë</td><td style="text-align:center"><code>&amp;euml;</code></td><td style="text-align:center"><code>&amp;#235;</code></td><td style="text-align:center">ì</td><td style="text-align:center"><code>&amp;igrave;</code></td><td style="text-align:center"><code>&amp;#236;</code></td></tr><tr><td style="text-align:center">ð</td><td style="text-align:center"><code>&amp;eth;</code></td><td style="text-align:center"><code>&amp;#240;</code></td><td style="text-align:center">ñ</td><td style="text-align:center"><code>&amp;ntilde;</code></td><td style="text-align:center"><code>&amp;#241;</code></td></tr><tr><td style="text-align:center">õ</td><td style="text-align:center"><code>&amp;otilde;</code></td><td style="text-align:center"><code>&amp;#245;</code></td><td style="text-align:center">ö</td><td style="text-align:center"><code>&amp;ouml;</code></td><td style="text-align:center"><code>&amp;#246;</code></td></tr><tr><td style="text-align:center">ú</td><td style="text-align:center"><code>&amp;uacute;</code></td><td style="text-align:center"><code>&amp;#250;</code></td><td style="text-align:center">û</td><td style="text-align:center"><code>&amp;ucirc;</code></td><td style="text-align:center"><code>&amp;#251;</code></td></tr><tr><td style="text-align:center">¢</td><td style="text-align:center"><code>&amp;cent;</code></td><td style="text-align:center"><code>&amp;#162;</code></td><td style="text-align:center">£</td><td style="text-align:center"><code>&amp;pound;</code></td><td style="text-align:center"><code>&amp;#163;</code></td></tr><tr><td style="text-align:center">§</td><td style="text-align:center"><code>&amp;sect;</code></td><td style="text-align:center"><code>&amp;#167;</code></td><td style="text-align:center">¨</td><td style="text-align:center"><code>&amp;uml;</code></td><td style="text-align:center"><code>&amp;#168;</code></td></tr><tr><td style="text-align:center"></td><td style="text-align:center"><code>&amp;shy;</code></td><td style="text-align:center"><code>&amp;#173;</code></td><td style="text-align:center">®</td><td style="text-align:center"><code>&amp;reg;</code></td><td style="text-align:center"><code>&amp;#174;</code></td></tr><tr><td style="text-align:center">ÿ</td><td style="text-align:center"><code>&amp;yuml;</code></td><td style="text-align:center"><code>&amp;#255;</code></td><td style="text-align:center">¬</td><td style="text-align:center"><code>&amp;not;</code></td><td style="text-align:center"><code>&amp;#172;</code></td></tr><tr><td style="text-align:center">²</td><td style="text-align:center"><code>&amp;sup2;</code></td><td style="text-align:center"><code>&amp;#178;</code></td><td style="text-align:center">³</td><td style="text-align:center"><code>&amp;sup3;</code></td><td style="text-align:center"><code>&amp;#179;</code></td></tr><tr><td style="text-align:center">·</td><td style="text-align:center"><code>&amp;middot;</code></td><td style="text-align:center"><code>&amp;#183;</code></td><td style="text-align:center">¸</td><td style="text-align:center"><code>&amp;cedil;</code></td><td style="text-align:center"><code>&amp;#184;</code></td></tr><tr><td style="text-align:center">¼</td><td style="text-align:center"><code>&amp;frac14;</code></td><td style="text-align:center"><code>&amp;#188;</code></td><td style="text-align:center">½</td><td style="text-align:center"><code>&amp;frac12;</code></td><td style="text-align:center"><code>&amp;#189;</code></td></tr><tr><td style="text-align:center">?</td><td style="text-align:center"><code>&amp;Aacute;</code></td><td style="text-align:center"><code>&amp;#193;</code></td><td style="text-align:center">Â</td><td style="text-align:center"><code>&amp;Acirc;</code></td><td style="text-align:center"><code>&amp;#194;</code></td></tr><tr><td style="text-align:center">Æ</td><td style="text-align:center"><code>&amp;AElig;</code></td><td style="text-align:center"><code>&amp;#198;</code></td><td style="text-align:center">Ç</td><td style="text-align:center"><code>&amp;Ccedil;</code></td><td style="text-align:center"><code>&amp;#199;</code></td></tr><tr><td style="text-align:center">Ë</td><td style="text-align:center"><code>&amp;Euml;</code></td><td style="text-align:center"><code>&amp;#203;</code></td><td style="text-align:center">Ì</td><td style="text-align:center"><code>&amp;Igrave;</code></td><td style="text-align:center"><code>&amp;#204;</code></td></tr><tr><td style="text-align:center">Ð</td><td style="text-align:center"><code>&amp;ETH;</code></td><td style="text-align:center"><code>&amp;#208;</code></td><td style="text-align:center">Ñ</td><td style="text-align:center"><code>&amp;Ntilde;</code></td><td style="text-align:center"><code>&amp;#209;</code></td></tr><tr><td style="text-align:center">Õ</td><td style="text-align:center"><code>&amp;Otilde;</code></td><td style="text-align:center"><code>&amp;#213;</code></td><td style="text-align:center">Ö</td><td style="text-align:center"><code>&amp;Ouml;</code></td><td style="text-align:center"><code>&amp;#214;</code></td></tr><tr><td style="text-align:center">?</td><td style="text-align:center"><code>&amp;Uacute;</code></td><td style="text-align:center"><code>&amp;#218;</code></td><td style="text-align:center">Û</td><td style="text-align:center"><code>&amp;Ucirc;</code></td><td style="text-align:center"><code>&amp;#219;</code></td></tr><tr><td style="text-align:center">ß</td><td style="text-align:center"><code>&amp;szlig;</code></td><td style="text-align:center"><code>&amp;#223;</code></td><td style="text-align:center">à</td><td style="text-align:center"><code>&amp;agrave;</code></td><td style="text-align:center"><code>&amp;#224;</code></td></tr><tr><td style="text-align:center">ä</td><td style="text-align:center"><code>&amp;auml;</code></td><td style="text-align:center"><code>&amp;#228;</code></td><td style="text-align:center">å</td><td style="text-align:center"><code>&amp;aring;</code></td><td style="text-align:center"><code>&amp;#229;</code></td></tr><tr><td style="text-align:center">é</td><td style="text-align:center"><code>&amp;eacute;</code></td><td style="text-align:center"><code>&amp;#233;</code></td><td style="text-align:center">ê</td><td style="text-align:center"><code>&amp;ecirc;</code></td><td style="text-align:center"><code>&amp;#234;</code></td></tr><tr><td style="text-align:center">î</td><td style="text-align:center"><code>&amp;icirc;</code></td><td style="text-align:center"><code>&amp;#238;</code></td><td style="text-align:center">ï</td><td style="text-align:center"><code>&amp;iuml;</code></td><td style="text-align:center"><code>&amp;#239;</code></td></tr><tr><td style="text-align:center">ó</td><td style="text-align:center"><code>&amp;oacute;</code></td><td style="text-align:center"><code>&amp;#243;</code></td><td style="text-align:center">ô</td><td style="text-align:center"><code>&amp;ocirc;</code></td><td style="text-align:center"><code>&amp;#244;</code></td></tr><tr><td style="text-align:center">ø</td><td style="text-align:center"><code>&amp;oslash;</code></td><td style="text-align:center"><code>&amp;#248;</code></td><td style="text-align:center">ù</td><td style="text-align:center"><code>&amp;ugrave;</code></td><td style="text-align:center"><code>&amp;#249;</code></td></tr><tr><td style="text-align:center">?</td><td style="text-align:center"><code>&amp;yacute;</code></td><td style="text-align:center"><code>&amp;#253;</code></td><td style="text-align:center">þ</td><td style="text-align:center"><code>&amp;thorn;</code></td><td style="text-align:center"><code>&amp;#254;</code></td></tr><tr><td style="text-align:center">±</td><td style="text-align:center"><code>&amp;plusmn;</code></td><td style="text-align:center"><code>&amp;#177;</code></td><td style="text-align:center">¶</td><td style="text-align:center"><code>&amp;para;</code></td><td style="text-align:center"><code>&amp;#182;</code></td></tr><tr><td style="text-align:center">»</td><td style="text-align:center"><code>&amp;raquo;</code></td><td style="text-align:center"><code>&amp;#187;</code></td><td style="text-align:center">À</td><td style="text-align:center"><code>&amp;Agrave;</code></td><td style="text-align:center"><code>&amp;#192;</code></td></tr><tr><td style="text-align:center">Å</td><td style="text-align:center"><code>&amp;Aring;</code></td><td style="text-align:center"><code>&amp;#197;</code></td><td style="text-align:center">Ê</td><td style="text-align:center"><code>&amp;Ecirc;</code></td><td style="text-align:center"><code>&amp;#202;</code></td></tr><tr><td style="text-align:center">Ï</td><td style="text-align:center"><code>&amp;Iuml;</code></td><td style="text-align:center"><code>&amp;#207;</code></td><td style="text-align:center">Ô</td><td style="text-align:center"><code>&amp;Ocirc;</code></td><td style="text-align:center"><code>&amp;#212;</code></td></tr><tr><td style="text-align:center">Ù</td><td style="text-align:center"><code>&amp;Ugrave;</code></td><td style="text-align:center"><code>&amp;#217;</code></td><td style="text-align:center">Þ</td><td style="text-align:center"><code>&amp;THORN;</code></td><td style="text-align:center"><code>&amp;#222;</code></td></tr><tr><td style="text-align:center">ã</td><td style="text-align:center"><code>&amp;atilde;</code></td><td style="text-align:center"><code>&amp;#227;</code></td><td style="text-align:center">è</td><td style="text-align:center"><code>&amp;egrave;</code></td><td style="text-align:center"><code>&amp;#232;</code></td></tr><tr><td style="text-align:center">í</td><td style="text-align:center"><code>&amp;iacute;</code></td><td style="text-align:center"><code>&amp;#237;</code></td><td style="text-align:center">ò</td><td style="text-align:center"><code>&amp;ograve;</code></td><td style="text-align:center"><code>&amp;#242;</code></td></tr><tr><td style="text-align:center">÷</td><td style="text-align:center"><code>&amp;divide;</code></td><td style="text-align:center"><code>&amp;#247;</code></td><td style="text-align:center">ü</td><td style="text-align:center"><code>&amp;uuml;</code></td><td style="text-align:center"><code>&amp;#252;</code></td></tr><tr><td style="text-align:center">¤</td><td style="text-align:center"><code>&amp;curren;</code></td><td style="text-align:center"><code>&amp;#164;</code></td><td style="text-align:center">©</td><td style="text-align:center"><code>&amp;copy;</code></td><td style="text-align:center"><code>&amp;#169;</code></td></tr></tbody></table><h4 id="JavaScript转义符"><a href="#JavaScript转义符" class="headerlink" title="JavaScript转义符"></a>JavaScript转义符</h4><table><thead><tr><th>转义序列</th><th>字符</th></tr></thead><tbody><tr><td>\b</td><td>退格</td></tr><tr><td>\f</td><td>走纸换页</td></tr><tr><td>\n</td><td>换行</td></tr><tr><td>\r</td><td>回车</td></tr><tr><td>\t</td><td>横向跳格 (Ctrl-I)</td></tr><tr><td>\’</td><td>单引号</td></tr><tr><td>\”</td><td>双引号</td></tr><tr><td><code>\\</code></td><td>反斜杠</td></tr></tbody></table><h4 id="JavaScript编码转换"><a href="#JavaScript编码转换" class="headerlink" title="JavaScript编码转换"></a>JavaScript编码转换</h4><p><a href="http://www.w3school.com.cn/jsref/jsref_escape.asp" target="_blank" rel="noopener">escape()</a>,<br><a href="http://www.w3school.com.cn/jsref/jsref_encodeuri.asp" target="_blank" rel="noopener">encodeURI()</a>,<br><a href="http://www.w3school.com.cn/jsref/jsref_encodeURIComponent.asp" target="_blank" rel="noopener">encodeURIComponent()</a></p><blockquote><p>通过对三个函数的分析，我们可以知道：escape()除了 ASCII 字母、数字和特定的符号外，对传进来的字符串全部进行转义编码，因此如果想对URL编码，最好不要使用此方法。而encodeURI() 用于编码整个URI,因为URI中的合法字符都不会被编码转换。encodeURIComponent方法在编码单个URIComponent（指请求参 数）应当是最常用的，它可以讲参数中的中文、特殊字符进行转义，而不会影响整个URL。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> html </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>获取url参数</title>
      <link href="/js-url-param/"/>
      <url>/js-url-param/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>这里获取url的方法我用的window.location.hash因为我的链接中有#,若链接中无#,可以考虑location.search或location.href，一定要灵活哦。<br>主要原理一是正则匹配，还有就是indexOf()配合substring()。</p></blockquote><h3 id="【获取url参数】"><a href="#【获取url参数】" class="headerlink" title="【获取url参数】"></a>【获取url参数】</h3><h4 id="1-正则法"><a href="#1-正则法" class="headerlink" title="1.正则法"></a>1.正则法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getQueryString</span>(<span class="params">name</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> reg = <span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"(^|&amp;|)"</span>+ name +<span class="string">"=([^&amp;]*)(&amp;|$)"</span>);</span><br><span class="line">    <span class="keyword">var</span> r = <span class="built_in">window</span>.location.hash.substr(<span class="number">1</span>).match(reg);</span><br><span class="line">    <span class="keyword">if</span>(r != <span class="literal">null</span>) <span class="keyword">return</span>  <span class="built_in">unescape</span>(r[<span class="number">2</span>]); <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">var</span> xxx = getQueryString(<span class="string">'xxx'</span>)    <span class="comment">//xxx参数名</span></span><br></pre></td></tr></table></figure></p><h4 id="2-传统法"><a href="#2-传统法" class="headerlink" title="2.传统法"></a>2.传统法</h4><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getQueryString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="built_in">url</span> = <span class="built_in">window</span>.location.hash;</span><br><span class="line">        <span class="comment">//截取url中"?"符后的字串（包含"?"）</span></span><br><span class="line">        <span class="built_in">url</span> = <span class="built_in">url</span>.substring(<span class="built_in">url</span>.indexOf(<span class="string">"?"</span>),<span class="built_in">url</span>.length<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">var</span> theRequest = <span class="keyword">new</span> <span class="built_in">Object</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">url</span>.indexOf(<span class="string">"?"</span>) != <span class="number">-1</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> str = <span class="built_in">url</span>.substr(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">var</span> strs = str.split(<span class="string">"&amp;"</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; strs.length; i ++) &#123;</span><br><span class="line">                theRequest[strs[i].split(<span class="string">"="</span>)[<span class="number">0</span>]] = <span class="built_in">unescape</span>(strs[i].split(<span class="string">"="</span>)[<span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> theRequest;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>调用:<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xxx = getQueryString().xxx;     <span class="comment">//xxx参数名</span></span><br><span class="line"></span><br><span class="line">getQueryString() <span class="comment">//所有的参数对象</span></span><br></pre></td></tr></table></figure></p><h3 id="【获取url】"><a href="#【获取url】" class="headerlink" title="【获取url】"></a>【获取url】</h3><p>以此链接为例：<a href="http://blog.xonepage.com/#/?a=1&amp;b=2">http://blog.xonepage.com/#/?a=1&amp;b=2</a></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>，设置或获取对象指定的文件名或路径。</span><br><span class="line"><span class="built_in">window</span>.location.pathname    =&gt;  <span class="string">"/"</span></span><br><span class="line"><span class="number">2</span>，设置或获取整个 URL 为字符串。</span><br><span class="line"><span class="built_in">window</span>.location.href    =&gt;  <span class="string">"http://blog.xonepage.com/#/?a=1&amp;b=2"</span></span><br><span class="line"><span class="number">3</span>，设置或获取与 URL 关联的端口号码。</span><br><span class="line"><span class="built_in">window</span>.location.port    =&gt;  <span class="string">""</span></span><br><span class="line"><span class="number">4</span>，设置或获取 URL 的协议部分。</span><br><span class="line"><span class="built_in">window</span>.location.protocol    =&gt;  <span class="string">"http:"</span></span><br><span class="line"><span class="number">5</span>，设置或获取 href 属性中在井号“#”后面的分段。</span><br><span class="line"><span class="built_in">window</span>.location.hash    =&gt;  <span class="string">"#/?a=1&amp;b=2"</span></span><br><span class="line"><span class="number">6</span>，设置或获取 location 或 URL 的 hostname 和 port 号码。</span><br><span class="line"><span class="built_in">window</span>.location.host    =&gt;  <span class="string">"blog.xonepage.com"</span></span><br><span class="line"><span class="number">7</span>，设置或获取 href 属性中跟在问号后面的部分。</span><br><span class="line"><span class="built_in">window</span>.location.search  =&gt;  <span class="string">""</span>  <span class="comment">//这里需要注意的是当出现"/#/"search获取为空</span></span><br><span class="line">如果:http:<span class="comment">//blog.xonepage.com?a=1&amp;b=2</span></span><br><span class="line"><span class="built_in">window</span>.location.search  =&gt;  <span class="string">"?a=1&amp;b=2"</span></span><br><span class="line"><span class="number">8</span>，获取变量的值(截取等号后面的部分)</span><br><span class="line"><span class="keyword">var</span> url = <span class="built_in">window</span>.location.search;</span><br><span class="line"><span class="comment">// console.log(url.length);</span></span><br><span class="line"><span class="comment">// console.log(url.indexOf('?'));</span></span><br><span class="line"><span class="comment">// console.log(url.lastIndexOf('='));</span></span><br><span class="line"><span class="keyword">var</span> loc = url.substring(url.lastIndexOf(<span class="string">'='</span>)+<span class="number">1</span>, url.length);</span><br><span class="line"><span class="number">9</span>，用来得到当前网页的域名</span><br><span class="line"><span class="built_in">document</span>.domain  =&gt;  <span class="string">"blog.xonepage.com"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>EasyUI DataGrid行内编辑</title>
      <link href="/easyui-edit/"/>
      <url>/easyui-edit/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>如果对easyui还未有一定了解，引用参考<a href="http://www.runoob.com/jeasyui/jqueryeasyui-tutorial.html" target="_blank" rel="noopener">easyui 穿越&gt;&gt;</a></p></blockquote><h3 id="【示例】"><a href="#【示例】" class="headerlink" title="【示例】"></a>【示例】</h3><h4 id="1-datagrid数据网格"><a href="#1-datagrid数据网格" class="headerlink" title="1.datagrid数据网格"></a>1.datagrid数据网格</h4><blockquote><p><code>editor</code> <code>type</code> <code>options</code> 是表格行内编辑的主要属性<br><code>beginEdit</code> <code>endEdit</code> <code>cancelEdit</code> 是行内编辑主要方法(很语意化的)<br><code>row.editing</code> 判断是否已经开始编辑</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$keyGrid = $(<span class="string">'#key_grid'</span>);</span><br><span class="line"><span class="keyword">this</span>.$keyGrid.datagrid(&#123;</span><br><span class="line">    title: <span class="string">'xxx'</span>,</span><br><span class="line">    url: <span class="string">'xxxxxxxxx'</span>,</span><br><span class="line">    height: that.config.win.winHeight<span class="number">-20</span>,</span><br><span class="line">    singleSelect: <span class="literal">true</span>,</span><br><span class="line">    fitColumns: <span class="literal">true</span>,</span><br><span class="line">    pagination: <span class="literal">true</span>, <span class="comment">//设置true将在数据表格底部显示分页工具栏。</span></span><br><span class="line">    pagePosition: <span class="string">"bottom"</span>,</span><br><span class="line">    pageSize: <span class="number">30</span>,</span><br><span class="line">    tools:[&#123;</span><br><span class="line">        iconCls:<span class="string">'icon-add'</span>,</span><br><span class="line">        handler:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;],</span><br><span class="line">    toolbar: <span class="string">'#toolbar'</span>,</span><br><span class="line">    columns:[[</span><br><span class="line">        &#123;<span class="attr">field</span>:<span class="string">'pinyinsuoxie'</span>,<span class="attr">title</span>:<span class="string">'拼音缩写'</span>,<span class="attr">width</span>:<span class="number">10</span>,<span class="attr">align</span>:<span class="string">'center'</span>,</span><br><span class="line">            editor: <span class="string">"text"</span>,</span><br><span class="line">            editor:&#123;</span><br><span class="line">                type:<span class="string">'validatebox'</span>,</span><br><span class="line">                options: &#123; <span class="attr">required</span>: <span class="literal">true</span>&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;<span class="attr">field</span>:<span class="string">'business_typess'</span>,<span class="attr">title</span>:<span class="string">'类型'</span>,<span class="attr">width</span>:<span class="number">10</span>,<span class="attr">align</span>:<span class="string">'center'</span>,</span><br><span class="line">            editor:&#123;</span><br><span class="line">                type:<span class="string">'combobox'</span>,</span><br><span class="line">                options:&#123;</span><br><span class="line">                    data: $.makeComboboxFromMap(ENUMS.KEY_STATUS),</span><br><span class="line">                    valueField: <span class="string">'value'</span>,</span><br><span class="line">                    textField: <span class="string">'text'</span>,</span><br><span class="line">                    editable: <span class="literal">true</span>,</span><br><span class="line">                    required: <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;<span class="attr">field</span>:<span class="string">'update_time'</span>,<span class="attr">title</span>:<span class="string">'更新时间'</span>,<span class="attr">width</span>:<span class="number">10</span>,<span class="attr">align</span>:<span class="string">'center'</span>,</span><br><span class="line">            formatter:<span class="function"><span class="keyword">function</span>(<span class="params">value,row,index</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(value)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Date</span>(value*<span class="number">1000</span>).format(<span class="string">'yyyy-MM-dd hh:mm'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;<span class="attr">field</span>:<span class="string">'action'</span>,<span class="attr">title</span>:<span class="string">'操作'</span>,<span class="attr">width</span>:<span class="number">10</span>,<span class="attr">align</span>:<span class="string">'center'</span>,</span><br><span class="line">            formatter:<span class="function"><span class="keyword">function</span>(<span class="params">value,row,index</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (row.editing)&#123;</span><br><span class="line">                    <span class="keyword">var</span> s = <span class="string">'&lt;a href="javascript:;" class="btn btn-success k-save" data-id='</span>+ row._id +<span class="string">'&gt;保存&lt;/a&gt; '</span>;</span><br><span class="line">                    <span class="keyword">var</span> c = <span class="string">'&lt;a href="javascript:;" class="btn btn-primary k-cancel" data-id='</span>+ row._id +<span class="string">'&gt;取消&lt;/a&gt;'</span>;</span><br><span class="line">                    <span class="keyword">return</span> s+c;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">var</span> e = <span class="string">'&lt;a href="javascript:;" class="btn btn-primary k-edit" data-id='</span>+ row._id +<span class="string">'&gt;编辑&lt;/a&gt; '</span>;</span><br><span class="line">                    <span class="keyword">if</span>(row.status == <span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="keyword">var</span> d = <span class="string">'&lt;a href="javascript:;" class="btn btn-primary k-delete" data-id='</span>+ row._id +<span class="string">'&gt;删除&lt;/a&gt; '</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> d = <span class="string">'&lt;a href="javascript:;" class="btn btn-primary k-recover" data-id='</span>+ row._id +<span class="string">'&gt;恢复&lt;/a&gt; '</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> e+d;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ]],</span><br><span class="line">    onBeforeEdit:<span class="function"><span class="keyword">function</span>(<span class="params">index,row</span>)</span>&#123;</span><br><span class="line">        row.editing = <span class="literal">true</span>;</span><br><span class="line">        that.updateActions(index);</span><br><span class="line">    &#125;,</span><br><span class="line">    onAfterEdit:<span class="function"><span class="keyword">function</span>(<span class="params">index,row</span>)</span>&#123;</span><br><span class="line">        row.editing = <span class="literal">false</span>;</span><br><span class="line">        that.updateActions(index);</span><br><span class="line">    &#125;,</span><br><span class="line">    onCancelEdit:<span class="function"><span class="keyword">function</span>(<span class="params">index,row</span>)</span>&#123;</span><br><span class="line">        row.editing = <span class="literal">false</span>;</span><br><span class="line">        that.updateActions(index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//本地更新表格</span></span><br><span class="line">updateActions: <span class="function"><span class="keyword">function</span>(<span class="params">index</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.$keyGrid.datagrid(<span class="string">'updateRow'</span>,&#123;</span><br><span class="line">        index: index,</span><br><span class="line">        row:&#123;&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取行索引</span></span><br><span class="line">getRowIndex: <span class="function"><span class="keyword">function</span> (<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    that.config.data.row = that.$keyGrid.datagrid(<span class="string">'getSelected'</span>);</span><br><span class="line">    <span class="keyword">var</span> rowIndex = that.$keyGrid.datagrid(<span class="string">'getRowIndex'</span>, that.config.data.row);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'rowindex:'</span>,rowIndex)</span><br><span class="line">    that.config.filter.old_index = rowIndex;</span><br><span class="line">    <span class="keyword">return</span> rowIndex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-events事件"><a href="#2-events事件" class="headerlink" title="2.events事件"></a>2.events事件</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//编辑</span></span><br><span class="line">this.el.$keyContent.on(<span class="string">'click'</span>,<span class="string">'.k-edit'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//标记当前点击行,点击其他行时恢复按钮状态</span></span><br><span class="line">    that.config.filter.old_index &gt;= <span class="string">'0'</span></span><br><span class="line">        ? that.$keyGrid.datagrid(<span class="string">'endEdit'</span>, that.config.filter.old_index)</span><br><span class="line">        : <span class="string">''</span>;</span><br><span class="line">    <span class="comment">//更新行内编辑状态'beginEdit'</span></span><br><span class="line">    that.$keyGrid.datagrid(<span class="string">'beginEdit'</span>, that.getRowIndex());</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//取消</span></span><br><span class="line">this.el.$keyContent.on(<span class="string">'click'</span>,<span class="string">'.k-cancel'</span>,<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//更新行内编辑状态'cancelEdit'</span></span><br><span class="line">    that.$keyGrid.datagrid(<span class="string">'cancelEdit'</span>, that.getRowIndex());</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-添加一行"><a href="#3-添加一行" class="headerlink" title="3.添加一行"></a>3.添加一行</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加列</span></span><br><span class="line">addKey: <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//添加时先判断是否有开启编辑的行，如果有则把开户编辑的那行结束编辑</span></span><br><span class="line">    <span class="keyword">this</span>.$keyGrid.datagrid(<span class="string">"insertRow"</span>, &#123;</span><br><span class="line">        index: <span class="number">0</span>, <span class="comment">// index start with 0</span></span><br><span class="line">        row: &#123;&#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//将新插入的那一行开户编辑状态</span></span><br><span class="line">    <span class="keyword">this</span>.$keyGrid.datagrid(<span class="string">"beginEdit"</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//给当前编辑的行赋值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-行内表单验证"><a href="#4-行内表单验证" class="headerlink" title="4.行内表单验证"></a>4.行内表单验证</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//保存</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>.el.$keyContent.on(<span class="string">'click'</span>,<span class="string">'.k-save'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $target = $(e.currentTarget);</span><br><span class="line">    that.$keyGrid.datagrid(<span class="string">'endEdit'</span>, that.getRowIndex());</span><br><span class="line">    <span class="comment">//获取当前选中行表单</span></span><br><span class="line">    <span class="keyword">var</span> isValid = $(<span class="string">'.datagrid-row-selected'</span>).form(<span class="string">'validate'</span>)</span><br><span class="line">    <span class="keyword">if</span>(!isValid)&#123;</span><br><span class="line">        $.messager.show(&#123;</span><br><span class="line">            title:<span class="string">'提示'</span>,</span><br><span class="line">            msg:<span class="string">'请补全表单'</span>,</span><br><span class="line">            timeout:<span class="number">3000</span>,</span><br><span class="line">            showType:<span class="string">'slide'</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    that.saveKey();     <span class="comment">//执行保存操作</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><blockquote><p>这里只演示了textbox和combobox组件行内编辑，其他组件请自行验证。还有一点需要说明的是这里的每一块都是写在一个对象中的，直接copy无法使用，请仔细阅读，选择性copy^_^</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> EasyUI </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>form to json</title>
      <link href="/js-form-to-json/"/>
      <url>/js-form-to-json/</url>
      
        <content type="html"><![CDATA[<h3 id="【用法】"><a href="#【用法】" class="headerlink" title="【用法】"></a>【用法】</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#form'</span>).serialize();        <span class="comment">//会根据input里面的name，把数据序列化成字符串；eg：name=xxx</span></span><br><span class="line">$(<span class="string">'#form'</span>).serializeArray();    <span class="comment">//会根据input里面的name，把数据序列化成数组；eg：[object]</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">var</span> jsObj = <span class="keyword">this</span>.formToJson(<span class="built_in">decodeURIComponent</span>($(<span class="string">'#form'</span>).serialize(),<span class="literal">true</span>));</span><br><span class="line"></span><br><span class="line">formToJson: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">   data=data.replace(<span class="regexp">/&amp;/g</span>,<span class="string">"\",\""</span>);</span><br><span class="line">   data=data.replace(<span class="regexp">/=/g</span>,<span class="string">"\":\""</span>);</span><br><span class="line">   data=<span class="string">"&#123;\""</span>+data+<span class="string">"\"&#125;"</span>;</span><br><span class="line">   <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">var</span> str = <span class="built_in">JSON</span>.stringify(jsObj);  <span class="comment">//json对象转化为json字符串</span></span><br><span class="line"><span class="keyword">var</span> str1 = <span class="built_in">JSON</span>.parse(str);  <span class="comment">//json字符串转化为json对象</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>localStorage</title>
      <link href="/js-localstorage/"/>
      <url>/js-localstorage/</url>
      
        <content type="html"><![CDATA[<h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>HTML5的storage是存储在你的计算机上，网站在页面加载完毕后可以通过Javascript来获取这些数据。首先自然是检测浏览器是否支持本地存储。在HTML5中，本地存储是一个window的属性，包括localStorage和sessionStorage，从名字应该可以很清楚的辨认二者的区别，前者是一直存在本地的，后者只是伴随着session，窗口一旦关闭就没了。二者用法完全相同，这里以localStorage为例。</p></blockquote><h3 id="【用法】"><a href="#【用法】" class="headerlink" title="【用法】"></a>【用法】</h3><h4 id="验证浏览器支持"><a href="#验证浏览器支持" class="headerlink" title="验证浏览器支持"></a>验证浏览器支持</h4><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">window</span>.localStorage)&#123;</span><br><span class="line">    alert(<span class="string">'支持localStorage'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="string">'不支持localStorage'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="设置-获取-清除"><a href="#设置-获取-清除" class="headerlink" title="设置/获取/清除"></a>设置/获取/清除</h4><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!--设置--&gt;</span></span></span><br><span class="line"><span class="xml">localStorage.name = "xxx";          //设置name为"xxx"</span></span><br><span class="line"><span class="xml">localStorage["name"] = "xxx";       //设置name为"xxx"，覆盖上面的值</span></span><br><span class="line"><span class="xml">localStorage.setItem("name","xxx"); //设置name为"xxx"</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--获取--&gt;</span></span></span><br><span class="line"><span class="xml">localStorage["name"];           //获取name的值</span></span><br><span class="line"><span class="xml">localStorage.name;              //获取name的值</span></span><br><span class="line"><span class="xml">localStorage.getItem("name");   //获取name的值</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--清除--&gt;</span></span></span><br><span class="line"><span class="xml">localStorage.removeItem("name");    //清除name的值</span></span><br><span class="line"><span class="xml">localStorage.clear()                //清除所有</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--key()--&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">var localst = window.localStorage</span></span><br><span class="line"><span class="xml">for(var i=0;i<span class="tag">&lt;<span class="name">localst.length;i++)&#123;</span></span></span></span><br><span class="line"><span class="xml">    //key(i)获得相应的键，再用getItem()方法获得对应的值</span></span><br><span class="line"><span class="xml">    document.write(localst.key(i)+ " : " + localst.getItem(localst.key(i)) + "<span class="tag">&lt;<span class="name">br</span>&gt;</span>");</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">//这种效果一样不必用key()</span></span><br><span class="line"><span class="xml">for(var skey in localst)&#123;</span></span><br><span class="line"><span class="xml">    console.log(skey," : ",localst[skey])</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="【实例】"><a href="#【实例】" class="headerlink" title="【实例】"></a>【实例】</h3><blockquote><p>缓存本地历史搜索关键词 localData()</p></blockquote><p><code>注意parse/stringify之间的切换</code></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">localData(<span class="keyword">word</span>)&#123;</span><br><span class="line">    var localHistory = localStorage.getItem(<span class="string">"localData"</span>)</span><br><span class="line">    <span class="built_in">if</span>(!localHistory)&#123;</span><br><span class="line">        localHistory = [];</span><br><span class="line">        localHistory.push(<span class="keyword">word</span>)</span><br><span class="line">    &#125;<span class="built_in">else</span>&#123;</span><br><span class="line">        localHistory = JSON.parse(localHistory)</span><br><span class="line">        localHistory.push(<span class="keyword">word</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    localStorage.setItem(<span class="string">"localData"</span>,JSON.stringify(<span class="keyword">this</span>.uniqueArray(localHistory)))</span><br><span class="line">    <span class="built_in">return</span> localHistory;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//每次搜索把'xxx'传如localData()生成/增加localData内的数据;</span></span><br><span class="line">localData(<span class="string">'xxx'</span>)</span><br></pre></td></tr></table></figure><blockquote><p>历史关键词去重 uniqueArray()</p></blockquote><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">uniqueArray(<span class="keyword">data</span>)&#123;</span><br><span class="line">        <span class="keyword">data</span> = <span class="keyword">data</span> || [];</span><br><span class="line">        <span class="keyword">var</span> arr = &#123;&#125;;</span><br><span class="line">        <span class="keyword">data</span>.map((el,index)=&gt;&#123;</span><br><span class="line">            <span class="keyword">var</span> v = <span class="keyword">data</span>[index];</span><br><span class="line">            <span class="keyword">if</span> (typeof(arr[v]) == <span class="string">'undefined'</span>)&#123;</span><br><span class="line">                arr[v] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">data</span>.length = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i &lt; <span class="number">10</span>)               <span class="comment">//截取前10个</span></span><br><span class="line">            <span class="keyword">data</span>[<span class="keyword">data</span>.length] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>ant-design</title>
      <link href="/react-ant-design/"/>
      <url>/react-ant-design/</url>
      
        <content type="html"><![CDATA[<h3 id="【特点】"><a href="#【特点】" class="headerlink" title="【特点】"></a>【特点】</h3><ol><li>丰富实用的 React UI 组件。</li><li>基于 React 的组件化开发模式。</li><li>背靠 npm 生态圈。</li><li>基于 webpack 的调试构建方案，支持 ES6。</li></ol><h3 id="【前言】"><a href="#【前言】" class="headerlink" title="【前言】"></a>【前言】</h3><blockquote><p>应用antd要对nodejs npm模式有一定了解，需先安装<a href="http://nodejs.cn/" target="_blank" rel="noopener">nodejs &gt;&gt;</a></p></blockquote><h3 id="【安装】"><a href="#【安装】" class="headerlink" title="【安装】"></a>【安装】</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> antd</span><br></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; DatePicker &#125; <span class="keyword">from</span> <span class="string">'antd'</span>;</span><br><span class="line">ReactDOM.render(<span class="xml"><span class="tag">&lt;<span class="name">DatePicker</span> /&gt;</span>, mountNode);</span></span><br></pre></td></tr></table></figure><h4 id="引入样式"><a href="#引入样式" class="headerlink" title="引入样式"></a>引入样式</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> 'antd/dist/antd.css';</span></span><br></pre></td></tr></table></figure><blockquote><p>如果整站所用组件均为antd，可在全局app.js引入；如局部引用，可在相应js文件头单独引入</p></blockquote><h3 id="布局layout"><a href="#布局layout" class="headerlink" title="布局layout"></a>布局layout</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span></span><br><span class="line"><span class="keyword">import</span> &#123; Row, Col&#125; <span class="keyword">from</span> <span class="string">'antd'</span></span><br><span class="line"><span class="keyword">import</span> Page <span class="keyword">from</span> <span class="string">'../../../base/Page'</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">PageLayout</span> <span class="keyword">extends</span> <span class="title">Page</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    render() &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            &lt;div&gt;</span><br><span class="line">                &lt;h1&gt;ant布局&lt;<span class="regexp">/h1&gt;</span></span><br><span class="line"><span class="regexp">                &lt;h2&gt;间距&lt;/</span>h2&gt;</span><br><span class="line">                &lt;Row&gt;</span><br><span class="line">                    &lt;Col span=&#123;<span class="number">8</span>&#125;&gt;col<span class="number">-8</span>&lt;<span class="regexp">/Col&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;Col span=&#123;8&#125; offset=&#123;8&#125;&gt;col-8&lt;/</span>Col&gt;</span><br><span class="line">                &lt;<span class="regexp">/Row&gt;</span></span><br><span class="line"><span class="regexp">                &lt;Row&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;Col span=&#123;6&#125; offset=&#123;6&#125;&gt;col-6 col-offset-6&lt;/</span>Col&gt;</span><br><span class="line">                    &lt;Col span=&#123;<span class="number">6</span>&#125; offset=&#123;<span class="number">6</span>&#125;&gt;col<span class="number">-6</span> col-offset<span class="number">-6</span>&lt;<span class="regexp">/Col&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>Row&gt;</span><br><span class="line">                &lt;Row&gt;</span><br><span class="line">                    &lt;Col span=&#123;<span class="number">12</span>&#125; offset=&#123;<span class="number">6</span>&#125;&gt;col<span class="number">-12</span> col-offset<span class="number">-6</span>&lt;<span class="regexp">/Col&gt;</span></span><br><span class="line"><span class="regexp">                &lt;/</span>Row&gt;</span><br><span class="line"></span><br><span class="line">                &lt;h2&gt;flex盒模型&lt;<span class="regexp">/h2&gt;</span></span><br><span class="line"><span class="regexp">                &lt;p&gt;sub-element align left&lt;/</span>p&gt;</span><br><span class="line">                &lt;Row type=<span class="string">"flex"</span> justify=<span class="string">"start"</span>&gt;</span><br><span class="line">                    &lt;Col span=&#123;<span class="number">4</span>&#125;&gt;col<span class="number">-4</span>&lt;<span class="regexp">/Col&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;Col span=&#123;4&#125;&gt;col-4&lt;/</span>Col&gt;</span><br><span class="line">                    &lt;Col span=&#123;<span class="number">4</span>&#125;&gt;col<span class="number">-4</span>&lt;<span class="regexp">/Col&gt;</span></span><br><span class="line"><span class="regexp">                    &lt;Col span=&#123;4&#125;&gt;col-4&lt;/</span>Col&gt;</span><br><span class="line">                &lt;<span class="regexp">/Row&gt;</span></span><br><span class="line"><span class="regexp">                ...</span></span><br></pre></td></tr></table></figure><blockquote><p>antd采用css3 flex弹性布局，需要注意的是设为Flex布局以后，子元素的float、clear和vertical-align属性将失效。Flex布局基于flex-flow流，而常规布局是基于块和内联流方向，Flex布局使我们建立css布局更加随心所欲、简洁优雅。当然美好的东西就会有该有的缺憾，flex的兼容性如下图所示：</p></blockquote><p><img src="http://ohgbisrm2.bkt.clouddn.com/css_flex_min.png" alt="img"></p><blockquote><p>有缺憾就有弥补：将Flexbox多版本混合在一起使用</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.page-text</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;      <span class="comment">/* OLD - iOS 6-, Safari 3.1-6 */</span></span><br><span class="line">  <span class="attribute">display</span>: -moz-box;         <span class="comment">/* OLD - Firefox 19- (buggy but mostly works) */</span></span><br><span class="line">  <span class="attribute">display</span>: -ms-flexbox;      <span class="comment">/* TWEENER - IE 10 */</span></span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex;     <span class="comment">/* NEW - Chrome */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;             <span class="comment">/* NEW, Spec - Opera 12.1, Firefox 20+ */</span></span><br><span class="line"> &#125;</span><br><span class="line"> ...</span><br></pre></td></tr></table></figure><p>如果你将Flexbox多版本混合在一起使用，可以得到以下浏览器的支持：<br><code>Chrome any</code><br><code>Firefox any</code><br> <code>Safari any</code><br> <code>Opera 12.1+</code><br> <code>IE 10+</code><br> <code>iOS any</code><br> <code>Android any</code><br> 虽然ie依然废，只好放弃</p><p> <a href="https://github.com/ant-design" target="_blank" rel="noopener">社区贡献脚手架 &gt;&gt;</a><br> <a href="https://git.oschina.net/xkh/react-antd-redux.git" target="_blank" rel="noopener">本人贡献脚手架 &gt;&gt;</a></p>]]></content>
      
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>JS时间戳操作</title>
      <link href="/js-timestamp/"/>
      <url>/js-timestamp/</url>
      
        <content type="html"><![CDATA[<h3 id="一-获取-当前时间戳-的三种方法"><a href="#一-获取-当前时间戳-的三种方法" class="headerlink" title="一.获取[当前时间戳]的三种方法"></a>一.获取[当前时间戳]的三种方法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var newTime = Date.parse(new Date());       //输出 1478764799000</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var newTime = (new Date()).valueOf();       //输出 1478764799000</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var newTime = new Date().getTime()；        //输出 1478764799000</span><br></pre></td></tr></table></figure><blockquote><p>第一种：获取的时间戳是把毫秒改成000显示，第二种和第三种是获取了当前毫秒的时间戳。<br>第三种方法较为常用</p></blockquote><h3 id="二-当前时间-特定格式字符串"><a href="#二-当前时间-特定格式字符串" class="headerlink" title="二.[当前时间]特定格式字符串"></a>二.[当前时间]特定格式字符串</h3><h4 id="2-1-原生方法格式化"><a href="#2-1-原生方法格式化" class="headerlink" title="2.1 原生方法格式化"></a>2.1 原生方法格式化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var newDate = new Date();</span><br><span class="line"></span><br><span class="line">newDate.toString()            // Thu Nov 10 2016 18:07:23 GMT+0800 (CST) (中国标准完整日期)</span><br><span class="line">newDate.toDateString()        // Thu Nov 10 2016                         (中国标准日期)</span><br><span class="line">newDate.toTimeString()        // 18:07:23 GMT+0800 (CST)                 (中国标准时间)</span><br><span class="line">newDate.toLocaleDateString()  // 2016/11/10</span><br><span class="line">newDate.toLocaleString()      // 2016/11/10 下午6:07:23</span><br><span class="line">newDate.toLocaleTimeString()  // 下午6:07:23</span><br><span class="line">newDate.toGMTString()         // Thu, 10 Nov 2016 10:07:23 GMT</span><br><span class="line">newDate.toISOString()         // 2016-11-10T10:07:23.363Z</span><br><span class="line">newDate.toJSON()              // 2016-11-10T10:07:23.363Z</span><br><span class="line">newDate.toUTCString()         // Thu, 10 Nov 2016 10:07:23 GMT</span><br></pre></td></tr></table></figure><blockquote><p>经亲测:后4种方法不建议使用</p></blockquote><h4 id="2-2-自定义格式化"><a href="#2-2-自定义格式化" class="headerlink" title="2.2 自定义格式化"></a>2.2 自定义格式化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//任意格式转换</span><br><span class="line">new Date().toLocaleDateString().replace(/(\d+)[^\d](\d+)[^\d](\d+)[^\d]?/, <span class="string">"<span class="variable">$1</span>.<span class="variable">$2</span>.<span class="variable">$3</span>"</span>); //2016.11.10</span><br><span class="line">new Date().toLocaleDateString().replace(/(\d+)[^\d](\d+)[^\d](\d+)[^\d]?/, <span class="string">"<span class="variable">$2</span>-<span class="variable">$3</span>"</span>); //11-10</span><br><span class="line">new Date().toLocaleString().replace(/(\d+)[^\d](\d+)[^\d](\d+)[^\d]?/, <span class="string">"<span class="variable">$1</span>.<span class="variable">$2</span>.<span class="variable">$3</span> "</span>); //2016.11.10 18:07:23</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//<span class="string">"2016-11-10"</span>替换分隔符</span><br><span class="line">new Date().toLocaleDateString().replace(/-/g,<span class="string">'/'</span>)    //2016/11/10</span><br></pre></td></tr></table></figure><h4 id="注意-在移动端-app进行字符串-amp-时间戳的相互转换-尽量用标准时间格式"><a href="#注意-在移动端-app进行字符串-amp-时间戳的相互转换-尽量用标准时间格式" class="headerlink" title="!注意:在移动端/app进行字符串&amp;时间戳的相互转换,尽量用标准时间格式"></a>!注意:在移动端/app进行字符串&amp;时间戳的相互转换,尽量用标准时间格式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">例如:<span class="string">"2016-11-10"</span>在pc浏览器直接可getTime()来获取时间戳,</span><br><span class="line">在微信/app就可能存在不认的情况,</span><br><span class="line"><span class="string">"2016-11-10"</span>先转换为自定义格式<span class="string">"2016/11/10"</span>再进行时间戳转换就ok了.</span><br></pre></td></tr></table></figure><h3 id="三-时间格式化-通用组件"><a href="#三-时间格式化-通用组件" class="headerlink" title="三.时间格式化[通用组件]"></a>三.时间格式化[通用组件]</h3><h4 id="3-1-年-月-日-时-分-秒-季"><a href="#3-1-年-月-日-时-分-秒-季" class="headerlink" title="3.1 年/月/日/时/分/秒/季"></a>3.1 年/月/日/时/分/秒/季</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 对Date的扩展，将 Date 转化为指定格式的String</span><br><span class="line">// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符， </span><br><span class="line">// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字) </span><br><span class="line">// 例子： </span><br><span class="line">// (new Date()).Format(<span class="string">"yyyy-MM-dd hh:mm:ss.S"</span>) ==&gt; 2006-07-02 08:09:04.423 </span><br><span class="line">// (new Date()).Format(<span class="string">"yyyy-M-d h:m:s.S"</span>)      ==&gt; 2006-7-2 8:9:4.18 </span><br><span class="line"></span><br><span class="line">Date.prototype.Format = <span class="keyword">function</span> (fmt) &#123; //author: meizz </span><br><span class="line">    var o = &#123;</span><br><span class="line">        <span class="string">"M+"</span>: this.getMonth() + 1, //月份 </span><br><span class="line">        <span class="string">"d+"</span>: this.getDate(), //日 </span><br><span class="line">        <span class="string">"h+"</span>: this.getHours(), //小时 </span><br><span class="line">        <span class="string">"m+"</span>: this.getMinutes(), //分 </span><br><span class="line">        <span class="string">"s+"</span>: this.getSeconds(), //秒 </span><br><span class="line">        <span class="string">"q+"</span>: Math.floor((this.getMonth() + 3) / 3), //季度 </span><br><span class="line">        <span class="string">"S"</span>: this.getMilliseconds() //毫秒 </span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (/(y+)/.<span class="built_in">test</span>(fmt)) fmt = fmt.replace(RegExp.<span class="variable">$1</span>, (this.getFullYear() + <span class="string">""</span>).substr(4 - RegExp.<span class="variable">$1</span>.length));</span><br><span class="line">    <span class="keyword">for</span> (var k <span class="keyword">in</span> o)</span><br><span class="line">    <span class="keyword">if</span> (new RegExp(<span class="string">"("</span> + k + <span class="string">")"</span>).<span class="built_in">test</span>(fmt)) fmt = fmt.replace(RegExp.<span class="variable">$1</span>, (RegExp.<span class="variable">$1</span>.length == 1) ? (o[k]) : ((<span class="string">"00"</span> + o[k]).substr((<span class="string">""</span> + o[k]).length)));</span><br><span class="line">    <span class="built_in">return</span> fmt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-年-月-日-时-分-秒-季-周"><a href="#3-2-年-月-日-时-分-秒-季-周" class="headerlink" title="3.2 年/月/日/时/分/秒/季/周"></a>3.2 年/月/日/时/分/秒/季/周</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">// 对Date的扩展，将 Date 转化为指定格式的String * 月(M)、日(d)、12小时(h)、24小时(H)、分(m)、秒(s)、周(E)、季度(q)可以用 1-2 个占位符 </span><br><span class="line">// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字) * eg: * (new Date()).pattern(<span class="string">"yyyy-MM-dd hh:mm:ss.S"</span>)==&gt; 2006-07-02 08:09:04.423      </span><br><span class="line">// (new Date()).pattern(<span class="string">"yyyy-MM-dd E HH:mm:ss"</span>) ==&gt; 2009-03-10 二 20:09:04      </span><br><span class="line">// (new Date()).pattern(<span class="string">"yyyy-MM-dd EE hh:mm:ss"</span>) ==&gt; 2009-03-10 周二 08:09:04      </span><br><span class="line">// (new Date()).pattern(<span class="string">"yyyy-MM-dd EEE hh:mm:ss"</span>) ==&gt; 2009-03-10 星期二 08:09:04      </span><br><span class="line">// (new Date()).pattern(<span class="string">"yyyy-M-d h:m:s.S"</span>) ==&gt; 2006-7-2 8:9:4.18</span><br><span class="line"></span><br><span class="line">Date.prototype.pattern=<span class="keyword">function</span>(fmt) &#123;         </span><br><span class="line">    var o = &#123;         </span><br><span class="line">    <span class="string">"M+"</span> : this.getMonth()+1, //月份         </span><br><span class="line">    <span class="string">"d+"</span> : this.getDate(), //日         </span><br><span class="line">    <span class="string">"h+"</span> : this.getHours()%12 == 0 ? 12 : this.getHours()%12, //小时         </span><br><span class="line">    <span class="string">"H+"</span> : this.getHours(), //小时         </span><br><span class="line">    <span class="string">"m+"</span> : this.getMinutes(), //分         </span><br><span class="line">    <span class="string">"s+"</span> : this.getSeconds(), //秒         </span><br><span class="line">    <span class="string">"q+"</span> : Math.floor((this.getMonth()+3)/3), //季度         </span><br><span class="line">    <span class="string">"S"</span> : this.getMilliseconds() //毫秒         </span><br><span class="line">    &#125;;         </span><br><span class="line">    var week = &#123;         </span><br><span class="line">    <span class="string">"0"</span> : <span class="string">"/u65e5"</span>,         </span><br><span class="line">    <span class="string">"1"</span> : <span class="string">"/u4e00"</span>,         </span><br><span class="line">    <span class="string">"2"</span> : <span class="string">"/u4e8c"</span>,         </span><br><span class="line">    <span class="string">"3"</span> : <span class="string">"/u4e09"</span>,         </span><br><span class="line">    <span class="string">"4"</span> : <span class="string">"/u56db"</span>,         </span><br><span class="line">    <span class="string">"5"</span> : <span class="string">"/u4e94"</span>,         </span><br><span class="line">    <span class="string">"6"</span> : <span class="string">"/u516d"</span>        </span><br><span class="line">    &#125;;         </span><br><span class="line">    <span class="keyword">if</span>(/(y+)/.<span class="built_in">test</span>(fmt))&#123;         </span><br><span class="line">        fmt=fmt.replace(RegExp.<span class="variable">$1</span>, (this.getFullYear()+<span class="string">""</span>).substr(4 - RegExp.<span class="variable">$1</span>.length));         </span><br><span class="line">    &#125;         </span><br><span class="line">    <span class="keyword">if</span>(/(E+)/.<span class="built_in">test</span>(fmt))&#123;         </span><br><span class="line">        fmt=fmt.replace(RegExp.<span class="variable">$1</span>, ((RegExp.<span class="variable">$1</span>.length&gt;1) ? (RegExp.<span class="variable">$1</span>.length&gt;2 ? <span class="string">"/u661f/u671f"</span> : <span class="string">"/u5468"</span>) : <span class="string">""</span>)+week[this.getDay()+<span class="string">""</span>]);         </span><br><span class="line">    &#125;         </span><br><span class="line">    <span class="keyword">for</span>(var k <span class="keyword">in</span> o)&#123;         </span><br><span class="line">        <span class="keyword">if</span>(new RegExp(<span class="string">"("</span>+ k +<span class="string">")"</span>).<span class="built_in">test</span>(fmt))&#123;         </span><br><span class="line">            fmt = fmt.replace(RegExp.<span class="variable">$1</span>, (RegExp.<span class="variable">$1</span>.length==1) ? (o[k]) : ((<span class="string">"00"</span>+ o[k]).substr((<span class="string">""</span>+ o[k]).length)));         </span><br><span class="line">        &#125;         </span><br><span class="line">    &#125;         </span><br><span class="line">    <span class="built_in">return</span> fmt;         </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-template日期格式化组件"><a href="#3-3-template日期格式化组件" class="headerlink" title="3.3 template日期格式化组件"></a>3.3 template日期格式化组件</h4><p>详见<a href="/2016/09/20/js-arttemplate/">ArtTemplate</a></p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Mac下Git命令自动补全</title>
      <link href="/git-mac-mend/"/>
      <url>/git-mac-mend/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="一-、安装-bash-completion"><a href="#一-、安装-bash-completion" class="headerlink" title="一 、安装 bash-completion"></a>一 、安装 bash-completion</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ brew install bash-completion</span><br><span class="line"><span class="comment"># 完成后-查看</span></span><br><span class="line">$ brew info bash-completion</span><br><span class="line"><span class="comment"># 会输出类似以下内容</span></span><br><span class="line">==&gt; Caveats</span><br><span class="line">Add the following lines to your ~/.bash_profile:</span><br><span class="line">  <span class="keyword">if</span> [ -f $(brew --prefix)/etc/bash_completion ]; <span class="keyword">then</span></span><br><span class="line">    . $(brew --prefix)/etc/bash_completion</span><br><span class="line">  <span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>将if…then…那一句添加到~/.bash_profile（如果没有该文件，新建一个）<br>重启终端</p><h3 id="二、拷贝文件、设置路径"><a href="#二、拷贝文件、设置路径" class="headerlink" title="二、拷贝文件、设置路径"></a>二、拷贝文件、设置路径</h3><p>访问网站 <a href="https://github.com/git/git.git" target="_blank" rel="noopener">https://github.com/git/git.git</a><br>找到 ”contrib/completion/” 目录下的git-completion.bash ，<br>然后点击编辑，拷贝其内容，复制到文本文件，保存为 git-completion.bash 文件<br>然后将文件用命令拷贝到 ～/ 目录下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp xxx/git-completion.bash ~/.git-completion.bash</span><br></pre></td></tr></table></figure></p><p>xxx 为文件所在目录，注意拷贝后的文件名称为 .git-completion.bash</p><p>在~/.bashrc文件（该目录下如果没有，新建一个）中添加下边的内容<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.git-completion.bash</span><br></pre></td></tr></table></figure></p><h3 id="三、-启动-终端输入"><a href="#三、-启动-终端输入" class="headerlink" title="三、 启动: 终端输入"></a>三、 启动: 终端输入</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> ~/.git-completion.bash</span><br></pre></td></tr></table></figure><p>将下面这句话 添加到~/.bash_profile</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [ -f ~/.git-completion.bash ]; <span class="keyword">then</span></span><br><span class="line">   . ~/.git-completion.bash</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>不添加想要补全起作用，每次都需要执行<br>source ~/.git-completion.bash<br>补全才能生效</p>]]></content>
      
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Mac下安装php-redis扩展</title>
      <link href="/mac-phpredis/"/>
      <url>/mac-phpredis/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="一-、下载redis"><a href="#一-、下载redis" class="headerlink" title="一 、下载redis"></a>一 、下载redis</h3><p>Down <a href="http://pecl.php.net/package/redis" target="_blank" rel="noopener">http://pecl.php.net/package/redis</a></p><h3 id="二、解压安装并进入redis目录"><a href="#二、解压安装并进入redis目录" class="headerlink" title="二、解压安装并进入redis目录"></a>二、解压安装并进入redis目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tar xzf redis-2.2.7.tgz</span><br><span class="line">$ <span class="built_in">cd</span> redis-2.2.7</span><br></pre></td></tr></table></figure><h3 id="三、在redis文件夹下，生成configure配置文件"><a href="#三、在redis文件夹下，生成configure配置文件" class="headerlink" title="三、在redis文件夹下，生成configure配置文件"></a>三、在redis文件夹下，生成configure配置文件</h3><h4 id="注意-如果存在多个版本PHP-需查找phpize所需路径"><a href="#注意-如果存在多个版本PHP-需查找phpize所需路径" class="headerlink" title="注意:(如果存在多个版本PHP,需查找phpize所需路径)"></a>注意:(如果存在多个版本PHP,需查找phpize所需路径)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/<span class="built_in">local</span>/php/bin/phpize</span><br></pre></td></tr></table></figure><h4 id="成功出现"><a href="#成功出现" class="headerlink" title="成功出现:"></a>成功出现:</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Configuring <span class="keyword">for</span>:</span><br><span class="line">PHP Api Version: 20090626</span><br><span class="line">Zend Module Api No: 20090626</span><br><span class="line">Zend Extension Api No: 220090626</span><br></pre></td></tr></table></figure><h3 id="四、安装-要用root用户"><a href="#四、安装-要用root用户" class="headerlink" title="四、安装(要用root用户)"></a>四、安装(要用root用户)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./configure –with-php-config=/usr/<span class="built_in">local</span>/php/bin/php-config 或(./configure)</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br></pre></td></tr></table></figure><h3 id="五、在php配置文件php-ini里加载redis扩展"><a href="#五、在php配置文件php-ini里加载redis扩展" class="headerlink" title="五、在php配置文件php.ini里加载redis扩展"></a>五、在php配置文件php.ini里加载redis扩展</h3><h4 id="注意-resis-so安装路径是否在默认路径-否”-”后面用绝对路径"><a href="#注意-resis-so安装路径是否在默认路径-否”-”后面用绝对路径" class="headerlink" title="注意:(resis.so安装路径是否在默认路径,否”=”后面用绝对路径)"></a>注意:(resis.so安装路径是否在默认路径,否”=”后面用绝对路径)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=redis.so</span><br></pre></td></tr></table></figure><h4 id="重启php-fpm"><a href="#重启php-fpm" class="headerlink" title="重启php-fpm"></a>重启php-fpm</h4><h4 id="查看扩展安装情况"><a href="#查看扩展安装情况" class="headerlink" title="查看扩展安装情况"></a>查看扩展安装情况</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php -m |grep redis</span><br></pre></td></tr></table></figure><h4 id="或者在PHP工程目录的index-php顶端"><a href="#或者在PHP工程目录的index-php顶端" class="headerlink" title="或者在PHP工程目录的index.php顶端"></a>或者在PHP工程目录的index.php顶端</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php phpinfo(); die;?&gt;</span><br></pre></td></tr></table></figure><h4 id="至此redis扩展应该安装成功-相关命令"><a href="#至此redis扩展应该安装成功-相关命令" class="headerlink" title="至此redis扩展应该安装成功,相关命令"></a>至此redis扩展应该安装成功,相关命令</h4><h5 id="查找文件-path路径-’-‘为根目录"><a href="#查找文件-path路径-’-‘为根目录" class="headerlink" title="查找文件(path路径,’/‘为根目录)"></a>查找文件(path路径,’/‘为根目录)</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find path -name <span class="string">"xxx"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mac </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Arttemplate</title>
      <link href="/js-arttemplate/"/>
      <url>/js-arttemplate/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="编写模板"><a href="#编写模板" class="headerlink" title="编写模板"></a>编写模板</h3><h4 id="使用一个type-”text-html”的script标签存放模板：-或者-tpl文件"><a href="#使用一个type-”text-html”的script标签存放模板：-或者-tpl文件" class="headerlink" title="使用一个type=”text/html”的script标签存放模板：(或者.tpl文件)"></a>使用一个type=”text/html”的script标签存放模板：(或者.tpl文件)</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script id=<span class="string">"test"</span> <span class="built_in">type</span>=<span class="string">"text/html"</span>&gt;</span><br><span class="line">&lt;h1&gt;&#123;&#123;title&#125;&#125;&lt;/h1&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">    &#123;&#123;each list as value i&#125;&#125;</span><br><span class="line">        &lt;li&gt;索引 &#123;&#123;i + 1&#125;&#125; ：&#123;&#123;value&#125;&#125;&lt;/li&gt;</span><br><span class="line">    &#123;&#123;/each&#125;&#125;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="渲染模板"><a href="#渲染模板" class="headerlink" title="渲染模板"></a>渲染模板</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">var data = &#123;</span><br><span class="line">    title: <span class="string">'标签'</span>,</span><br><span class="line">    list: [<span class="string">'文艺'</span>, <span class="string">'博客'</span>, <span class="string">'摄影'</span>, <span class="string">'电影'</span>, <span class="string">'民谣'</span>, <span class="string">'旅行'</span>, <span class="string">'吉他'</span>]</span><br><span class="line">&#125;;</span><br><span class="line">var html = template(<span class="string">'test'</span>, data);</span><br><span class="line">document.getElementById(<span class="string">'content'</span>).innerHTML = html;</span><br></pre></td></tr></table></figure><p><a href="http://aui.github.io/artTemplate/demo/basic.html" target="_blank" rel="noopener">Demo</a></p><h3 id="简洁语法"><a href="#简洁语法" class="headerlink" title="简洁语法"></a>简洁语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="keyword">if</span> admin&#125;&#125;</span><br><span class="line">    &#123;&#123;include <span class="string">'admin_content'</span>&#125;&#125;</span><br><span class="line"></span><br><span class="line">    &#123;&#123;each list&#125;&#125;</span><br><span class="line">        &lt;div&gt;&#123;&#123;<span class="variable">$index</span>&#125;&#125;. &#123;&#123;<span class="variable">$value</span>.user&#125;&#125;&lt;/div&gt;</span><br><span class="line">    &#123;&#123;/each&#125;&#125;</span><br><span class="line">&#123;&#123;/<span class="keyword">if</span>&#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="定义扩展函数"><a href="#定义扩展函数" class="headerlink" title="定义扩展函数"></a>定义扩展函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">template.helper(name, callback)</span><br></pre></td></tr></table></figure><h3 id="requirejs使用template"><a href="#requirejs使用template" class="headerlink" title="requirejs使用template"></a>requirejs使用template</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">require.config(&#123;</span><br><span class="line">    baseUrl: <span class="string">"../"</span>,</span><br><span class="line">    urlArgs: <span class="string">"bust="</span> + (new Date()).getTime(),</span><br><span class="line">    paths: &#123;</span><br><span class="line">        <span class="string">"art-template"</span>:<span class="string">'Js/template'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">define([<span class="string">'art-template'</span>],<span class="keyword">function</span>(template)&#123;</span><br><span class="line">    var html=template(<span class="string">'id'</span>,obj);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Template日期格式化组件"><a href="#Template日期格式化组件" class="headerlink" title="Template日期格式化组件"></a>Template日期格式化组件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 对日期进行格式化，</span><br><span class="line"> * @param date 要格式化的日期</span><br><span class="line"> * @param format 进行格式化的模式字符串</span><br><span class="line"> *     支持的模式字母有：</span><br><span class="line"> *     y:年,</span><br><span class="line"> *     M:年中的月份(1-12),</span><br><span class="line"> *     d:月份中的天(1-31),</span><br><span class="line"> *     h:小时(0-23),</span><br><span class="line"> *     m:分(0-59),</span><br><span class="line"> *     s:秒(0-59),</span><br><span class="line"> *     S:毫秒(0-999),</span><br><span class="line"> *     q:季度(1-4)</span><br><span class="line"> * @<span class="built_in">return</span> String</span><br><span class="line"> * @author yanis.wang</span><br><span class="line"> * @seehttp://yaniswang.com/frontend/2013/02/16/dateformat-performance/</span><br><span class="line"> */</span><br><span class="line">template.helper(<span class="string">'dateFormat'</span>, <span class="keyword">function</span> (date, format) &#123;</span><br><span class="line">    <span class="keyword">if</span> (typeof date === <span class="string">'string'</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!/[\-|\s]/.<span class="built_in">test</span>(date)) &#123;</span><br><span class="line">            date = parseInt(date);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    date = new Date(date);</span><br><span class="line"></span><br><span class="line">    var map = &#123;</span><br><span class="line">        <span class="string">"M"</span>: date.getMonth() + 1, //月份</span><br><span class="line">        <span class="string">"d"</span>: date.getDate(), //日</span><br><span class="line">        <span class="string">"h"</span>: date.getHours(), //小时</span><br><span class="line">        <span class="string">"m"</span>: date.getMinutes(), //分</span><br><span class="line">        <span class="string">"s"</span>: date.getSeconds(), //秒</span><br><span class="line">        <span class="string">"q"</span>: Math.floor((date.getMonth() + 3) / 3), //季度</span><br><span class="line">        <span class="string">"S"</span>: date.getMilliseconds() //毫秒</span><br><span class="line">    &#125;;</span><br><span class="line">    format = format.replace(/([yMdhmsqS])+/g, <span class="keyword">function</span>(all, t)&#123;</span><br><span class="line">        var v = map[t];</span><br><span class="line">        <span class="keyword">if</span>(v !== undefined)&#123;</span><br><span class="line">            <span class="keyword">if</span>(all.length &gt; 1)&#123;</span><br><span class="line">                v = <span class="string">'0'</span> + v;</span><br><span class="line">                v = v.substr(v.length-2);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">return</span> v;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(t === <span class="string">'y'</span>)&#123;</span><br><span class="line">            <span class="built_in">return</span> (date.getFullYear() + <span class="string">''</span>).substr(4 - all.length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">return</span> all;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">return</span> format;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>More info: <a href="https://github.com/aui/artTemplate" target="_blank" rel="noopener">arttemplate</a></p>]]></content>
      
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Hexo编辑发布</title>
      <link href="/hexo-write/"/>
      <url>/hexo-write/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>Cmd命令大全</title>
      <link href="/note-cmd/"/>
      <url>/note-cmd/</url>
      
        <content type="html"><![CDATA[<h3 id="【mac】"><a href="#【mac】" class="headerlink" title="【mac】"></a>【mac】</h3><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">功能描述</th><th style="text-align:left">语句</th></tr></thead><tbody><tr><td style="text-align:left">目录操作</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">mkdir</td><td style="text-align:left">创建一个目录</td><td style="text-align:left">mkdir dirname</td></tr><tr><td style="text-align:left">rmdir</td><td style="text-align:left">删除一个目录</td><td style="text-align:left">rmdir dirname</td></tr><tr><td style="text-align:left">mvdir</td><td style="text-align:left">移动或重命名一个目录</td><td style="text-align:left">mvdir dir1 dir2</td></tr><tr><td style="text-align:left">chmod</td><td style="text-align:left">给目录赋予权限</td><td style="text-align:left">chmod dir1 777</td></tr><tr><td style="text-align:left">pwd</td><td style="text-align:left">显示当前目录的路径名</td><td style="text-align:left">pwd</td></tr><tr><td style="text-align:left">ls</td><td style="text-align:left">显示当前目录的内容</td><td style="text-align:left">ls -la</td></tr><tr><td style="text-align:left">文件操作</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">cat</td><td style="text-align:left">显示或连接文件</td><td style="text-align:left">cat filename</td></tr><tr><td style="text-align:left">od</td><td style="text-align:left">显示非文本文件的内容</td><td style="text-align:left">od -c filename</td></tr><tr><td style="text-align:left">cp</td><td style="text-align:left">复制文件或目录</td><td style="text-align:left">cp file1 file2</td></tr><tr><td style="text-align:left">rm</td><td style="text-align:left">删除文件或目录</td><td style="text-align:left">rm -rf filename</td></tr><tr><td style="text-align:left">mv</td><td style="text-align:left">改变文件名或所在目录</td><td style="text-align:left">mv file1 file2</td></tr><tr><td style="text-align:left">find</td><td style="text-align:left">使用匹配表达式查找文件</td><td style="text-align:left">find /或. -name &quot;*.c&quot; -print</td></tr><tr><td style="text-align:left">file</td><td style="text-align:left">显示文件类型</td><td style="text-align:left">file filename</td></tr><tr><td style="text-align:left">选择操作</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">head</td><td style="text-align:left">显示文件的最初几行</td><td style="text-align:left">head -20 filename</td></tr><tr><td style="text-align:left">tail</td><td style="text-align:left">显示文件的最后几行</td><td style="text-align:left">tail -15 filename</td></tr><tr><td style="text-align:left">diff</td><td style="text-align:left">比较并显示两个文件的差异</td><td style="text-align:left">diff file1 file2</td></tr><tr><td style="text-align:left">sort</td><td style="text-align:left">排序或归并文件</td><td style="text-align:left">sort -d -f -u file1</td></tr><tr><td style="text-align:left">uniq</td><td style="text-align:left">去掉文件中的重复行</td><td style="text-align:left">uniq file1 file2</td></tr><tr><td style="text-align:left">comm</td><td style="text-align:left">显示两有序文件的公共和非公共行</td><td style="text-align:left">comm file1 file2</td></tr><tr><td style="text-align:left">wc</td><td style="text-align:left">统计文件的字符数、词数和行数</td><td style="text-align:left">wc filename</td></tr><tr><td style="text-align:left">nl</td><td style="text-align:left">给文件加上行号</td><td style="text-align:left">nl file1 &gt;file2</td></tr><tr><td style="text-align:left">进程操作</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">lsof</td><td style="text-align:left">显示该端口号下进程</td><td style="text-align:left">lsof -i:9000</td></tr><tr><td style="text-align:left">ps</td><td style="text-align:left">显示进程当前状态</td><td style="text-align:left">ps u</td></tr><tr><td style="text-align:left">kill</td><td style="text-align:left">终止进程</td><td style="text-align:left">kill -9 9000</td></tr><tr><td style="text-align:left">时间操作</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">date</td><td style="text-align:left">显示系统的当前日期和时间</td><td style="text-align:left">date</td></tr><tr><td style="text-align:left">cal</td><td style="text-align:left">显示日历</td><td style="text-align:left">cal 8 1996</td></tr><tr><td style="text-align:left">time</td><td style="text-align:left">统计程序的执行时间</td><td style="text-align:left">time a.out</td></tr><tr><td style="text-align:left">网络与通信操作</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">telnet</td><td style="text-align:left">远程登录</td><td style="text-align:left">telnet hpc.sp.net.edu.cn</td></tr><tr><td style="text-align:left">rlogin</td><td style="text-align:left">远程登录</td><td style="text-align:left">rlogin hostname -l username</td></tr><tr><td style="text-align:left">rsh</td><td style="text-align:left">在远程主机执行指定命令</td><td style="text-align:left">rsh f01n03 date</td></tr><tr><td style="text-align:left">ftp</td><td style="text-align:left">在本地主机与远程主机之间传输文件</td><td style="text-align:left">ftp ftp.sp.net.edu.cn</td></tr><tr><td style="text-align:left">rcp</td><td style="text-align:left">在本地主机与远程主机之间复制文件</td><td style="text-align:left">rcp file1 host1:file2</td></tr><tr><td style="text-align:left">ping</td><td style="text-align:left">给一个网络主机发送 回应请求</td><td style="text-align:left">ping hpc.sp.net.edu.cn</td></tr><tr><td style="text-align:left">mail</td><td style="text-align:left">阅读和发送电子邮件</td><td style="text-align:left">mail</td></tr><tr><td style="text-align:left">write</td><td style="text-align:left">给另一用户发送报文</td><td style="text-align:left">write username pts/1</td></tr><tr><td style="text-align:left">Korn Shell 命令</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">history</td><td style="text-align:left">列出最近执行过的 几条命令及编号</td><td style="text-align:left">history</td></tr><tr><td style="text-align:left">r</td><td style="text-align:left">重复执行最近执行过的 某条命令</td><td style="text-align:left">r -2</td></tr><tr><td style="text-align:left">alias</td><td style="text-align:left">给某个命令定义别名</td><td style="text-align:left">alias del=rm -i</td></tr><tr><td style="text-align:left">unalias</td><td style="text-align:left">取消对某个别名的定义</td><td style="text-align:left">unalias del</td></tr><tr><td style="text-align:left">其它命令</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">uname</td><td style="text-align:left">显示操作系统的有关信息</td><td style="text-align:left">uname -a</td></tr><tr><td style="text-align:left">clear</td><td style="text-align:left">清除屏幕或窗口内容</td><td style="text-align:left">clear</td></tr><tr><td style="text-align:left">env</td><td style="text-align:left">显示当前所有设置过的环境变量</td><td style="text-align:left">env</td></tr><tr><td style="text-align:left">who</td><td style="text-align:left">列出当前登录的所有用户</td><td style="text-align:left">who</td></tr><tr><td style="text-align:left">whoami</td><td style="text-align:left">显示当前正进行操作的用户名</td><td style="text-align:left">whoami</td></tr><tr><td style="text-align:left">df /tmp</td><td style="text-align:left">显示文件系统的总空间和可用空间</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">历史操作</td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:left">history</td><td style="text-align:left">显示历史执行的命令</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">history n</td><td style="text-align:left">显示前n条</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">history 竖杠 more</td><td style="text-align:left">逐条显示更多</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">!n</td><td style="text-align:left">粘贴执行第n条命令</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">!!</td><td style="text-align:left">粘贴执行第上条命令</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">!?xxx?</td><td style="text-align:left">检索xxx字符串的匹配命令</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">fc n</td><td style="text-align:left">编辑第n条命令</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">-c</td><td style="text-align:left">清空历史命令</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">-a</td><td style="text-align:left">将目前新增的history指令新增入histfiles中，若没有加histfiles,则预设写入 ~/.bash_history</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">-r</td><td style="text-align:left">将 histfiles 的内容读到目前这个 shell 的 history 记忆中</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">-w</td><td style="text-align:left">将目前的 history 记忆内容写入 histfiles。</td></tr></tbody></table><h3 id="【windows】"><a href="#【windows】" class="headerlink" title="【windows】"></a>【windows】</h3><p>命令-功能描述<br>netstat -ano 【查看所有的端口占用情况】<br>netstat -aon|findstr “3000” 【查看指定端口的占用情况】<br>tasklist|findstr “2017” 【查看PID对应的进程】<br>taskkill /f /t /im xxx.exe 【结束该进程】</p>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
    </entry>
    
    <entry>
      <title>HotKeys快捷键大全</title>
      <link href="/note-hotkeys/"/>
      <url>/note-hotkeys/</url>
      
        <content type="html"><![CDATA[<h3 id="【WebStorm】"><a href="#【WebStorm】" class="headerlink" title="【WebStorm】"></a>【WebStorm】</h3><h4 id="mac热键"><a href="#mac热键" class="headerlink" title="mac热键"></a>mac热键</h4><p>⌘——Command<br>⌃——Control<br>⌥——alt<br>⇧——Shift<br>⇪——Caps Lock<br>fn——功能键就是fn</p><h5 id="编辑"><a href="#编辑" class="headerlink" title="编辑"></a>编辑</h5><p><code>Command+alt+T</code> 用 (if..else, try..catch, for, etc.)包住</p><p><code>Command</code>+/ 注释/取消注释的行注释</p><p><code>Command+alt+/</code> 注释/取消注释与块注释</p><p><code>alt+↑</code> 向上选取代码块</p><p><code>alt+↓</code> 向下选取代码块</p><p><code>Command+alt+L</code> 格式化代码</p><p><code>tab,shift+tab</code> 调整缩进</p><p><code>Control+alt+I</code> 快速调整缩进</p><p><code>Command+C</code> 复制</p><p><code>Command+X</code> 剪切</p><p><code>Command+V</code> 粘贴</p><p><code>Command+shift+V</code> 从剪贴板里选择粘贴</p><p><code>Command+D</code> 复制代码副本</p><p><code>Command+delete</code> 删除当前行</p><p><code>Control+Shift+J</code> 清除缩进变成单行</p><p><code>shift+回车</code> 快速换行</p><p><code>Command+回车</code> 换行光标还在原先位置</p><p><code>Command+shift+U</code> 大小写转换</p><p><code>Command+shift+[</code> 文件选项卡快速切换</p><p><code>Command+加号,Command+减号</code> 收缩代码块</p><p><code>Command+shift+加号，Command+shift+减号</code> 收缩整个文档的代码块</p><p><code>Command+W</code> 关闭当前文件选项卡</p><p><code>alt+单击</code> 光标在多处定位</p><p><code>Control+shift+J</code> 把下面行的缩进收上来</p><p><code>shift+F6</code> 高级修改，可快速修改光标所在的标签、变量、函数等</p><p><code>alt+/</code> 代码补全</p><h5 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h5><p><code>Control+alt+R</code> 运行项目</p><p><code>Command+Control+R</code> 运行Debug</p><p><code>Command+F8</code> 添加断点</p><p><code>Command+shift+F8</code> 打开断点列表</p><h5 id="导航"><a href="#导航" class="headerlink" title="导航"></a>导航</h5><p><code>Command+O</code> 跳转到某个类</p><p><code>Command+shift+O</code> 跳转到某个文件</p><p><code>Command+alt+O</code> 跳转到某个符号</p><p><code>Control+←,Control+→</code> 转到上/下一个编辑器选项卡</p><p><code>F12</code> 打开之前打开的工具窗口（TODO、终端等）</p><p><code>Command+L</code> 跳转行</p><p><code>Command+E</code> 弹出最近文件</p><p><code>Command+alt+←,Command+alt+→</code> 向前向后导航到代码块交接处（一般是空行处）</p><p><code>Command+shift+delete</code> 导航到上一个编辑位置的位置</p><p><code>Command+B</code> 跳转到变量声明处</p><p><code>Control+J</code> 获取变量相关信息（类型、注释等，注释是拿上一行的注释）</p><p><code>Command+Y</code> 小浮窗显示变量声明时的行</p><p><code>Command+[,Command+]</code> 光标现在的位置和之前的位置切换</p><p><code>Command+F12</code> 文件结构弹出式菜单</p><p><code>alt+H</code> 类的层次结构</p><p><code>F2,shift+F2</code> 切换到上\下一个突出错误的位置</p><p><code>Command+↑</code> 跳转到导航栏</p><p><code>F3</code> 添加书签</p><p><code>alt+F3</code> 添加带助记的书签</p><p><code>alt+1,alt+2…</code> 切换到相应助记的书签位置</p><p><code>Command+F3</code> 打开书签列表</p><h5 id="VCS-本地历史记录"><a href="#VCS-本地历史记录" class="headerlink" title="VCS/本地历史记录"></a>VCS/本地历史记录</h5><p><code>control+V</code> 打开VST小浮窗</p><p><code>Command+K</code> 提交项目</p><p><code>Command+T</code> 更新项目</p><p><code>alt+shift+C</code> 打开最近修改列表</p><h5 id="搜索和替换"><a href="#搜索和替换" class="headerlink" title="搜索和替换"></a>搜索和替换</h5><p><code>Command+F</code> 搜索</p><p><code>Command+R</code> 替换</p><p><code>Command+G</code> 查找下一个</p><p><code>Command+shift+G</code> 查找下一个</p><p><code>Command+shift+F</code> 按路径搜索</p><p><code>Command+shift+R</code> 按路径替换</p><h5 id="选中文字的搜索"><a href="#选中文字的搜索" class="headerlink" title="选中文字的搜索"></a>选中文字的搜索</h5><p><code>Command+F7</code> 向声明的地方搜索并选中</p><p><code>Command+shift+F7</code> 打开搜索框进行搜索</p><p><code>Command+alt+F7</code> 打开小浮窗显示搜索列表</p><h5 id="对项目文件的操作（重构）"><a href="#对项目文件的操作（重构）" class="headerlink" title="对项目文件的操作（重构）"></a>对项目文件的操作（重构）</h5><p><code>F5</code> 复制文件到某个目录</p><p><code>F6</code> 移动文件到某个目录</p><p><code>Command+delete</code> 安全删除</p><p><code>shift+F6</code> 重命名</p><h5 id="全局的"><a href="#全局的" class="headerlink" title="全局的"></a>全局的</h5><p><code>双击shift</code> 弹出小浮窗搜索所有</p><p><code>Command+~</code> 切换项目窗口</p><p><code>Command+切换项目 Command+shift+</code> 反向切换项目</p><p><code>Command+shift+A</code> 整个工程的查找操作</p><p><code>Command+1,Command+2…</code> 打开各种工具窗口</p><p><code>alt+shift+F</code> 把文件添加到收藏夹</p><p><code>alt+shift+I</code> 打开项目描述</p><p><code>alt+~</code> 快速切换当前计划</p><p><code>Command+,</code> 设置编辑器</p><p><code>Control+Tab</code> 选项卡和工具窗口之间进行切换</p><p><code>alert+回车</code> 显示npm版本升级列表</p>]]></content>
      
      
      <categories>
          
          <category> note </category>
          
      </categories>
      
      
    </entry>
    
  
  
</search>
